{
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": [
        "string",
        "null"
      ],
      "enum": [
        "kafka.strimzi.io/v1beta2"
      ]
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": [
        "string",
        "null"
      ],
      "enum": [
        "Kafka"
      ]
    },
    "metadata": {
      "description": "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.",
      "type": [
        "object",
        "null"
      ],
      "properties": {
        "annotations": {
          "description": "Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations",
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "creationTimestamp": {
          "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.",
          "type": [
            "string",
            "null"
          ],
          "format": "date-time"
        },
        "deletionGracePeriodSeconds": {
          "description": "Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.",
          "type": [
            "integer",
            "null"
          ],
          "format": "int64"
        },
        "deletionTimestamp": {
          "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.",
          "type": [
            "string",
            "null"
          ],
          "format": "date-time"
        },
        "finalizers": {
          "description": "Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "type": [
              "string",
              "null"
            ]
          },
          "x-kubernetes-list-type": "set",
          "x-kubernetes-patch-strategy": "merge"
        },
        "generateName": {
          "description": "GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\n\nIf this field is specified and the generated name exists, the server will return a 409.\n\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency",
          "type": [
            "string",
            "null"
          ]
        },
        "generation": {
          "description": "A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.",
          "type": [
            "integer",
            "null"
          ],
          "format": "int64"
        },
        "labels": {
          "description": "Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels",
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "managedFields": {
          "description": "ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn't need to set or understand this field. A workflow can be the user's name, a controller's name, or the name of a specific apply path like \"ci-cd\". The set of fields is always in the version that the workflow used when modifying the object.",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "description": "ManagedFieldsEntry is a workflow-id, a FieldSet and the group version of the resource that the fieldset applies to.",
            "type": [
              "object",
              "null"
            ],
            "properties": {
              "apiVersion": {
                "description": "APIVersion defines the version of this resource that this field set applies to. The format is \"group/version\" just like the top-level APIVersion field. It is necessary to track the version of a field set because it cannot be automatically converted.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "fieldsType": {
                "description": "FieldsType is the discriminator for the different fields format and version. There is currently only one possible value: \"FieldsV1\"",
                "type": [
                  "string",
                  "null"
                ]
              },
              "fieldsV1": {
                "description": "FieldsV1 stores a set of fields in a data structure like a Trie, in JSON format.\n\nEach key is either a '.' representing the field itself, and will always map to an empty set, or a string representing a sub-field or item. The string will follow one of these four formats: 'f:<name>', where <name> is the name of a field in a struct, or key in a map 'v:<value>', where <value> is the exact json formatted value of a list item 'i:<index>', where <index> is position of a item in a list 'k:<keys>', where <keys> is a map of  a list item's key fields to their unique values If a key maps to an empty Fields value, the field that key represents is part of the set.\n\nThe exact format is defined in sigs.k8s.io/structured-merge-diff",
                "type": [
                  "object",
                  "null"
                ]
              },
              "manager": {
                "description": "Manager is an identifier of the workflow managing these fields.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "operation": {
                "description": "Operation is the type of operation which lead to this ManagedFieldsEntry being created. The only valid values for this field are 'Apply' and 'Update'.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "subresource": {
                "description": "Subresource is the name of the subresource used to update that object, or empty string if the object was updated through the main resource. The value of this field is used to distinguish between managers, even if they share the same name. For example, a status update will be distinct from a regular update using the same manager name. Note that the APIVersion field is not related to the Subresource field and it always corresponds to the version of the main resource.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "time": {
                "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.",
                "type": [
                  "string",
                  "null"
                ],
                "format": "date-time"
              }
            }
          },
          "x-kubernetes-list-type": "atomic"
        },
        "name": {
          "description": "Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names",
          "type": [
            "string",
            "null"
          ]
        },
        "namespace": {
          "description": "Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \"default\" namespace, but \"default\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\n\nMust be a DNS_LABEL. Cannot be updated. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces",
          "type": [
            "string",
            "null"
          ]
        },
        "ownerReferences": {
          "description": "List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "description": "OwnerReference contains enough information to let you identify an owning object. An owning object must be in the same namespace as the dependent, or be cluster-scoped, so there is no namespace field.",
            "type": [
              "object",
              "null"
            ],
            "required": [
              "apiVersion",
              "kind",
              "name",
              "uid"
            ],
            "properties": {
              "apiVersion": {
                "description": "API version of the referent.",
                "type": "string"
              },
              "blockOwnerDeletion": {
                "description": "If true, AND if the owner has the \"foregroundDeletion\" finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. See https://kubernetes.io/docs/concepts/architecture/garbage-collection/#foreground-deletion for how the garbage collector interacts with this field and enforces the foreground deletion. Defaults to false. To set this field, a user needs \"delete\" permission of the owner, otherwise 422 (Unprocessable Entity) will be returned.",
                "type": [
                  "boolean",
                  "null"
                ]
              },
              "controller": {
                "description": "If true, this reference points to the managing controller.",
                "type": [
                  "boolean",
                  "null"
                ]
              },
              "kind": {
                "description": "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                "type": "string"
              },
              "name": {
                "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names",
                "type": "string"
              },
              "uid": {
                "description": "UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids",
                "type": "string"
              }
            },
            "x-kubernetes-map-type": "atomic"
          },
          "x-kubernetes-list-map-keys": [
            "uid"
          ],
          "x-kubernetes-list-type": "map",
          "x-kubernetes-patch-merge-key": "uid",
          "x-kubernetes-patch-strategy": "merge"
        },
        "resourceVersion": {
          "description": "An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\n\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
          "type": [
            "string",
            "null"
          ]
        },
        "selfLink": {
          "description": "Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.",
          "type": [
            "string",
            "null"
          ]
        },
        "uid": {
          "description": "UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\n\nPopulated by the system. Read-only. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids",
          "type": [
            "string",
            "null"
          ]
        }
      }
    },
    "spec": {
      "description": "The specification of the Kafka cluster.",
      "type": [
        "object",
        "null"
      ],
      "required": [
        "kafka"
      ],
      "properties": {
        "clientsCa": {
          "description": "Configuration of the clients certificate authority.",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "certificateExpirationPolicy": {
              "description": "How should CA certificate expiration be handled when `generateCertificateAuthority=true`. The default is for a new CA certificate to be generated reusing the existing private key.",
              "type": [
                "string",
                "null"
              ],
              "enum": [
                "renew-certificate",
                "replace-key"
              ]
            },
            "generateCertificateAuthority": {
              "description": "If true then Certificate Authority certificates will be generated automatically. Otherwise the user will need to provide a Secret with the CA certificate. Default is true.",
              "type": [
                "boolean",
                "null"
              ]
            },
            "generateSecretOwnerReference": {
              "description": "If `true`, the Cluster and Client CA Secrets are configured with the `ownerReference` set to the `Kafka` resource. If the `Kafka` resource is deleted when `true`, the CA Secrets are also deleted. If `false`, the `ownerReference` is disabled. If the `Kafka` resource is deleted when `false`, the CA Secrets are retained and available for reuse. Default is `true`.",
              "type": [
                "boolean",
                "null"
              ]
            },
            "renewalDays": {
              "description": "The number of days in the certificate renewal period. This is the number of days before the a certificate expires during which renewal actions may be performed. When `generateCertificateAuthority` is true, this will cause the generation of a new certificate. When `generateCertificateAuthority` is true, this will cause extra logging at WARN level about the pending certificate expiry. Default is 30.",
              "type": [
                "integer",
                "null"
              ],
              "minimum": 1
            },
            "validityDays": {
              "description": "The number of days generated certificates should be valid for. The default is 365.",
              "type": [
                "integer",
                "null"
              ],
              "minimum": 1
            }
          }
        },
        "clusterCa": {
          "description": "Configuration of the cluster certificate authority.",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "certificateExpirationPolicy": {
              "description": "How should CA certificate expiration be handled when `generateCertificateAuthority=true`. The default is for a new CA certificate to be generated reusing the existing private key.",
              "type": [
                "string",
                "null"
              ],
              "enum": [
                "renew-certificate",
                "replace-key"
              ]
            },
            "generateCertificateAuthority": {
              "description": "If true then Certificate Authority certificates will be generated automatically. Otherwise the user will need to provide a Secret with the CA certificate. Default is true.",
              "type": [
                "boolean",
                "null"
              ]
            },
            "generateSecretOwnerReference": {
              "description": "If `true`, the Cluster and Client CA Secrets are configured with the `ownerReference` set to the `Kafka` resource. If the `Kafka` resource is deleted when `true`, the CA Secrets are also deleted. If `false`, the `ownerReference` is disabled. If the `Kafka` resource is deleted when `false`, the CA Secrets are retained and available for reuse. Default is `true`.",
              "type": [
                "boolean",
                "null"
              ]
            },
            "renewalDays": {
              "description": "The number of days in the certificate renewal period. This is the number of days before the a certificate expires during which renewal actions may be performed. When `generateCertificateAuthority` is true, this will cause the generation of a new certificate. When `generateCertificateAuthority` is true, this will cause extra logging at WARN level about the pending certificate expiry. Default is 30.",
              "type": [
                "integer",
                "null"
              ],
              "minimum": 1
            },
            "validityDays": {
              "description": "The number of days generated certificates should be valid for. The default is 365.",
              "type": [
                "integer",
                "null"
              ],
              "minimum": 1
            }
          }
        },
        "cruiseControl": {
          "description": "Configuration for Cruise Control deployment. Deploys a Cruise Control instance when specified.",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "apiUsers": {
              "description": "Configuration of the Cruise Control REST API users.",
              "type": [
                "object",
                "null"
              ],
              "required": [
                "type",
                "valueFrom"
              ],
              "properties": {
                "type": {
                  "description": "Type of the Cruise Control API users configuration. Supported format is: `hashLoginService`.",
                  "type": "string",
                  "enum": [
                    "hashLoginService"
                  ]
                },
                "valueFrom": {
                  "description": "Secret from which the custom Cruise Control API authentication credentials are read.",
                  "type": "object",
                  "properties": {
                    "secretKeyRef": {
                      "description": "Selects a key of a Secret in the resource's namespace.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "key": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "name": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "optional": {
                          "type": [
                            "boolean",
                            "null"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            },
            "autoRebalance": {
              "description": "Auto-rebalancing on scaling related configuration listing the modes, when brokers are added or removed, with the corresponding rebalance template configurations.If this field is set, at least one mode has to be defined.",
              "type": [
                "array",
                "null"
              ],
              "minItems": 1,
              "items": {
                "type": [
                  "object",
                  "null"
                ],
                "required": [
                  "mode"
                ],
                "properties": {
                  "mode": {
                    "description": "Specifies the mode for automatically rebalancing when brokers are added or removed. Supported modes are `add-brokers` and `remove-brokers`. \n",
                    "type": "string",
                    "enum": [
                      "add-brokers",
                      "remove-brokers"
                    ]
                  },
                  "template": {
                    "description": "Reference to the KafkaRebalance custom resource to be used as the configuration template for the auto-rebalancing on scaling when running for the corresponding mode.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "properties": {
                      "name": {
                        "type": [
                          "string",
                          "null"
                        ]
                      }
                    }
                  }
                }
              }
            },
            "brokerCapacity": {
              "description": "The Cruise Control `brokerCapacity` configuration.",
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "cpu": {
                  "description": "Broker capacity for CPU resource in cores or millicores. For example, 1, 1.500, 1500m. For more information on valid CPU resource units see https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#meaning-of-cpu.",
                  "type": [
                    "string",
                    "null"
                  ],
                  "pattern": "^[0-9]+([.][0-9]{0,3}|[m]?)$"
                },
                "cpuUtilization": {
                  "description": "Broker capacity for CPU resource utilization as a percentage (0 - 100).",
                  "type": [
                    "integer",
                    "null"
                  ],
                  "maximum": 100,
                  "minimum": 0
                },
                "disk": {
                  "description": "Broker capacity for disk in bytes. Use a number value with either standard Kubernetes byte units (K, M, G, or T), their bibyte (power of two) equivalents (Ki, Mi, Gi, or Ti), or a byte value with or without E notation. For example, 100000M, 100000Mi, 104857600000, or 1e+11.",
                  "type": [
                    "string",
                    "null"
                  ],
                  "pattern": "^[0-9]+([.][0-9]*)?([KMGTPE]i?|e[0-9]+)?$"
                },
                "inboundNetwork": {
                  "description": "Broker capacity for inbound network throughput in bytes per second. Use an integer value with standard Kubernetes byte units (K, M, G) or their bibyte (power of two) equivalents (Ki, Mi, Gi) per second. For example, 10000KiB/s.",
                  "type": [
                    "string",
                    "null"
                  ],
                  "pattern": "^[0-9]+([KMG]i?)?B/s$"
                },
                "outboundNetwork": {
                  "description": "Broker capacity for outbound network throughput in bytes per second. Use an integer value with standard Kubernetes byte units (K, M, G) or their bibyte (power of two) equivalents (Ki, Mi, Gi) per second. For example, 10000KiB/s.",
                  "type": [
                    "string",
                    "null"
                  ],
                  "pattern": "^[0-9]+([KMG]i?)?B/s$"
                },
                "overrides": {
                  "description": "Overrides for individual brokers. The `overrides` property lets you specify a different capacity configuration for different brokers.",
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "required": [
                      "brokers"
                    ],
                    "properties": {
                      "brokers": {
                        "description": "List of Kafka brokers (broker identifiers).",
                        "type": "array",
                        "items": {
                          "type": [
                            "integer",
                            "null"
                          ]
                        }
                      },
                      "cpu": {
                        "description": "Broker capacity for CPU resource in cores or millicores. For example, 1, 1.500, 1500m. For more information on valid CPU resource units see https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#meaning-of-cpu.",
                        "type": [
                          "string",
                          "null"
                        ],
                        "pattern": "^[0-9]+([.][0-9]{0,3}|[m]?)$"
                      },
                      "inboundNetwork": {
                        "description": "Broker capacity for inbound network throughput in bytes per second. Use an integer value with standard Kubernetes byte units (K, M, G) or their bibyte (power of two) equivalents (Ki, Mi, Gi) per second. For example, 10000KiB/s.",
                        "type": [
                          "string",
                          "null"
                        ],
                        "pattern": "^[0-9]+([KMG]i?)?B/s$"
                      },
                      "outboundNetwork": {
                        "description": "Broker capacity for outbound network throughput in bytes per second. Use an integer value with standard Kubernetes byte units (K, M, G) or their bibyte (power of two) equivalents (Ki, Mi, Gi) per second. For example, 10000KiB/s.",
                        "type": [
                          "string",
                          "null"
                        ],
                        "pattern": "^[0-9]+([KMG]i?)?B/s$"
                      }
                    }
                  }
                }
              }
            },
            "config": {
              "description": "The Cruise Control configuration. For a full list of configuration options refer to https://github.com/linkedin/cruise-control/wiki/Configurations. Note that properties with the following prefixes cannot be set: bootstrap.servers, client.id, zookeeper., network., security., failed.brokers.zk.path,webserver.http., webserver.api.urlprefix, webserver.session.path, webserver.accesslog., two.step., request.reason.required,metric.reporter.sampler.bootstrap.servers, capacity.config.file, self.healing., ssl., kafka.broker.failure.detection.enable, topic.config.provider.class (with the exception of: ssl.cipher.suites, ssl.protocol, ssl.enabled.protocols, webserver.http.cors.enabled, webserver.http.cors.origin, webserver.http.cors.exposeheaders, webserver.security.enable, webserver.ssl.enable).",
              "x-kubernetes-preserve-unknown-fields": true
            },
            "image": {
              "description": "The container image used for Cruise Control pods. If no image name is explicitly specified, the image name corresponds to the name specified in the Cluster Operator configuration. If an image name is not defined in the Cluster Operator configuration, a default value is used.",
              "type": [
                "string",
                "null"
              ]
            },
            "jvmOptions": {
              "description": "JVM Options for the Cruise Control container.",
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "-XX": {
                  "description": "A map of -XX options to the JVM.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "additionalProperties": {
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                },
                "-Xms": {
                  "description": "-Xms option to to the JVM.",
                  "type": [
                    "string",
                    "null"
                  ],
                  "pattern": "^[0-9]+[mMgG]?$"
                },
                "-Xmx": {
                  "description": "-Xmx option to to the JVM.",
                  "type": [
                    "string",
                    "null"
                  ],
                  "pattern": "^[0-9]+[mMgG]?$"
                },
                "gcLoggingEnabled": {
                  "description": "Specifies whether the Garbage Collection logging is enabled. The default is false.",
                  "type": [
                    "boolean",
                    "null"
                  ]
                },
                "javaSystemProperties": {
                  "description": "A map of additional system properties which will be passed using the `-D` option to the JVM.",
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "properties": {
                      "name": {
                        "description": "The system property name.",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "value": {
                        "description": "The system property value.",
                        "type": [
                          "string",
                          "null"
                        ]
                      }
                    }
                  }
                }
              }
            },
            "livenessProbe": {
              "description": "Pod liveness checking for the Cruise Control container.",
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "failureThreshold": {
                  "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.",
                  "type": [
                    "integer",
                    "null"
                  ],
                  "minimum": 1
                },
                "initialDelaySeconds": {
                  "description": "The initial delay before first the health is first checked. Default to 15 seconds. Minimum value is 0.",
                  "type": [
                    "integer",
                    "null"
                  ],
                  "minimum": 0
                },
                "periodSeconds": {
                  "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.",
                  "type": [
                    "integer",
                    "null"
                  ],
                  "minimum": 1
                },
                "successThreshold": {
                  "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.",
                  "type": [
                    "integer",
                    "null"
                  ],
                  "minimum": 1
                },
                "timeoutSeconds": {
                  "description": "The timeout for each attempted health check. Default to 5 seconds. Minimum value is 1.",
                  "type": [
                    "integer",
                    "null"
                  ],
                  "minimum": 1
                }
              }
            },
            "logging": {
              "description": "Logging configuration (Log4j 2) for Cruise Control.",
              "type": [
                "object",
                "null"
              ],
              "required": [
                "type"
              ],
              "properties": {
                "loggers": {
                  "description": "A Map from logger name to logger level.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "additionalProperties": {
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                },
                "type": {
                  "description": "Logging type, must be either 'inline' or 'external'.",
                  "type": "string",
                  "enum": [
                    "inline",
                    "external"
                  ]
                },
                "valueFrom": {
                  "description": "`ConfigMap` entry where the logging configuration is stored. ",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "configMapKeyRef": {
                      "description": "Reference to the key in the ConfigMap containing the configuration.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "key": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "name": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "optional": {
                          "type": [
                            "boolean",
                            "null"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            },
            "metricsConfig": {
              "description": "Metrics configuration. Only `jmxPrometheusExporter` can be configured, as this component does not support `strimziMetricsReporter`.",
              "type": [
                "object",
                "null"
              ],
              "required": [
                "type"
              ],
              "properties": {
                "type": {
                  "description": "Metrics type. The supported types are `jmxPrometheusExporter` and `strimziMetricsReporter`. Type `jmxPrometheusExporter` uses the Prometheus JMX Exporter to expose Kafka JMX metrics in Prometheus format through an HTTP endpoint. Type `strimziMetricsReporter` uses the Strimzi Metrics Reporter to directly expose Kafka metrics in Prometheus format through an HTTP endpoint.",
                  "type": "string",
                  "enum": [
                    "jmxPrometheusExporter",
                    "strimziMetricsReporter"
                  ]
                },
                "valueFrom": {
                  "description": "ConfigMap entry where the Prometheus JMX Exporter configuration is stored.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "configMapKeyRef": {
                      "description": "Reference to the key in the ConfigMap containing the configuration.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "key": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "name": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "optional": {
                          "type": [
                            "boolean",
                            "null"
                          ]
                        }
                      }
                    }
                  }
                },
                "values": {
                  "description": "Configuration values for the Strimzi Metrics Reporter.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "allowList": {
                      "description": "A list of regex patterns to filter the metrics to collect. Should contain at least one element.",
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": [
                          "string",
                          "null"
                        ]
                      }
                    }
                  }
                }
              },
              "x-kubernetes-validations": [
                {
                  "message": "valueFrom property is required",
                  "rule": "self.type != 'jmxPrometheusExporter' || has(self.valueFrom)"
                },
                {
                  "message": "value type not supported",
                  "rule": "self.type != 'strimziMetricsReporter'"
                }
              ]
            },
            "readinessProbe": {
              "description": "Pod readiness checking for the Cruise Control container.",
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "failureThreshold": {
                  "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.",
                  "type": [
                    "integer",
                    "null"
                  ],
                  "minimum": 1
                },
                "initialDelaySeconds": {
                  "description": "The initial delay before first the health is first checked. Default to 15 seconds. Minimum value is 0.",
                  "type": [
                    "integer",
                    "null"
                  ],
                  "minimum": 0
                },
                "periodSeconds": {
                  "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.",
                  "type": [
                    "integer",
                    "null"
                  ],
                  "minimum": 1
                },
                "successThreshold": {
                  "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.",
                  "type": [
                    "integer",
                    "null"
                  ],
                  "minimum": 1
                },
                "timeoutSeconds": {
                  "description": "The timeout for each attempted health check. Default to 5 seconds. Minimum value is 1.",
                  "type": [
                    "integer",
                    "null"
                  ],
                  "minimum": 1
                }
              }
            },
            "resources": {
              "description": "CPU and memory resources to reserve for the Cruise Control container.",
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "claims": {
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "properties": {
                      "name": {
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "request": {
                        "type": [
                          "string",
                          "null"
                        ]
                      }
                    }
                  }
                },
                "limits": {
                  "type": [
                    "object",
                    "null"
                  ],
                  "additionalProperties": {
                    "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                    "x-kubernetes-int-or-string": true
                  }
                },
                "requests": {
                  "type": [
                    "object",
                    "null"
                  ],
                  "additionalProperties": {
                    "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                    "x-kubernetes-int-or-string": true
                  }
                }
              }
            },
            "template": {
              "description": "Template to specify how Cruise Control resources, `Deployments` and `Pods`, are generated.",
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "apiService": {
                  "description": "Template for Cruise Control API `Service`.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "ipFamilies": {
                      "description": "Specifies the IP Families used by the service. Available options are `IPv4` and `IPv6`. If unspecified, Kubernetes will choose the default value based on the `ipFamilyPolicy` setting.",
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": [
                          "string",
                          "null"
                        ],
                        "enum": [
                          "IPv4",
                          "IPv6"
                        ]
                      }
                    },
                    "ipFamilyPolicy": {
                      "description": "Specifies the IP Family Policy used by the service. Available options are `SingleStack`, `PreferDualStack` and `RequireDualStack`. `SingleStack` is for a single IP family. `PreferDualStack` is for two IP families on dual-stack configured clusters or a single IP family on single-stack clusters. `RequireDualStack` fails unless there are two IP families on dual-stack configured clusters. If unspecified, Kubernetes will choose the default value based on the service type.",
                      "type": [
                        "string",
                        "null"
                      ],
                      "enum": [
                        "SingleStack",
                        "PreferDualStack",
                        "RequireDualStack"
                      ]
                    },
                    "metadata": {
                      "description": "Metadata applied to the resource.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "annotations": {
                          "description": "Annotations added to the Kubernetes resource.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "additionalProperties": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        },
                        "labels": {
                          "description": "Labels added to the Kubernetes resource.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "additionalProperties": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "cruiseControlContainer": {
                  "description": "Template for the Cruise Control container.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "env": {
                      "description": "Environment variables which should be applied to the container.",
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "name": {
                            "description": "The environment variable key.",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "value": {
                            "description": "The environment variable value.",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "valueFrom": {
                            "description": "Reference to the secret or config map property to which the environment variable is set.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "configMapKeyRef": {
                                "description": "Reference to a key in a config map.",
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "properties": {
                                  "key": {
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "name": {
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "optional": {
                                    "type": [
                                      "boolean",
                                      "null"
                                    ]
                                  }
                                }
                              },
                              "secretKeyRef": {
                                "description": "Reference to a key in a secret.",
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "properties": {
                                  "key": {
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "name": {
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "optional": {
                                    "type": [
                                      "boolean",
                                      "null"
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "securityContext": {
                      "description": "Security context for the container.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "allowPrivilegeEscalation": {
                          "type": [
                            "boolean",
                            "null"
                          ]
                        },
                        "appArmorProfile": {
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "localhostProfile": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "type": {
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          }
                        },
                        "capabilities": {
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "add": {
                              "type": [
                                "array",
                                "null"
                              ],
                              "items": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            },
                            "drop": {
                              "type": [
                                "array",
                                "null"
                              ],
                              "items": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            }
                          }
                        },
                        "privileged": {
                          "type": [
                            "boolean",
                            "null"
                          ]
                        },
                        "procMount": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "readOnlyRootFilesystem": {
                          "type": [
                            "boolean",
                            "null"
                          ]
                        },
                        "runAsGroup": {
                          "type": [
                            "integer",
                            "null"
                          ]
                        },
                        "runAsNonRoot": {
                          "type": [
                            "boolean",
                            "null"
                          ]
                        },
                        "runAsUser": {
                          "type": [
                            "integer",
                            "null"
                          ]
                        },
                        "seLinuxOptions": {
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "level": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "role": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "type": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "user": {
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          }
                        },
                        "seccompProfile": {
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "localhostProfile": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "type": {
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          }
                        },
                        "windowsOptions": {
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "gmsaCredentialSpec": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "gmsaCredentialSpecName": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "hostProcess": {
                              "type": [
                                "boolean",
                                "null"
                              ]
                            },
                            "runAsUserName": {
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          }
                        }
                      }
                    },
                    "volumeMounts": {
                      "description": "Additional volume mounts which should be applied to the container.",
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "mountPath": {
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "mountPropagation": {
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "name": {
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "readOnly": {
                            "type": [
                              "boolean",
                              "null"
                            ]
                          },
                          "recursiveReadOnly": {
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "subPath": {
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "subPathExpr": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "deployment": {
                  "description": "Template for Cruise Control `Deployment`.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "deploymentStrategy": {
                      "description": "Pod replacement strategy for deployment configuration changes. Valid values are `RollingUpdate` and `Recreate`. Defaults to `RollingUpdate`.",
                      "type": [
                        "string",
                        "null"
                      ],
                      "enum": [
                        "RollingUpdate",
                        "Recreate"
                      ]
                    },
                    "metadata": {
                      "description": "Metadata applied to the resource.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "annotations": {
                          "description": "Annotations added to the Kubernetes resource.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "additionalProperties": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        },
                        "labels": {
                          "description": "Labels added to the Kubernetes resource.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "additionalProperties": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "pod": {
                  "description": "Template for Cruise Control `Pods`.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "affinity": {
                      "description": "The pod's affinity rules.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "nodeAffinity": {
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "preferredDuringSchedulingIgnoredDuringExecution": {
                              "type": [
                                "array",
                                "null"
                              ],
                              "items": {
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "properties": {
                                  "preference": {
                                    "type": [
                                      "object",
                                      "null"
                                    ],
                                    "properties": {
                                      "matchExpressions": {
                                        "type": [
                                          "array",
                                          "null"
                                        ],
                                        "items": {
                                          "type": [
                                            "object",
                                            "null"
                                          ],
                                          "properties": {
                                            "key": {
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            },
                                            "operator": {
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            },
                                            "values": {
                                              "type": [
                                                "array",
                                                "null"
                                              ],
                                              "items": {
                                                "type": [
                                                  "string",
                                                  "null"
                                                ]
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "matchFields": {
                                        "type": [
                                          "array",
                                          "null"
                                        ],
                                        "items": {
                                          "type": [
                                            "object",
                                            "null"
                                          ],
                                          "properties": {
                                            "key": {
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            },
                                            "operator": {
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            },
                                            "values": {
                                              "type": [
                                                "array",
                                                "null"
                                              ],
                                              "items": {
                                                "type": [
                                                  "string",
                                                  "null"
                                                ]
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "weight": {
                                    "type": [
                                      "integer",
                                      "null"
                                    ]
                                  }
                                }
                              }
                            },
                            "requiredDuringSchedulingIgnoredDuringExecution": {
                              "type": [
                                "object",
                                "null"
                              ],
                              "properties": {
                                "nodeSelectorTerms": {
                                  "type": [
                                    "array",
                                    "null"
                                  ],
                                  "items": {
                                    "type": [
                                      "object",
                                      "null"
                                    ],
                                    "properties": {
                                      "matchExpressions": {
                                        "type": [
                                          "array",
                                          "null"
                                        ],
                                        "items": {
                                          "type": [
                                            "object",
                                            "null"
                                          ],
                                          "properties": {
                                            "key": {
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            },
                                            "operator": {
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            },
                                            "values": {
                                              "type": [
                                                "array",
                                                "null"
                                              ],
                                              "items": {
                                                "type": [
                                                  "string",
                                                  "null"
                                                ]
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "matchFields": {
                                        "type": [
                                          "array",
                                          "null"
                                        ],
                                        "items": {
                                          "type": [
                                            "object",
                                            "null"
                                          ],
                                          "properties": {
                                            "key": {
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            },
                                            "operator": {
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            },
                                            "values": {
                                              "type": [
                                                "array",
                                                "null"
                                              ],
                                              "items": {
                                                "type": [
                                                  "string",
                                                  "null"
                                                ]
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "podAffinity": {
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "preferredDuringSchedulingIgnoredDuringExecution": {
                              "type": [
                                "array",
                                "null"
                              ],
                              "items": {
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "properties": {
                                  "podAffinityTerm": {
                                    "type": [
                                      "object",
                                      "null"
                                    ],
                                    "properties": {
                                      "labelSelector": {
                                        "type": [
                                          "object",
                                          "null"
                                        ],
                                        "properties": {
                                          "matchExpressions": {
                                            "type": [
                                              "array",
                                              "null"
                                            ],
                                            "items": {
                                              "type": [
                                                "object",
                                                "null"
                                              ],
                                              "properties": {
                                                "key": {
                                                  "type": [
                                                    "string",
                                                    "null"
                                                  ]
                                                },
                                                "operator": {
                                                  "type": [
                                                    "string",
                                                    "null"
                                                  ]
                                                },
                                                "values": {
                                                  "type": [
                                                    "array",
                                                    "null"
                                                  ],
                                                  "items": {
                                                    "type": [
                                                      "string",
                                                      "null"
                                                    ]
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "matchLabels": {
                                            "type": [
                                              "object",
                                              "null"
                                            ],
                                            "additionalProperties": {
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            }
                                          }
                                        }
                                      },
                                      "matchLabelKeys": {
                                        "type": [
                                          "array",
                                          "null"
                                        ],
                                        "items": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        }
                                      },
                                      "mismatchLabelKeys": {
                                        "type": [
                                          "array",
                                          "null"
                                        ],
                                        "items": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        }
                                      },
                                      "namespaceSelector": {
                                        "type": [
                                          "object",
                                          "null"
                                        ],
                                        "properties": {
                                          "matchExpressions": {
                                            "type": [
                                              "array",
                                              "null"
                                            ],
                                            "items": {
                                              "type": [
                                                "object",
                                                "null"
                                              ],
                                              "properties": {
                                                "key": {
                                                  "type": [
                                                    "string",
                                                    "null"
                                                  ]
                                                },
                                                "operator": {
                                                  "type": [
                                                    "string",
                                                    "null"
                                                  ]
                                                },
                                                "values": {
                                                  "type": [
                                                    "array",
                                                    "null"
                                                  ],
                                                  "items": {
                                                    "type": [
                                                      "string",
                                                      "null"
                                                    ]
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "matchLabels": {
                                            "type": [
                                              "object",
                                              "null"
                                            ],
                                            "additionalProperties": {
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            }
                                          }
                                        }
                                      },
                                      "namespaces": {
                                        "type": [
                                          "array",
                                          "null"
                                        ],
                                        "items": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        }
                                      },
                                      "topologyKey": {
                                        "type": [
                                          "string",
                                          "null"
                                        ]
                                      }
                                    }
                                  },
                                  "weight": {
                                    "type": [
                                      "integer",
                                      "null"
                                    ]
                                  }
                                }
                              }
                            },
                            "requiredDuringSchedulingIgnoredDuringExecution": {
                              "type": [
                                "array",
                                "null"
                              ],
                              "items": {
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "properties": {
                                  "labelSelector": {
                                    "type": [
                                      "object",
                                      "null"
                                    ],
                                    "properties": {
                                      "matchExpressions": {
                                        "type": [
                                          "array",
                                          "null"
                                        ],
                                        "items": {
                                          "type": [
                                            "object",
                                            "null"
                                          ],
                                          "properties": {
                                            "key": {
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            },
                                            "operator": {
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            },
                                            "values": {
                                              "type": [
                                                "array",
                                                "null"
                                              ],
                                              "items": {
                                                "type": [
                                                  "string",
                                                  "null"
                                                ]
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "matchLabels": {
                                        "type": [
                                          "object",
                                          "null"
                                        ],
                                        "additionalProperties": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        }
                                      }
                                    }
                                  },
                                  "matchLabelKeys": {
                                    "type": [
                                      "array",
                                      "null"
                                    ],
                                    "items": {
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    }
                                  },
                                  "mismatchLabelKeys": {
                                    "type": [
                                      "array",
                                      "null"
                                    ],
                                    "items": {
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    }
                                  },
                                  "namespaceSelector": {
                                    "type": [
                                      "object",
                                      "null"
                                    ],
                                    "properties": {
                                      "matchExpressions": {
                                        "type": [
                                          "array",
                                          "null"
                                        ],
                                        "items": {
                                          "type": [
                                            "object",
                                            "null"
                                          ],
                                          "properties": {
                                            "key": {
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            },
                                            "operator": {
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            },
                                            "values": {
                                              "type": [
                                                "array",
                                                "null"
                                              ],
                                              "items": {
                                                "type": [
                                                  "string",
                                                  "null"
                                                ]
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "matchLabels": {
                                        "type": [
                                          "object",
                                          "null"
                                        ],
                                        "additionalProperties": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        }
                                      }
                                    }
                                  },
                                  "namespaces": {
                                    "type": [
                                      "array",
                                      "null"
                                    ],
                                    "items": {
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    }
                                  },
                                  "topologyKey": {
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        },
                        "podAntiAffinity": {
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "preferredDuringSchedulingIgnoredDuringExecution": {
                              "type": [
                                "array",
                                "null"
                              ],
                              "items": {
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "properties": {
                                  "podAffinityTerm": {
                                    "type": [
                                      "object",
                                      "null"
                                    ],
                                    "properties": {
                                      "labelSelector": {
                                        "type": [
                                          "object",
                                          "null"
                                        ],
                                        "properties": {
                                          "matchExpressions": {
                                            "type": [
                                              "array",
                                              "null"
                                            ],
                                            "items": {
                                              "type": [
                                                "object",
                                                "null"
                                              ],
                                              "properties": {
                                                "key": {
                                                  "type": [
                                                    "string",
                                                    "null"
                                                  ]
                                                },
                                                "operator": {
                                                  "type": [
                                                    "string",
                                                    "null"
                                                  ]
                                                },
                                                "values": {
                                                  "type": [
                                                    "array",
                                                    "null"
                                                  ],
                                                  "items": {
                                                    "type": [
                                                      "string",
                                                      "null"
                                                    ]
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "matchLabels": {
                                            "type": [
                                              "object",
                                              "null"
                                            ],
                                            "additionalProperties": {
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            }
                                          }
                                        }
                                      },
                                      "matchLabelKeys": {
                                        "type": [
                                          "array",
                                          "null"
                                        ],
                                        "items": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        }
                                      },
                                      "mismatchLabelKeys": {
                                        "type": [
                                          "array",
                                          "null"
                                        ],
                                        "items": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        }
                                      },
                                      "namespaceSelector": {
                                        "type": [
                                          "object",
                                          "null"
                                        ],
                                        "properties": {
                                          "matchExpressions": {
                                            "type": [
                                              "array",
                                              "null"
                                            ],
                                            "items": {
                                              "type": [
                                                "object",
                                                "null"
                                              ],
                                              "properties": {
                                                "key": {
                                                  "type": [
                                                    "string",
                                                    "null"
                                                  ]
                                                },
                                                "operator": {
                                                  "type": [
                                                    "string",
                                                    "null"
                                                  ]
                                                },
                                                "values": {
                                                  "type": [
                                                    "array",
                                                    "null"
                                                  ],
                                                  "items": {
                                                    "type": [
                                                      "string",
                                                      "null"
                                                    ]
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "matchLabels": {
                                            "type": [
                                              "object",
                                              "null"
                                            ],
                                            "additionalProperties": {
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            }
                                          }
                                        }
                                      },
                                      "namespaces": {
                                        "type": [
                                          "array",
                                          "null"
                                        ],
                                        "items": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        }
                                      },
                                      "topologyKey": {
                                        "type": [
                                          "string",
                                          "null"
                                        ]
                                      }
                                    }
                                  },
                                  "weight": {
                                    "type": [
                                      "integer",
                                      "null"
                                    ]
                                  }
                                }
                              }
                            },
                            "requiredDuringSchedulingIgnoredDuringExecution": {
                              "type": [
                                "array",
                                "null"
                              ],
                              "items": {
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "properties": {
                                  "labelSelector": {
                                    "type": [
                                      "object",
                                      "null"
                                    ],
                                    "properties": {
                                      "matchExpressions": {
                                        "type": [
                                          "array",
                                          "null"
                                        ],
                                        "items": {
                                          "type": [
                                            "object",
                                            "null"
                                          ],
                                          "properties": {
                                            "key": {
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            },
                                            "operator": {
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            },
                                            "values": {
                                              "type": [
                                                "array",
                                                "null"
                                              ],
                                              "items": {
                                                "type": [
                                                  "string",
                                                  "null"
                                                ]
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "matchLabels": {
                                        "type": [
                                          "object",
                                          "null"
                                        ],
                                        "additionalProperties": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        }
                                      }
                                    }
                                  },
                                  "matchLabelKeys": {
                                    "type": [
                                      "array",
                                      "null"
                                    ],
                                    "items": {
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    }
                                  },
                                  "mismatchLabelKeys": {
                                    "type": [
                                      "array",
                                      "null"
                                    ],
                                    "items": {
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    }
                                  },
                                  "namespaceSelector": {
                                    "type": [
                                      "object",
                                      "null"
                                    ],
                                    "properties": {
                                      "matchExpressions": {
                                        "type": [
                                          "array",
                                          "null"
                                        ],
                                        "items": {
                                          "type": [
                                            "object",
                                            "null"
                                          ],
                                          "properties": {
                                            "key": {
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            },
                                            "operator": {
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            },
                                            "values": {
                                              "type": [
                                                "array",
                                                "null"
                                              ],
                                              "items": {
                                                "type": [
                                                  "string",
                                                  "null"
                                                ]
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "matchLabels": {
                                        "type": [
                                          "object",
                                          "null"
                                        ],
                                        "additionalProperties": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        }
                                      }
                                    }
                                  },
                                  "namespaces": {
                                    "type": [
                                      "array",
                                      "null"
                                    ],
                                    "items": {
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    }
                                  },
                                  "topologyKey": {
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "dnsConfig": {
                      "description": "The pod's DNSConfig. If specified, it will be merged to the generated DNS configuration based on the DNSPolicy.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "nameservers": {
                          "type": [
                            "array",
                            "null"
                          ],
                          "items": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        },
                        "options": {
                          "type": [
                            "array",
                            "null"
                          ],
                          "items": {
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "name": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "value": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            }
                          }
                        },
                        "searches": {
                          "type": [
                            "array",
                            "null"
                          ],
                          "items": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        }
                      }
                    },
                    "dnsPolicy": {
                      "description": "The pod's DNSPolicy. Defaults to `ClusterFirst`. Valid values are `ClusterFirstWithHostNet`, `ClusterFirst`, `Default` or `None`.",
                      "type": [
                        "string",
                        "null"
                      ],
                      "enum": [
                        "ClusterFirst",
                        "ClusterFirstWithHostNet",
                        "Default",
                        "None"
                      ]
                    },
                    "enableServiceLinks": {
                      "description": "Indicates whether information about services should be injected into Pod's environment variables.",
                      "type": [
                        "boolean",
                        "null"
                      ]
                    },
                    "hostAliases": {
                      "description": "The pod's HostAliases. HostAliases is an optional list of hosts and IPs that will be injected into the Pod's hosts file if specified.",
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "hostnames": {
                            "type": [
                              "array",
                              "null"
                            ],
                            "items": {
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          },
                          "ip": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        }
                      }
                    },
                    "imagePullSecrets": {
                      "description": "List of references to secrets in the same namespace to use for pulling any of the images used by this Pod. When the `STRIMZI_IMAGE_PULL_SECRETS` environment variable in Cluster Operator and the `imagePullSecrets` option are specified, only the `imagePullSecrets` variable is used and the `STRIMZI_IMAGE_PULL_SECRETS` variable is ignored.",
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "name": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        }
                      }
                    },
                    "metadata": {
                      "description": "Metadata applied to the resource.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "annotations": {
                          "description": "Annotations added to the Kubernetes resource.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "additionalProperties": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        },
                        "labels": {
                          "description": "Labels added to the Kubernetes resource.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "additionalProperties": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        }
                      }
                    },
                    "priorityClassName": {
                      "description": "The name of the priority class used to assign priority to the pods. ",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "schedulerName": {
                      "description": "The name of the scheduler used to dispatch this `Pod`. If not specified, the default scheduler will be used.",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "securityContext": {
                      "description": "Configures pod-level security attributes and common container settings.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "appArmorProfile": {
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "localhostProfile": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "type": {
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          }
                        },
                        "fsGroup": {
                          "type": [
                            "integer",
                            "null"
                          ]
                        },
                        "fsGroupChangePolicy": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "runAsGroup": {
                          "type": [
                            "integer",
                            "null"
                          ]
                        },
                        "runAsNonRoot": {
                          "type": [
                            "boolean",
                            "null"
                          ]
                        },
                        "runAsUser": {
                          "type": [
                            "integer",
                            "null"
                          ]
                        },
                        "seLinuxChangePolicy": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "seLinuxOptions": {
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "level": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "role": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "type": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "user": {
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          }
                        },
                        "seccompProfile": {
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "localhostProfile": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "type": {
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          }
                        },
                        "supplementalGroups": {
                          "type": [
                            "array",
                            "null"
                          ],
                          "items": {
                            "type": [
                              "integer",
                              "null"
                            ]
                          }
                        },
                        "supplementalGroupsPolicy": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "sysctls": {
                          "type": [
                            "array",
                            "null"
                          ],
                          "items": {
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "name": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "value": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            }
                          }
                        },
                        "windowsOptions": {
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "gmsaCredentialSpec": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "gmsaCredentialSpecName": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "hostProcess": {
                              "type": [
                                "boolean",
                                "null"
                              ]
                            },
                            "runAsUserName": {
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          }
                        }
                      }
                    },
                    "terminationGracePeriodSeconds": {
                      "description": "The grace period is the duration in seconds after the processes running in the pod are sent a termination signal, and the time when the processes are forcibly halted with a kill signal. Set this value to longer than the expected cleanup time for your process. Value must be a non-negative integer. A zero value indicates delete immediately. You might need to increase the grace period for very large Kafka clusters, so that the Kafka brokers have enough time to transfer their work to another broker before they are terminated. Defaults to 30 seconds.",
                      "type": [
                        "integer",
                        "null"
                      ],
                      "minimum": 0
                    },
                    "tmpDirSizeLimit": {
                      "description": "Defines the total amount of pod memory allocated for the temporary `EmptyDir` volume `/tmp`. Specify the allocation in memory units, for example, `100Mi` for 100 mebibytes. Default value is `5Mi`. The `/tmp` volume is backed by pod memory, not disk storage, so avoid setting a high value as it consumes pod memory resources.",
                      "type": [
                        "string",
                        "null"
                      ],
                      "pattern": "^([0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$"
                    },
                    "tolerations": {
                      "description": "The pod's tolerations.",
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "effect": {
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "key": {
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "operator": {
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "tolerationSeconds": {
                            "type": [
                              "integer",
                              "null"
                            ]
                          },
                          "value": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        }
                      }
                    },
                    "topologySpreadConstraints": {
                      "description": "The pod's topology spread constraints.",
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "labelSelector": {
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "matchExpressions": {
                                "type": [
                                  "array",
                                  "null"
                                ],
                                "items": {
                                  "type": [
                                    "object",
                                    "null"
                                  ],
                                  "properties": {
                                    "key": {
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    },
                                    "operator": {
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    },
                                    "values": {
                                      "type": [
                                        "array",
                                        "null"
                                      ],
                                      "items": {
                                        "type": [
                                          "string",
                                          "null"
                                        ]
                                      }
                                    }
                                  }
                                }
                              },
                              "matchLabels": {
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "additionalProperties": {
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                }
                              }
                            }
                          },
                          "matchLabelKeys": {
                            "type": [
                              "array",
                              "null"
                            ],
                            "items": {
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          },
                          "maxSkew": {
                            "type": [
                              "integer",
                              "null"
                            ]
                          },
                          "minDomains": {
                            "type": [
                              "integer",
                              "null"
                            ]
                          },
                          "nodeAffinityPolicy": {
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "nodeTaintsPolicy": {
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "topologyKey": {
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "whenUnsatisfiable": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        }
                      }
                    },
                    "volumes": {
                      "description": "Additional volumes that can be mounted to the pod.",
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "configMap": {
                            "description": "`ConfigMap` to use to populate the volume.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "defaultMode": {
                                "type": [
                                  "integer",
                                  "null"
                                ]
                              },
                              "items": {
                                "type": [
                                  "array",
                                  "null"
                                ],
                                "items": {
                                  "type": [
                                    "object",
                                    "null"
                                  ],
                                  "properties": {
                                    "key": {
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    },
                                    "mode": {
                                      "type": [
                                        "integer",
                                        "null"
                                      ]
                                    },
                                    "path": {
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    }
                                  }
                                }
                              },
                              "name": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "optional": {
                                "type": [
                                  "boolean",
                                  "null"
                                ]
                              }
                            }
                          },
                          "csi": {
                            "description": "`CSIVolumeSource` object to use to populate the volume.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "driver": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "fsType": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "nodePublishSecretRef": {
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "properties": {
                                  "name": {
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  }
                                }
                              },
                              "readOnly": {
                                "type": [
                                  "boolean",
                                  "null"
                                ]
                              },
                              "volumeAttributes": {
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "additionalProperties": {
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                }
                              }
                            }
                          },
                          "emptyDir": {
                            "description": "`EmptyDir` to use to populate the volume.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "medium": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "sizeLimit": {
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "properties": {
                                  "amount": {
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "format": {
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  }
                                }
                              }
                            }
                          },
                          "image": {
                            "description": "`ImageVolumeSource` object to use to populate the volume.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "pullPolicy": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "reference": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            }
                          },
                          "name": {
                            "description": "Name to use for the volume. Required.",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "persistentVolumeClaim": {
                            "description": "`PersistentVolumeClaim` object to use to populate the volume.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "claimName": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "readOnly": {
                                "type": [
                                  "boolean",
                                  "null"
                                ]
                              }
                            }
                          },
                          "secret": {
                            "description": "`Secret` to use to populate the volume.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "defaultMode": {
                                "type": [
                                  "integer",
                                  "null"
                                ]
                              },
                              "items": {
                                "type": [
                                  "array",
                                  "null"
                                ],
                                "items": {
                                  "type": [
                                    "object",
                                    "null"
                                  ],
                                  "properties": {
                                    "key": {
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    },
                                    "mode": {
                                      "type": [
                                        "integer",
                                        "null"
                                      ]
                                    },
                                    "path": {
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    }
                                  }
                                }
                              },
                              "optional": {
                                "type": [
                                  "boolean",
                                  "null"
                                ]
                              },
                              "secretName": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "podDisruptionBudget": {
                  "description": "Template for Cruise Control `PodDisruptionBudget`.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "maxUnavailable": {
                      "description": "Maximum number of unavailable pods to allow automatic Pod eviction. A Pod eviction is allowed when the `maxUnavailable` number of pods or fewer are unavailable after the eviction. Setting this value to 0 prevents all voluntary evictions, so the pods must be evicted manually. Defaults to 1.",
                      "type": [
                        "integer",
                        "null"
                      ],
                      "minimum": 0
                    },
                    "metadata": {
                      "description": "Metadata to apply to the `PodDisruptionBudgetTemplate` resource.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "annotations": {
                          "description": "Annotations added to the Kubernetes resource.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "additionalProperties": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        },
                        "labels": {
                          "description": "Labels added to the Kubernetes resource.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "additionalProperties": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "serviceAccount": {
                  "description": "Template for the Cruise Control service account.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "metadata": {
                      "description": "Metadata applied to the resource.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "annotations": {
                          "description": "Annotations added to the Kubernetes resource.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "additionalProperties": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        },
                        "labels": {
                          "description": "Labels added to the Kubernetes resource.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "additionalProperties": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "tlsSidecarContainer": {
                  "description": "Template for the Cruise Control TLS sidecar container.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "env": {
                      "description": "Environment variables which should be applied to the container.",
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "name": {
                            "description": "The environment variable key.",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "value": {
                            "description": "The environment variable value.",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "valueFrom": {
                            "description": "Reference to the secret or config map property to which the environment variable is set.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "configMapKeyRef": {
                                "description": "Reference to a key in a config map.",
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "properties": {
                                  "key": {
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "name": {
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "optional": {
                                    "type": [
                                      "boolean",
                                      "null"
                                    ]
                                  }
                                }
                              },
                              "secretKeyRef": {
                                "description": "Reference to a key in a secret.",
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "properties": {
                                  "key": {
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "name": {
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "optional": {
                                    "type": [
                                      "boolean",
                                      "null"
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "securityContext": {
                      "description": "Security context for the container.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "allowPrivilegeEscalation": {
                          "type": [
                            "boolean",
                            "null"
                          ]
                        },
                        "appArmorProfile": {
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "localhostProfile": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "type": {
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          }
                        },
                        "capabilities": {
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "add": {
                              "type": [
                                "array",
                                "null"
                              ],
                              "items": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            },
                            "drop": {
                              "type": [
                                "array",
                                "null"
                              ],
                              "items": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            }
                          }
                        },
                        "privileged": {
                          "type": [
                            "boolean",
                            "null"
                          ]
                        },
                        "procMount": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "readOnlyRootFilesystem": {
                          "type": [
                            "boolean",
                            "null"
                          ]
                        },
                        "runAsGroup": {
                          "type": [
                            "integer",
                            "null"
                          ]
                        },
                        "runAsNonRoot": {
                          "type": [
                            "boolean",
                            "null"
                          ]
                        },
                        "runAsUser": {
                          "type": [
                            "integer",
                            "null"
                          ]
                        },
                        "seLinuxOptions": {
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "level": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "role": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "type": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "user": {
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          }
                        },
                        "seccompProfile": {
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "localhostProfile": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "type": {
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          }
                        },
                        "windowsOptions": {
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "gmsaCredentialSpec": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "gmsaCredentialSpecName": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "hostProcess": {
                              "type": [
                                "boolean",
                                "null"
                              ]
                            },
                            "runAsUserName": {
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          }
                        }
                      }
                    },
                    "volumeMounts": {
                      "description": "Additional volume mounts which should be applied to the container.",
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "mountPath": {
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "mountPropagation": {
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "name": {
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "readOnly": {
                            "type": [
                              "boolean",
                              "null"
                            ]
                          },
                          "recursiveReadOnly": {
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "subPath": {
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "subPathExpr": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "tlsSidecar": {
              "description": "TLS sidecar configuration.",
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "image": {
                  "description": "The docker image for the container.",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "livenessProbe": {
                  "description": "Pod liveness checking.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "failureThreshold": {
                      "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.",
                      "type": [
                        "integer",
                        "null"
                      ],
                      "minimum": 1
                    },
                    "initialDelaySeconds": {
                      "description": "The initial delay before first the health is first checked. Default to 15 seconds. Minimum value is 0.",
                      "type": [
                        "integer",
                        "null"
                      ],
                      "minimum": 0
                    },
                    "periodSeconds": {
                      "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.",
                      "type": [
                        "integer",
                        "null"
                      ],
                      "minimum": 1
                    },
                    "successThreshold": {
                      "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.",
                      "type": [
                        "integer",
                        "null"
                      ],
                      "minimum": 1
                    },
                    "timeoutSeconds": {
                      "description": "The timeout for each attempted health check. Default to 5 seconds. Minimum value is 1.",
                      "type": [
                        "integer",
                        "null"
                      ],
                      "minimum": 1
                    }
                  }
                },
                "logLevel": {
                  "description": "The log level for the TLS sidecar. Default value is `notice`.",
                  "type": [
                    "string",
                    "null"
                  ],
                  "enum": [
                    "emerg",
                    "alert",
                    "crit",
                    "err",
                    "warning",
                    "notice",
                    "info",
                    "debug"
                  ]
                },
                "readinessProbe": {
                  "description": "Pod readiness checking.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "failureThreshold": {
                      "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.",
                      "type": [
                        "integer",
                        "null"
                      ],
                      "minimum": 1
                    },
                    "initialDelaySeconds": {
                      "description": "The initial delay before first the health is first checked. Default to 15 seconds. Minimum value is 0.",
                      "type": [
                        "integer",
                        "null"
                      ],
                      "minimum": 0
                    },
                    "periodSeconds": {
                      "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.",
                      "type": [
                        "integer",
                        "null"
                      ],
                      "minimum": 1
                    },
                    "successThreshold": {
                      "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.",
                      "type": [
                        "integer",
                        "null"
                      ],
                      "minimum": 1
                    },
                    "timeoutSeconds": {
                      "description": "The timeout for each attempted health check. Default to 5 seconds. Minimum value is 1.",
                      "type": [
                        "integer",
                        "null"
                      ],
                      "minimum": 1
                    }
                  }
                },
                "resources": {
                  "description": "CPU and memory resources to reserve.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "claims": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "name": {
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "request": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        }
                      }
                    },
                    "limits": {
                      "type": [
                        "object",
                        "null"
                      ],
                      "additionalProperties": {
                        "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                        "x-kubernetes-int-or-string": true
                      }
                    },
                    "requests": {
                      "type": [
                        "object",
                        "null"
                      ],
                      "additionalProperties": {
                        "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                        "x-kubernetes-int-or-string": true
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "entityOperator": {
          "description": "Configuration of the Entity Operator.",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "template": {
              "description": "Template for Entity Operator resources. The template allows users to specify how a `Deployment` and `Pod` is generated.",
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "deployment": {
                  "description": "Template for Entity Operator `Deployment`.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "deploymentStrategy": {
                      "description": "Pod replacement strategy for deployment configuration changes. Valid values are `RollingUpdate` and `Recreate`. Defaults to `RollingUpdate`.",
                      "type": [
                        "string",
                        "null"
                      ],
                      "enum": [
                        "RollingUpdate",
                        "Recreate"
                      ]
                    },
                    "metadata": {
                      "description": "Metadata applied to the resource.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "annotations": {
                          "description": "Annotations added to the Kubernetes resource.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "additionalProperties": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        },
                        "labels": {
                          "description": "Labels added to the Kubernetes resource.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "additionalProperties": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "entityOperatorRole": {
                  "description": "Template for the Entity Operator Role.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "metadata": {
                      "description": "Metadata applied to the resource.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "annotations": {
                          "description": "Annotations added to the Kubernetes resource.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "additionalProperties": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        },
                        "labels": {
                          "description": "Labels added to the Kubernetes resource.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "additionalProperties": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "pod": {
                  "description": "Template for Entity Operator `Pods`.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "affinity": {
                      "description": "The pod's affinity rules.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "nodeAffinity": {
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "preferredDuringSchedulingIgnoredDuringExecution": {
                              "type": [
                                "array",
                                "null"
                              ],
                              "items": {
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "properties": {
                                  "preference": {
                                    "type": [
                                      "object",
                                      "null"
                                    ],
                                    "properties": {
                                      "matchExpressions": {
                                        "type": [
                                          "array",
                                          "null"
                                        ],
                                        "items": {
                                          "type": [
                                            "object",
                                            "null"
                                          ],
                                          "properties": {
                                            "key": {
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            },
                                            "operator": {
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            },
                                            "values": {
                                              "type": [
                                                "array",
                                                "null"
                                              ],
                                              "items": {
                                                "type": [
                                                  "string",
                                                  "null"
                                                ]
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "matchFields": {
                                        "type": [
                                          "array",
                                          "null"
                                        ],
                                        "items": {
                                          "type": [
                                            "object",
                                            "null"
                                          ],
                                          "properties": {
                                            "key": {
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            },
                                            "operator": {
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            },
                                            "values": {
                                              "type": [
                                                "array",
                                                "null"
                                              ],
                                              "items": {
                                                "type": [
                                                  "string",
                                                  "null"
                                                ]
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "weight": {
                                    "type": [
                                      "integer",
                                      "null"
                                    ]
                                  }
                                }
                              }
                            },
                            "requiredDuringSchedulingIgnoredDuringExecution": {
                              "type": [
                                "object",
                                "null"
                              ],
                              "properties": {
                                "nodeSelectorTerms": {
                                  "type": [
                                    "array",
                                    "null"
                                  ],
                                  "items": {
                                    "type": [
                                      "object",
                                      "null"
                                    ],
                                    "properties": {
                                      "matchExpressions": {
                                        "type": [
                                          "array",
                                          "null"
                                        ],
                                        "items": {
                                          "type": [
                                            "object",
                                            "null"
                                          ],
                                          "properties": {
                                            "key": {
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            },
                                            "operator": {
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            },
                                            "values": {
                                              "type": [
                                                "array",
                                                "null"
                                              ],
                                              "items": {
                                                "type": [
                                                  "string",
                                                  "null"
                                                ]
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "matchFields": {
                                        "type": [
                                          "array",
                                          "null"
                                        ],
                                        "items": {
                                          "type": [
                                            "object",
                                            "null"
                                          ],
                                          "properties": {
                                            "key": {
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            },
                                            "operator": {
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            },
                                            "values": {
                                              "type": [
                                                "array",
                                                "null"
                                              ],
                                              "items": {
                                                "type": [
                                                  "string",
                                                  "null"
                                                ]
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "podAffinity": {
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "preferredDuringSchedulingIgnoredDuringExecution": {
                              "type": [
                                "array",
                                "null"
                              ],
                              "items": {
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "properties": {
                                  "podAffinityTerm": {
                                    "type": [
                                      "object",
                                      "null"
                                    ],
                                    "properties": {
                                      "labelSelector": {
                                        "type": [
                                          "object",
                                          "null"
                                        ],
                                        "properties": {
                                          "matchExpressions": {
                                            "type": [
                                              "array",
                                              "null"
                                            ],
                                            "items": {
                                              "type": [
                                                "object",
                                                "null"
                                              ],
                                              "properties": {
                                                "key": {
                                                  "type": [
                                                    "string",
                                                    "null"
                                                  ]
                                                },
                                                "operator": {
                                                  "type": [
                                                    "string",
                                                    "null"
                                                  ]
                                                },
                                                "values": {
                                                  "type": [
                                                    "array",
                                                    "null"
                                                  ],
                                                  "items": {
                                                    "type": [
                                                      "string",
                                                      "null"
                                                    ]
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "matchLabels": {
                                            "type": [
                                              "object",
                                              "null"
                                            ],
                                            "additionalProperties": {
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            }
                                          }
                                        }
                                      },
                                      "matchLabelKeys": {
                                        "type": [
                                          "array",
                                          "null"
                                        ],
                                        "items": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        }
                                      },
                                      "mismatchLabelKeys": {
                                        "type": [
                                          "array",
                                          "null"
                                        ],
                                        "items": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        }
                                      },
                                      "namespaceSelector": {
                                        "type": [
                                          "object",
                                          "null"
                                        ],
                                        "properties": {
                                          "matchExpressions": {
                                            "type": [
                                              "array",
                                              "null"
                                            ],
                                            "items": {
                                              "type": [
                                                "object",
                                                "null"
                                              ],
                                              "properties": {
                                                "key": {
                                                  "type": [
                                                    "string",
                                                    "null"
                                                  ]
                                                },
                                                "operator": {
                                                  "type": [
                                                    "string",
                                                    "null"
                                                  ]
                                                },
                                                "values": {
                                                  "type": [
                                                    "array",
                                                    "null"
                                                  ],
                                                  "items": {
                                                    "type": [
                                                      "string",
                                                      "null"
                                                    ]
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "matchLabels": {
                                            "type": [
                                              "object",
                                              "null"
                                            ],
                                            "additionalProperties": {
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            }
                                          }
                                        }
                                      },
                                      "namespaces": {
                                        "type": [
                                          "array",
                                          "null"
                                        ],
                                        "items": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        }
                                      },
                                      "topologyKey": {
                                        "type": [
                                          "string",
                                          "null"
                                        ]
                                      }
                                    }
                                  },
                                  "weight": {
                                    "type": [
                                      "integer",
                                      "null"
                                    ]
                                  }
                                }
                              }
                            },
                            "requiredDuringSchedulingIgnoredDuringExecution": {
                              "type": [
                                "array",
                                "null"
                              ],
                              "items": {
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "properties": {
                                  "labelSelector": {
                                    "type": [
                                      "object",
                                      "null"
                                    ],
                                    "properties": {
                                      "matchExpressions": {
                                        "type": [
                                          "array",
                                          "null"
                                        ],
                                        "items": {
                                          "type": [
                                            "object",
                                            "null"
                                          ],
                                          "properties": {
                                            "key": {
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            },
                                            "operator": {
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            },
                                            "values": {
                                              "type": [
                                                "array",
                                                "null"
                                              ],
                                              "items": {
                                                "type": [
                                                  "string",
                                                  "null"
                                                ]
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "matchLabels": {
                                        "type": [
                                          "object",
                                          "null"
                                        ],
                                        "additionalProperties": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        }
                                      }
                                    }
                                  },
                                  "matchLabelKeys": {
                                    "type": [
                                      "array",
                                      "null"
                                    ],
                                    "items": {
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    }
                                  },
                                  "mismatchLabelKeys": {
                                    "type": [
                                      "array",
                                      "null"
                                    ],
                                    "items": {
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    }
                                  },
                                  "namespaceSelector": {
                                    "type": [
                                      "object",
                                      "null"
                                    ],
                                    "properties": {
                                      "matchExpressions": {
                                        "type": [
                                          "array",
                                          "null"
                                        ],
                                        "items": {
                                          "type": [
                                            "object",
                                            "null"
                                          ],
                                          "properties": {
                                            "key": {
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            },
                                            "operator": {
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            },
                                            "values": {
                                              "type": [
                                                "array",
                                                "null"
                                              ],
                                              "items": {
                                                "type": [
                                                  "string",
                                                  "null"
                                                ]
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "matchLabels": {
                                        "type": [
                                          "object",
                                          "null"
                                        ],
                                        "additionalProperties": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        }
                                      }
                                    }
                                  },
                                  "namespaces": {
                                    "type": [
                                      "array",
                                      "null"
                                    ],
                                    "items": {
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    }
                                  },
                                  "topologyKey": {
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        },
                        "podAntiAffinity": {
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "preferredDuringSchedulingIgnoredDuringExecution": {
                              "type": [
                                "array",
                                "null"
                              ],
                              "items": {
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "properties": {
                                  "podAffinityTerm": {
                                    "type": [
                                      "object",
                                      "null"
                                    ],
                                    "properties": {
                                      "labelSelector": {
                                        "type": [
                                          "object",
                                          "null"
                                        ],
                                        "properties": {
                                          "matchExpressions": {
                                            "type": [
                                              "array",
                                              "null"
                                            ],
                                            "items": {
                                              "type": [
                                                "object",
                                                "null"
                                              ],
                                              "properties": {
                                                "key": {
                                                  "type": [
                                                    "string",
                                                    "null"
                                                  ]
                                                },
                                                "operator": {
                                                  "type": [
                                                    "string",
                                                    "null"
                                                  ]
                                                },
                                                "values": {
                                                  "type": [
                                                    "array",
                                                    "null"
                                                  ],
                                                  "items": {
                                                    "type": [
                                                      "string",
                                                      "null"
                                                    ]
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "matchLabels": {
                                            "type": [
                                              "object",
                                              "null"
                                            ],
                                            "additionalProperties": {
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            }
                                          }
                                        }
                                      },
                                      "matchLabelKeys": {
                                        "type": [
                                          "array",
                                          "null"
                                        ],
                                        "items": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        }
                                      },
                                      "mismatchLabelKeys": {
                                        "type": [
                                          "array",
                                          "null"
                                        ],
                                        "items": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        }
                                      },
                                      "namespaceSelector": {
                                        "type": [
                                          "object",
                                          "null"
                                        ],
                                        "properties": {
                                          "matchExpressions": {
                                            "type": [
                                              "array",
                                              "null"
                                            ],
                                            "items": {
                                              "type": [
                                                "object",
                                                "null"
                                              ],
                                              "properties": {
                                                "key": {
                                                  "type": [
                                                    "string",
                                                    "null"
                                                  ]
                                                },
                                                "operator": {
                                                  "type": [
                                                    "string",
                                                    "null"
                                                  ]
                                                },
                                                "values": {
                                                  "type": [
                                                    "array",
                                                    "null"
                                                  ],
                                                  "items": {
                                                    "type": [
                                                      "string",
                                                      "null"
                                                    ]
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "matchLabels": {
                                            "type": [
                                              "object",
                                              "null"
                                            ],
                                            "additionalProperties": {
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            }
                                          }
                                        }
                                      },
                                      "namespaces": {
                                        "type": [
                                          "array",
                                          "null"
                                        ],
                                        "items": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        }
                                      },
                                      "topologyKey": {
                                        "type": [
                                          "string",
                                          "null"
                                        ]
                                      }
                                    }
                                  },
                                  "weight": {
                                    "type": [
                                      "integer",
                                      "null"
                                    ]
                                  }
                                }
                              }
                            },
                            "requiredDuringSchedulingIgnoredDuringExecution": {
                              "type": [
                                "array",
                                "null"
                              ],
                              "items": {
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "properties": {
                                  "labelSelector": {
                                    "type": [
                                      "object",
                                      "null"
                                    ],
                                    "properties": {
                                      "matchExpressions": {
                                        "type": [
                                          "array",
                                          "null"
                                        ],
                                        "items": {
                                          "type": [
                                            "object",
                                            "null"
                                          ],
                                          "properties": {
                                            "key": {
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            },
                                            "operator": {
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            },
                                            "values": {
                                              "type": [
                                                "array",
                                                "null"
                                              ],
                                              "items": {
                                                "type": [
                                                  "string",
                                                  "null"
                                                ]
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "matchLabels": {
                                        "type": [
                                          "object",
                                          "null"
                                        ],
                                        "additionalProperties": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        }
                                      }
                                    }
                                  },
                                  "matchLabelKeys": {
                                    "type": [
                                      "array",
                                      "null"
                                    ],
                                    "items": {
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    }
                                  },
                                  "mismatchLabelKeys": {
                                    "type": [
                                      "array",
                                      "null"
                                    ],
                                    "items": {
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    }
                                  },
                                  "namespaceSelector": {
                                    "type": [
                                      "object",
                                      "null"
                                    ],
                                    "properties": {
                                      "matchExpressions": {
                                        "type": [
                                          "array",
                                          "null"
                                        ],
                                        "items": {
                                          "type": [
                                            "object",
                                            "null"
                                          ],
                                          "properties": {
                                            "key": {
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            },
                                            "operator": {
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            },
                                            "values": {
                                              "type": [
                                                "array",
                                                "null"
                                              ],
                                              "items": {
                                                "type": [
                                                  "string",
                                                  "null"
                                                ]
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "matchLabels": {
                                        "type": [
                                          "object",
                                          "null"
                                        ],
                                        "additionalProperties": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        }
                                      }
                                    }
                                  },
                                  "namespaces": {
                                    "type": [
                                      "array",
                                      "null"
                                    ],
                                    "items": {
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    }
                                  },
                                  "topologyKey": {
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "dnsConfig": {
                      "description": "The pod's DNSConfig. If specified, it will be merged to the generated DNS configuration based on the DNSPolicy.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "nameservers": {
                          "type": [
                            "array",
                            "null"
                          ],
                          "items": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        },
                        "options": {
                          "type": [
                            "array",
                            "null"
                          ],
                          "items": {
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "name": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "value": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            }
                          }
                        },
                        "searches": {
                          "type": [
                            "array",
                            "null"
                          ],
                          "items": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        }
                      }
                    },
                    "dnsPolicy": {
                      "description": "The pod's DNSPolicy. Defaults to `ClusterFirst`. Valid values are `ClusterFirstWithHostNet`, `ClusterFirst`, `Default` or `None`.",
                      "type": [
                        "string",
                        "null"
                      ],
                      "enum": [
                        "ClusterFirst",
                        "ClusterFirstWithHostNet",
                        "Default",
                        "None"
                      ]
                    },
                    "enableServiceLinks": {
                      "description": "Indicates whether information about services should be injected into Pod's environment variables.",
                      "type": [
                        "boolean",
                        "null"
                      ]
                    },
                    "hostAliases": {
                      "description": "The pod's HostAliases. HostAliases is an optional list of hosts and IPs that will be injected into the Pod's hosts file if specified.",
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "hostnames": {
                            "type": [
                              "array",
                              "null"
                            ],
                            "items": {
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          },
                          "ip": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        }
                      }
                    },
                    "imagePullSecrets": {
                      "description": "List of references to secrets in the same namespace to use for pulling any of the images used by this Pod. When the `STRIMZI_IMAGE_PULL_SECRETS` environment variable in Cluster Operator and the `imagePullSecrets` option are specified, only the `imagePullSecrets` variable is used and the `STRIMZI_IMAGE_PULL_SECRETS` variable is ignored.",
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "name": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        }
                      }
                    },
                    "metadata": {
                      "description": "Metadata applied to the resource.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "annotations": {
                          "description": "Annotations added to the Kubernetes resource.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "additionalProperties": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        },
                        "labels": {
                          "description": "Labels added to the Kubernetes resource.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "additionalProperties": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        }
                      }
                    },
                    "priorityClassName": {
                      "description": "The name of the priority class used to assign priority to the pods. ",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "schedulerName": {
                      "description": "The name of the scheduler used to dispatch this `Pod`. If not specified, the default scheduler will be used.",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "securityContext": {
                      "description": "Configures pod-level security attributes and common container settings.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "appArmorProfile": {
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "localhostProfile": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "type": {
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          }
                        },
                        "fsGroup": {
                          "type": [
                            "integer",
                            "null"
                          ]
                        },
                        "fsGroupChangePolicy": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "runAsGroup": {
                          "type": [
                            "integer",
                            "null"
                          ]
                        },
                        "runAsNonRoot": {
                          "type": [
                            "boolean",
                            "null"
                          ]
                        },
                        "runAsUser": {
                          "type": [
                            "integer",
                            "null"
                          ]
                        },
                        "seLinuxChangePolicy": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "seLinuxOptions": {
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "level": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "role": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "type": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "user": {
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          }
                        },
                        "seccompProfile": {
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "localhostProfile": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "type": {
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          }
                        },
                        "supplementalGroups": {
                          "type": [
                            "array",
                            "null"
                          ],
                          "items": {
                            "type": [
                              "integer",
                              "null"
                            ]
                          }
                        },
                        "supplementalGroupsPolicy": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "sysctls": {
                          "type": [
                            "array",
                            "null"
                          ],
                          "items": {
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "name": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "value": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            }
                          }
                        },
                        "windowsOptions": {
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "gmsaCredentialSpec": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "gmsaCredentialSpecName": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "hostProcess": {
                              "type": [
                                "boolean",
                                "null"
                              ]
                            },
                            "runAsUserName": {
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          }
                        }
                      }
                    },
                    "terminationGracePeriodSeconds": {
                      "description": "The grace period is the duration in seconds after the processes running in the pod are sent a termination signal, and the time when the processes are forcibly halted with a kill signal. Set this value to longer than the expected cleanup time for your process. Value must be a non-negative integer. A zero value indicates delete immediately. You might need to increase the grace period for very large Kafka clusters, so that the Kafka brokers have enough time to transfer their work to another broker before they are terminated. Defaults to 30 seconds.",
                      "type": [
                        "integer",
                        "null"
                      ],
                      "minimum": 0
                    },
                    "tmpDirSizeLimit": {
                      "description": "Defines the total amount of pod memory allocated for the temporary `EmptyDir` volume `/tmp`. Specify the allocation in memory units, for example, `100Mi` for 100 mebibytes. Default value is `5Mi`. The `/tmp` volume is backed by pod memory, not disk storage, so avoid setting a high value as it consumes pod memory resources.",
                      "type": [
                        "string",
                        "null"
                      ],
                      "pattern": "^([0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$"
                    },
                    "tolerations": {
                      "description": "The pod's tolerations.",
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "effect": {
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "key": {
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "operator": {
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "tolerationSeconds": {
                            "type": [
                              "integer",
                              "null"
                            ]
                          },
                          "value": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        }
                      }
                    },
                    "topologySpreadConstraints": {
                      "description": "The pod's topology spread constraints.",
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "labelSelector": {
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "matchExpressions": {
                                "type": [
                                  "array",
                                  "null"
                                ],
                                "items": {
                                  "type": [
                                    "object",
                                    "null"
                                  ],
                                  "properties": {
                                    "key": {
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    },
                                    "operator": {
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    },
                                    "values": {
                                      "type": [
                                        "array",
                                        "null"
                                      ],
                                      "items": {
                                        "type": [
                                          "string",
                                          "null"
                                        ]
                                      }
                                    }
                                  }
                                }
                              },
                              "matchLabels": {
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "additionalProperties": {
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                }
                              }
                            }
                          },
                          "matchLabelKeys": {
                            "type": [
                              "array",
                              "null"
                            ],
                            "items": {
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          },
                          "maxSkew": {
                            "type": [
                              "integer",
                              "null"
                            ]
                          },
                          "minDomains": {
                            "type": [
                              "integer",
                              "null"
                            ]
                          },
                          "nodeAffinityPolicy": {
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "nodeTaintsPolicy": {
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "topologyKey": {
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "whenUnsatisfiable": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        }
                      }
                    },
                    "volumes": {
                      "description": "Additional volumes that can be mounted to the pod.",
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "configMap": {
                            "description": "`ConfigMap` to use to populate the volume.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "defaultMode": {
                                "type": [
                                  "integer",
                                  "null"
                                ]
                              },
                              "items": {
                                "type": [
                                  "array",
                                  "null"
                                ],
                                "items": {
                                  "type": [
                                    "object",
                                    "null"
                                  ],
                                  "properties": {
                                    "key": {
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    },
                                    "mode": {
                                      "type": [
                                        "integer",
                                        "null"
                                      ]
                                    },
                                    "path": {
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    }
                                  }
                                }
                              },
                              "name": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "optional": {
                                "type": [
                                  "boolean",
                                  "null"
                                ]
                              }
                            }
                          },
                          "csi": {
                            "description": "`CSIVolumeSource` object to use to populate the volume.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "driver": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "fsType": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "nodePublishSecretRef": {
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "properties": {
                                  "name": {
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  }
                                }
                              },
                              "readOnly": {
                                "type": [
                                  "boolean",
                                  "null"
                                ]
                              },
                              "volumeAttributes": {
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "additionalProperties": {
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                }
                              }
                            }
                          },
                          "emptyDir": {
                            "description": "`EmptyDir` to use to populate the volume.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "medium": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "sizeLimit": {
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "properties": {
                                  "amount": {
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "format": {
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  }
                                }
                              }
                            }
                          },
                          "image": {
                            "description": "`ImageVolumeSource` object to use to populate the volume.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "pullPolicy": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "reference": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            }
                          },
                          "name": {
                            "description": "Name to use for the volume. Required.",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "persistentVolumeClaim": {
                            "description": "`PersistentVolumeClaim` object to use to populate the volume.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "claimName": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "readOnly": {
                                "type": [
                                  "boolean",
                                  "null"
                                ]
                              }
                            }
                          },
                          "secret": {
                            "description": "`Secret` to use to populate the volume.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "defaultMode": {
                                "type": [
                                  "integer",
                                  "null"
                                ]
                              },
                              "items": {
                                "type": [
                                  "array",
                                  "null"
                                ],
                                "items": {
                                  "type": [
                                    "object",
                                    "null"
                                  ],
                                  "properties": {
                                    "key": {
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    },
                                    "mode": {
                                      "type": [
                                        "integer",
                                        "null"
                                      ]
                                    },
                                    "path": {
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    }
                                  }
                                }
                              },
                              "optional": {
                                "type": [
                                  "boolean",
                                  "null"
                                ]
                              },
                              "secretName": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "serviceAccount": {
                  "description": "Template for the Entity Operator service account.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "metadata": {
                      "description": "Metadata applied to the resource.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "annotations": {
                          "description": "Annotations added to the Kubernetes resource.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "additionalProperties": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        },
                        "labels": {
                          "description": "Labels added to the Kubernetes resource.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "additionalProperties": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "tlsSidecarContainer": {
                  "description": "Template for the Entity Operator TLS sidecar container.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "env": {
                      "description": "Environment variables which should be applied to the container.",
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "name": {
                            "description": "The environment variable key.",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "value": {
                            "description": "The environment variable value.",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "valueFrom": {
                            "description": "Reference to the secret or config map property to which the environment variable is set.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "configMapKeyRef": {
                                "description": "Reference to a key in a config map.",
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "properties": {
                                  "key": {
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "name": {
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "optional": {
                                    "type": [
                                      "boolean",
                                      "null"
                                    ]
                                  }
                                }
                              },
                              "secretKeyRef": {
                                "description": "Reference to a key in a secret.",
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "properties": {
                                  "key": {
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "name": {
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "optional": {
                                    "type": [
                                      "boolean",
                                      "null"
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "securityContext": {
                      "description": "Security context for the container.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "allowPrivilegeEscalation": {
                          "type": [
                            "boolean",
                            "null"
                          ]
                        },
                        "appArmorProfile": {
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "localhostProfile": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "type": {
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          }
                        },
                        "capabilities": {
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "add": {
                              "type": [
                                "array",
                                "null"
                              ],
                              "items": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            },
                            "drop": {
                              "type": [
                                "array",
                                "null"
                              ],
                              "items": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            }
                          }
                        },
                        "privileged": {
                          "type": [
                            "boolean",
                            "null"
                          ]
                        },
                        "procMount": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "readOnlyRootFilesystem": {
                          "type": [
                            "boolean",
                            "null"
                          ]
                        },
                        "runAsGroup": {
                          "type": [
                            "integer",
                            "null"
                          ]
                        },
                        "runAsNonRoot": {
                          "type": [
                            "boolean",
                            "null"
                          ]
                        },
                        "runAsUser": {
                          "type": [
                            "integer",
                            "null"
                          ]
                        },
                        "seLinuxOptions": {
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "level": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "role": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "type": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "user": {
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          }
                        },
                        "seccompProfile": {
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "localhostProfile": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "type": {
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          }
                        },
                        "windowsOptions": {
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "gmsaCredentialSpec": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "gmsaCredentialSpecName": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "hostProcess": {
                              "type": [
                                "boolean",
                                "null"
                              ]
                            },
                            "runAsUserName": {
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          }
                        }
                      }
                    },
                    "volumeMounts": {
                      "description": "Additional volume mounts which should be applied to the container.",
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "mountPath": {
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "mountPropagation": {
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "name": {
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "readOnly": {
                            "type": [
                              "boolean",
                              "null"
                            ]
                          },
                          "recursiveReadOnly": {
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "subPath": {
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "subPathExpr": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "topicOperatorContainer": {
                  "description": "Template for the Entity Topic Operator container.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "env": {
                      "description": "Environment variables which should be applied to the container.",
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "name": {
                            "description": "The environment variable key.",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "value": {
                            "description": "The environment variable value.",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "valueFrom": {
                            "description": "Reference to the secret or config map property to which the environment variable is set.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "configMapKeyRef": {
                                "description": "Reference to a key in a config map.",
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "properties": {
                                  "key": {
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "name": {
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "optional": {
                                    "type": [
                                      "boolean",
                                      "null"
                                    ]
                                  }
                                }
                              },
                              "secretKeyRef": {
                                "description": "Reference to a key in a secret.",
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "properties": {
                                  "key": {
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "name": {
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "optional": {
                                    "type": [
                                      "boolean",
                                      "null"
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "securityContext": {
                      "description": "Security context for the container.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "allowPrivilegeEscalation": {
                          "type": [
                            "boolean",
                            "null"
                          ]
                        },
                        "appArmorProfile": {
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "localhostProfile": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "type": {
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          }
                        },
                        "capabilities": {
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "add": {
                              "type": [
                                "array",
                                "null"
                              ],
                              "items": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            },
                            "drop": {
                              "type": [
                                "array",
                                "null"
                              ],
                              "items": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            }
                          }
                        },
                        "privileged": {
                          "type": [
                            "boolean",
                            "null"
                          ]
                        },
                        "procMount": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "readOnlyRootFilesystem": {
                          "type": [
                            "boolean",
                            "null"
                          ]
                        },
                        "runAsGroup": {
                          "type": [
                            "integer",
                            "null"
                          ]
                        },
                        "runAsNonRoot": {
                          "type": [
                            "boolean",
                            "null"
                          ]
                        },
                        "runAsUser": {
                          "type": [
                            "integer",
                            "null"
                          ]
                        },
                        "seLinuxOptions": {
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "level": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "role": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "type": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "user": {
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          }
                        },
                        "seccompProfile": {
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "localhostProfile": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "type": {
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          }
                        },
                        "windowsOptions": {
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "gmsaCredentialSpec": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "gmsaCredentialSpecName": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "hostProcess": {
                              "type": [
                                "boolean",
                                "null"
                              ]
                            },
                            "runAsUserName": {
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          }
                        }
                      }
                    },
                    "volumeMounts": {
                      "description": "Additional volume mounts which should be applied to the container.",
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "mountPath": {
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "mountPropagation": {
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "name": {
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "readOnly": {
                            "type": [
                              "boolean",
                              "null"
                            ]
                          },
                          "recursiveReadOnly": {
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "subPath": {
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "subPathExpr": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "topicOperatorRoleBinding": {
                  "description": "Template for the Entity Topic Operator RoleBinding.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "metadata": {
                      "description": "Metadata applied to the resource.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "annotations": {
                          "description": "Annotations added to the Kubernetes resource.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "additionalProperties": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        },
                        "labels": {
                          "description": "Labels added to the Kubernetes resource.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "additionalProperties": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "userOperatorContainer": {
                  "description": "Template for the Entity User Operator container.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "env": {
                      "description": "Environment variables which should be applied to the container.",
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "name": {
                            "description": "The environment variable key.",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "value": {
                            "description": "The environment variable value.",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "valueFrom": {
                            "description": "Reference to the secret or config map property to which the environment variable is set.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "configMapKeyRef": {
                                "description": "Reference to a key in a config map.",
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "properties": {
                                  "key": {
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "name": {
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "optional": {
                                    "type": [
                                      "boolean",
                                      "null"
                                    ]
                                  }
                                }
                              },
                              "secretKeyRef": {
                                "description": "Reference to a key in a secret.",
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "properties": {
                                  "key": {
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "name": {
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "optional": {
                                    "type": [
                                      "boolean",
                                      "null"
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "securityContext": {
                      "description": "Security context for the container.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "allowPrivilegeEscalation": {
                          "type": [
                            "boolean",
                            "null"
                          ]
                        },
                        "appArmorProfile": {
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "localhostProfile": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "type": {
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          }
                        },
                        "capabilities": {
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "add": {
                              "type": [
                                "array",
                                "null"
                              ],
                              "items": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            },
                            "drop": {
                              "type": [
                                "array",
                                "null"
                              ],
                              "items": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            }
                          }
                        },
                        "privileged": {
                          "type": [
                            "boolean",
                            "null"
                          ]
                        },
                        "procMount": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "readOnlyRootFilesystem": {
                          "type": [
                            "boolean",
                            "null"
                          ]
                        },
                        "runAsGroup": {
                          "type": [
                            "integer",
                            "null"
                          ]
                        },
                        "runAsNonRoot": {
                          "type": [
                            "boolean",
                            "null"
                          ]
                        },
                        "runAsUser": {
                          "type": [
                            "integer",
                            "null"
                          ]
                        },
                        "seLinuxOptions": {
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "level": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "role": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "type": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "user": {
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          }
                        },
                        "seccompProfile": {
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "localhostProfile": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "type": {
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          }
                        },
                        "windowsOptions": {
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "gmsaCredentialSpec": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "gmsaCredentialSpecName": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "hostProcess": {
                              "type": [
                                "boolean",
                                "null"
                              ]
                            },
                            "runAsUserName": {
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          }
                        }
                      }
                    },
                    "volumeMounts": {
                      "description": "Additional volume mounts which should be applied to the container.",
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "mountPath": {
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "mountPropagation": {
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "name": {
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "readOnly": {
                            "type": [
                              "boolean",
                              "null"
                            ]
                          },
                          "recursiveReadOnly": {
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "subPath": {
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "subPathExpr": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "userOperatorRoleBinding": {
                  "description": "Template for the Entity Topic Operator RoleBinding.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "metadata": {
                      "description": "Metadata applied to the resource.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "annotations": {
                          "description": "Annotations added to the Kubernetes resource.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "additionalProperties": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        },
                        "labels": {
                          "description": "Labels added to the Kubernetes resource.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "additionalProperties": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "tlsSidecar": {
              "description": "TLS sidecar configuration.",
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "image": {
                  "description": "The docker image for the container.",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "livenessProbe": {
                  "description": "Pod liveness checking.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "failureThreshold": {
                      "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.",
                      "type": [
                        "integer",
                        "null"
                      ],
                      "minimum": 1
                    },
                    "initialDelaySeconds": {
                      "description": "The initial delay before first the health is first checked. Default to 15 seconds. Minimum value is 0.",
                      "type": [
                        "integer",
                        "null"
                      ],
                      "minimum": 0
                    },
                    "periodSeconds": {
                      "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.",
                      "type": [
                        "integer",
                        "null"
                      ],
                      "minimum": 1
                    },
                    "successThreshold": {
                      "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.",
                      "type": [
                        "integer",
                        "null"
                      ],
                      "minimum": 1
                    },
                    "timeoutSeconds": {
                      "description": "The timeout for each attempted health check. Default to 5 seconds. Minimum value is 1.",
                      "type": [
                        "integer",
                        "null"
                      ],
                      "minimum": 1
                    }
                  }
                },
                "logLevel": {
                  "description": "The log level for the TLS sidecar. Default value is `notice`.",
                  "type": [
                    "string",
                    "null"
                  ],
                  "enum": [
                    "emerg",
                    "alert",
                    "crit",
                    "err",
                    "warning",
                    "notice",
                    "info",
                    "debug"
                  ]
                },
                "readinessProbe": {
                  "description": "Pod readiness checking.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "failureThreshold": {
                      "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.",
                      "type": [
                        "integer",
                        "null"
                      ],
                      "minimum": 1
                    },
                    "initialDelaySeconds": {
                      "description": "The initial delay before first the health is first checked. Default to 15 seconds. Minimum value is 0.",
                      "type": [
                        "integer",
                        "null"
                      ],
                      "minimum": 0
                    },
                    "periodSeconds": {
                      "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.",
                      "type": [
                        "integer",
                        "null"
                      ],
                      "minimum": 1
                    },
                    "successThreshold": {
                      "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.",
                      "type": [
                        "integer",
                        "null"
                      ],
                      "minimum": 1
                    },
                    "timeoutSeconds": {
                      "description": "The timeout for each attempted health check. Default to 5 seconds. Minimum value is 1.",
                      "type": [
                        "integer",
                        "null"
                      ],
                      "minimum": 1
                    }
                  }
                },
                "resources": {
                  "description": "CPU and memory resources to reserve.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "claims": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "name": {
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "request": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        }
                      }
                    },
                    "limits": {
                      "type": [
                        "object",
                        "null"
                      ],
                      "additionalProperties": {
                        "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                        "x-kubernetes-int-or-string": true
                      }
                    },
                    "requests": {
                      "type": [
                        "object",
                        "null"
                      ],
                      "additionalProperties": {
                        "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                        "x-kubernetes-int-or-string": true
                      }
                    }
                  }
                }
              }
            },
            "topicOperator": {
              "description": "Configuration of the Topic Operator.",
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "image": {
                  "description": "The image to use for the Topic Operator.",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "jvmOptions": {
                  "description": "JVM Options for pods.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "-XX": {
                      "description": "A map of -XX options to the JVM.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "additionalProperties": {
                        "type": [
                          "string",
                          "null"
                        ]
                      }
                    },
                    "-Xms": {
                      "description": "-Xms option to to the JVM.",
                      "type": [
                        "string",
                        "null"
                      ],
                      "pattern": "^[0-9]+[mMgG]?$"
                    },
                    "-Xmx": {
                      "description": "-Xmx option to to the JVM.",
                      "type": [
                        "string",
                        "null"
                      ],
                      "pattern": "^[0-9]+[mMgG]?$"
                    },
                    "gcLoggingEnabled": {
                      "description": "Specifies whether the Garbage Collection logging is enabled. The default is false.",
                      "type": [
                        "boolean",
                        "null"
                      ]
                    },
                    "javaSystemProperties": {
                      "description": "A map of additional system properties which will be passed using the `-D` option to the JVM.",
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "name": {
                            "description": "The system property name.",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "value": {
                            "description": "The system property value.",
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "livenessProbe": {
                  "description": "Pod liveness checking.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "failureThreshold": {
                      "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.",
                      "type": [
                        "integer",
                        "null"
                      ],
                      "minimum": 1
                    },
                    "initialDelaySeconds": {
                      "description": "The initial delay before first the health is first checked. Default to 15 seconds. Minimum value is 0.",
                      "type": [
                        "integer",
                        "null"
                      ],
                      "minimum": 0
                    },
                    "periodSeconds": {
                      "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.",
                      "type": [
                        "integer",
                        "null"
                      ],
                      "minimum": 1
                    },
                    "successThreshold": {
                      "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.",
                      "type": [
                        "integer",
                        "null"
                      ],
                      "minimum": 1
                    },
                    "timeoutSeconds": {
                      "description": "The timeout for each attempted health check. Default to 5 seconds. Minimum value is 1.",
                      "type": [
                        "integer",
                        "null"
                      ],
                      "minimum": 1
                    }
                  }
                },
                "logging": {
                  "description": "Logging configuration.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "required": [
                    "type"
                  ],
                  "properties": {
                    "loggers": {
                      "description": "A Map from logger name to logger level.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "additionalProperties": {
                        "type": [
                          "string",
                          "null"
                        ]
                      }
                    },
                    "type": {
                      "description": "Logging type, must be either 'inline' or 'external'.",
                      "type": "string",
                      "enum": [
                        "inline",
                        "external"
                      ]
                    },
                    "valueFrom": {
                      "description": "`ConfigMap` entry where the logging configuration is stored. ",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "configMapKeyRef": {
                          "description": "Reference to the key in the ConfigMap containing the configuration.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "key": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "name": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "optional": {
                              "type": [
                                "boolean",
                                "null"
                              ]
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "readinessProbe": {
                  "description": "Pod readiness checking.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "failureThreshold": {
                      "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.",
                      "type": [
                        "integer",
                        "null"
                      ],
                      "minimum": 1
                    },
                    "initialDelaySeconds": {
                      "description": "The initial delay before first the health is first checked. Default to 15 seconds. Minimum value is 0.",
                      "type": [
                        "integer",
                        "null"
                      ],
                      "minimum": 0
                    },
                    "periodSeconds": {
                      "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.",
                      "type": [
                        "integer",
                        "null"
                      ],
                      "minimum": 1
                    },
                    "successThreshold": {
                      "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.",
                      "type": [
                        "integer",
                        "null"
                      ],
                      "minimum": 1
                    },
                    "timeoutSeconds": {
                      "description": "The timeout for each attempted health check. Default to 5 seconds. Minimum value is 1.",
                      "type": [
                        "integer",
                        "null"
                      ],
                      "minimum": 1
                    }
                  }
                },
                "reconciliationIntervalMs": {
                  "description": "Interval between periodic reconciliations in milliseconds.",
                  "type": [
                    "integer",
                    "null"
                  ],
                  "minimum": 0
                },
                "reconciliationIntervalSeconds": {
                  "description": "Interval between periodic reconciliations in seconds. Ignored if reconciliationIntervalMs is set.",
                  "type": [
                    "integer",
                    "null"
                  ],
                  "minimum": 0
                },
                "resources": {
                  "description": "CPU and memory resources to reserve.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "claims": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "name": {
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "request": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        }
                      }
                    },
                    "limits": {
                      "type": [
                        "object",
                        "null"
                      ],
                      "additionalProperties": {
                        "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                        "x-kubernetes-int-or-string": true
                      }
                    },
                    "requests": {
                      "type": [
                        "object",
                        "null"
                      ],
                      "additionalProperties": {
                        "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                        "x-kubernetes-int-or-string": true
                      }
                    }
                  }
                },
                "startupProbe": {
                  "description": "Pod startup checking.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "failureThreshold": {
                      "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.",
                      "type": [
                        "integer",
                        "null"
                      ],
                      "minimum": 1
                    },
                    "initialDelaySeconds": {
                      "description": "The initial delay before first the health is first checked. Default to 15 seconds. Minimum value is 0.",
                      "type": [
                        "integer",
                        "null"
                      ],
                      "minimum": 0
                    },
                    "periodSeconds": {
                      "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.",
                      "type": [
                        "integer",
                        "null"
                      ],
                      "minimum": 1
                    },
                    "successThreshold": {
                      "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.",
                      "type": [
                        "integer",
                        "null"
                      ],
                      "minimum": 1
                    },
                    "timeoutSeconds": {
                      "description": "The timeout for each attempted health check. Default to 5 seconds. Minimum value is 1.",
                      "type": [
                        "integer",
                        "null"
                      ],
                      "minimum": 1
                    }
                  }
                },
                "topicMetadataMaxAttempts": {
                  "description": "The number of attempts at getting topic metadata.",
                  "type": [
                    "integer",
                    "null"
                  ],
                  "minimum": 0
                },
                "watchedNamespace": {
                  "description": "The namespace the Topic Operator should watch.",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "zookeeperSessionTimeoutSeconds": {
                  "description": "Timeout for the ZooKeeper session.",
                  "type": [
                    "integer",
                    "null"
                  ],
                  "minimum": 0
                }
              }
            },
            "userOperator": {
              "description": "Configuration of the User Operator.",
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "image": {
                  "description": "The image to use for the User Operator.",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "jvmOptions": {
                  "description": "JVM Options for pods.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "-XX": {
                      "description": "A map of -XX options to the JVM.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "additionalProperties": {
                        "type": [
                          "string",
                          "null"
                        ]
                      }
                    },
                    "-Xms": {
                      "description": "-Xms option to to the JVM.",
                      "type": [
                        "string",
                        "null"
                      ],
                      "pattern": "^[0-9]+[mMgG]?$"
                    },
                    "-Xmx": {
                      "description": "-Xmx option to to the JVM.",
                      "type": [
                        "string",
                        "null"
                      ],
                      "pattern": "^[0-9]+[mMgG]?$"
                    },
                    "gcLoggingEnabled": {
                      "description": "Specifies whether the Garbage Collection logging is enabled. The default is false.",
                      "type": [
                        "boolean",
                        "null"
                      ]
                    },
                    "javaSystemProperties": {
                      "description": "A map of additional system properties which will be passed using the `-D` option to the JVM.",
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "name": {
                            "description": "The system property name.",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "value": {
                            "description": "The system property value.",
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "livenessProbe": {
                  "description": "Pod liveness checking.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "failureThreshold": {
                      "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.",
                      "type": [
                        "integer",
                        "null"
                      ],
                      "minimum": 1
                    },
                    "initialDelaySeconds": {
                      "description": "The initial delay before first the health is first checked. Default to 15 seconds. Minimum value is 0.",
                      "type": [
                        "integer",
                        "null"
                      ],
                      "minimum": 0
                    },
                    "periodSeconds": {
                      "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.",
                      "type": [
                        "integer",
                        "null"
                      ],
                      "minimum": 1
                    },
                    "successThreshold": {
                      "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.",
                      "type": [
                        "integer",
                        "null"
                      ],
                      "minimum": 1
                    },
                    "timeoutSeconds": {
                      "description": "The timeout for each attempted health check. Default to 5 seconds. Minimum value is 1.",
                      "type": [
                        "integer",
                        "null"
                      ],
                      "minimum": 1
                    }
                  }
                },
                "logging": {
                  "description": "Logging configuration.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "required": [
                    "type"
                  ],
                  "properties": {
                    "loggers": {
                      "description": "A Map from logger name to logger level.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "additionalProperties": {
                        "type": [
                          "string",
                          "null"
                        ]
                      }
                    },
                    "type": {
                      "description": "Logging type, must be either 'inline' or 'external'.",
                      "type": "string",
                      "enum": [
                        "inline",
                        "external"
                      ]
                    },
                    "valueFrom": {
                      "description": "`ConfigMap` entry where the logging configuration is stored. ",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "configMapKeyRef": {
                          "description": "Reference to the key in the ConfigMap containing the configuration.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "key": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "name": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "optional": {
                              "type": [
                                "boolean",
                                "null"
                              ]
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "readinessProbe": {
                  "description": "Pod readiness checking.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "failureThreshold": {
                      "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.",
                      "type": [
                        "integer",
                        "null"
                      ],
                      "minimum": 1
                    },
                    "initialDelaySeconds": {
                      "description": "The initial delay before first the health is first checked. Default to 15 seconds. Minimum value is 0.",
                      "type": [
                        "integer",
                        "null"
                      ],
                      "minimum": 0
                    },
                    "periodSeconds": {
                      "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.",
                      "type": [
                        "integer",
                        "null"
                      ],
                      "minimum": 1
                    },
                    "successThreshold": {
                      "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.",
                      "type": [
                        "integer",
                        "null"
                      ],
                      "minimum": 1
                    },
                    "timeoutSeconds": {
                      "description": "The timeout for each attempted health check. Default to 5 seconds. Minimum value is 1.",
                      "type": [
                        "integer",
                        "null"
                      ],
                      "minimum": 1
                    }
                  }
                },
                "reconciliationIntervalMs": {
                  "description": "Interval between periodic reconciliations in milliseconds.",
                  "type": [
                    "integer",
                    "null"
                  ],
                  "minimum": 0
                },
                "reconciliationIntervalSeconds": {
                  "description": "Interval between periodic reconciliations in seconds. Ignored if reconciliationIntervalMs is set.",
                  "type": [
                    "integer",
                    "null"
                  ],
                  "minimum": 0
                },
                "resources": {
                  "description": "CPU and memory resources to reserve.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "claims": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "name": {
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "request": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        }
                      }
                    },
                    "limits": {
                      "type": [
                        "object",
                        "null"
                      ],
                      "additionalProperties": {
                        "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                        "x-kubernetes-int-or-string": true
                      }
                    },
                    "requests": {
                      "type": [
                        "object",
                        "null"
                      ],
                      "additionalProperties": {
                        "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                        "x-kubernetes-int-or-string": true
                      }
                    }
                  }
                },
                "secretPrefix": {
                  "description": "The prefix that will be added to the KafkaUser name to be used as the Secret name.",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "watchedNamespace": {
                  "description": "The namespace the User Operator should watch.",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "zookeeperSessionTimeoutSeconds": {
                  "description": "Timeout for the ZooKeeper session.",
                  "type": [
                    "integer",
                    "null"
                  ],
                  "minimum": 0
                }
              }
            }
          }
        },
        "jmxTrans": {
          "description": "As of Strimzi 0.35.0, JMXTrans is not supported anymore and this option is ignored.",
          "type": [
            "object",
            "null"
          ],
          "required": [
            "outputDefinitions",
            "kafkaQueries"
          ],
          "properties": {
            "image": {
              "description": "The image to use for the JmxTrans.",
              "type": [
                "string",
                "null"
              ]
            },
            "kafkaQueries": {
              "description": "Queries to send to the Kafka brokers to define what data should be read from each broker. For more information on these properties see, xref:type-JmxTransQueryTemplate-reference[`JmxTransQueryTemplate` schema reference].",
              "type": "array",
              "items": {
                "type": [
                  "object",
                  "null"
                ],
                "required": [
                  "targetMBean",
                  "attributes",
                  "outputs"
                ],
                "properties": {
                  "attributes": {
                    "description": "Determine which attributes of the targeted MBean should be included.",
                    "type": "array",
                    "items": {
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  },
                  "outputs": {
                    "description": "List of the names of output definitions specified in the spec.kafka.jmxTrans.outputDefinitions that have defined where JMX metrics are pushed to, and in which data format.",
                    "type": "array",
                    "items": {
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  },
                  "targetMBean": {
                    "description": "If using wildcards instead of a specific MBean then the data is gathered from multiple MBeans. Otherwise if specifying an MBean then data is gathered from that specified MBean.",
                    "type": "string"
                  }
                }
              }
            },
            "logLevel": {
              "description": "Sets the logging level of the JmxTrans deployment.For more information see, https://github.com/jmxtrans/jmxtrans-agent/wiki/Troubleshooting[JmxTrans Logging Level].",
              "type": [
                "string",
                "null"
              ]
            },
            "outputDefinitions": {
              "description": "Defines the output hosts that will be referenced later on. For more information on these properties see, xref:type-JmxTransOutputDefinitionTemplate-reference[`JmxTransOutputDefinitionTemplate` schema reference].",
              "type": "array",
              "items": {
                "type": [
                  "object",
                  "null"
                ],
                "required": [
                  "outputType",
                  "name"
                ],
                "properties": {
                  "flushDelayInSeconds": {
                    "description": "How many seconds the JmxTrans waits before pushing a new set of data out.",
                    "type": [
                      "integer",
                      "null"
                    ]
                  },
                  "host": {
                    "description": "The DNS/hostname of the remote host that the data is pushed to.",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "name": {
                    "description": "Template for setting the name of the output definition. This is used to identify where to send the results of queries should be sent.",
                    "type": "string"
                  },
                  "outputType": {
                    "description": "Template for setting the format of the data that will be pushed.For more information see https://github.com/jmxtrans/jmxtrans/wiki/OutputWriters[JmxTrans OutputWriters].",
                    "type": "string"
                  },
                  "port": {
                    "description": "The port of the remote host that the data is pushed to.",
                    "type": [
                      "integer",
                      "null"
                    ]
                  },
                  "typeNames": {
                    "description": "Template for filtering data to be included in response to a wildcard query. For more information see https://github.com/jmxtrans/jmxtrans/wiki/Queries[JmxTrans queries].",
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  }
                }
              }
            },
            "resources": {
              "description": "CPU and memory resources to reserve.",
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "claims": {
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "properties": {
                      "name": {
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "request": {
                        "type": [
                          "string",
                          "null"
                        ]
                      }
                    }
                  }
                },
                "limits": {
                  "type": [
                    "object",
                    "null"
                  ],
                  "additionalProperties": {
                    "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                    "x-kubernetes-int-or-string": true
                  }
                },
                "requests": {
                  "type": [
                    "object",
                    "null"
                  ],
                  "additionalProperties": {
                    "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                    "x-kubernetes-int-or-string": true
                  }
                }
              }
            },
            "template": {
              "description": "Template for JmxTrans resources.",
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "container": {
                  "description": "Template for JmxTrans container.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "env": {
                      "description": "Environment variables which should be applied to the container.",
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "name": {
                            "description": "The environment variable key.",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "value": {
                            "description": "The environment variable value.",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "valueFrom": {
                            "description": "Reference to the secret or config map property to which the environment variable is set.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "configMapKeyRef": {
                                "description": "Reference to a key in a config map.",
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "properties": {
                                  "key": {
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "name": {
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "optional": {
                                    "type": [
                                      "boolean",
                                      "null"
                                    ]
                                  }
                                }
                              },
                              "secretKeyRef": {
                                "description": "Reference to a key in a secret.",
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "properties": {
                                  "key": {
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "name": {
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "optional": {
                                    "type": [
                                      "boolean",
                                      "null"
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "securityContext": {
                      "description": "Security context for the container.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "allowPrivilegeEscalation": {
                          "type": [
                            "boolean",
                            "null"
                          ]
                        },
                        "appArmorProfile": {
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "localhostProfile": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "type": {
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          }
                        },
                        "capabilities": {
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "add": {
                              "type": [
                                "array",
                                "null"
                              ],
                              "items": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            },
                            "drop": {
                              "type": [
                                "array",
                                "null"
                              ],
                              "items": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            }
                          }
                        },
                        "privileged": {
                          "type": [
                            "boolean",
                            "null"
                          ]
                        },
                        "procMount": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "readOnlyRootFilesystem": {
                          "type": [
                            "boolean",
                            "null"
                          ]
                        },
                        "runAsGroup": {
                          "type": [
                            "integer",
                            "null"
                          ]
                        },
                        "runAsNonRoot": {
                          "type": [
                            "boolean",
                            "null"
                          ]
                        },
                        "runAsUser": {
                          "type": [
                            "integer",
                            "null"
                          ]
                        },
                        "seLinuxOptions": {
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "level": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "role": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "type": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "user": {
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          }
                        },
                        "seccompProfile": {
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "localhostProfile": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "type": {
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          }
                        },
                        "windowsOptions": {
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "gmsaCredentialSpec": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "gmsaCredentialSpecName": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "hostProcess": {
                              "type": [
                                "boolean",
                                "null"
                              ]
                            },
                            "runAsUserName": {
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          }
                        }
                      }
                    },
                    "volumeMounts": {
                      "description": "Additional volume mounts which should be applied to the container.",
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "mountPath": {
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "mountPropagation": {
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "name": {
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "readOnly": {
                            "type": [
                              "boolean",
                              "null"
                            ]
                          },
                          "recursiveReadOnly": {
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "subPath": {
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "subPathExpr": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "deployment": {
                  "description": "Template for JmxTrans `Deployment`.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "deploymentStrategy": {
                      "description": "Pod replacement strategy for deployment configuration changes. Valid values are `RollingUpdate` and `Recreate`. Defaults to `RollingUpdate`.",
                      "type": [
                        "string",
                        "null"
                      ],
                      "enum": [
                        "RollingUpdate",
                        "Recreate"
                      ]
                    },
                    "metadata": {
                      "description": "Metadata applied to the resource.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "annotations": {
                          "description": "Annotations added to the Kubernetes resource.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "additionalProperties": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        },
                        "labels": {
                          "description": "Labels added to the Kubernetes resource.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "additionalProperties": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "pod": {
                  "description": "Template for JmxTrans `Pods`.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "affinity": {
                      "description": "The pod's affinity rules.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "nodeAffinity": {
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "preferredDuringSchedulingIgnoredDuringExecution": {
                              "type": [
                                "array",
                                "null"
                              ],
                              "items": {
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "properties": {
                                  "preference": {
                                    "type": [
                                      "object",
                                      "null"
                                    ],
                                    "properties": {
                                      "matchExpressions": {
                                        "type": [
                                          "array",
                                          "null"
                                        ],
                                        "items": {
                                          "type": [
                                            "object",
                                            "null"
                                          ],
                                          "properties": {
                                            "key": {
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            },
                                            "operator": {
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            },
                                            "values": {
                                              "type": [
                                                "array",
                                                "null"
                                              ],
                                              "items": {
                                                "type": [
                                                  "string",
                                                  "null"
                                                ]
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "matchFields": {
                                        "type": [
                                          "array",
                                          "null"
                                        ],
                                        "items": {
                                          "type": [
                                            "object",
                                            "null"
                                          ],
                                          "properties": {
                                            "key": {
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            },
                                            "operator": {
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            },
                                            "values": {
                                              "type": [
                                                "array",
                                                "null"
                                              ],
                                              "items": {
                                                "type": [
                                                  "string",
                                                  "null"
                                                ]
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "weight": {
                                    "type": [
                                      "integer",
                                      "null"
                                    ]
                                  }
                                }
                              }
                            },
                            "requiredDuringSchedulingIgnoredDuringExecution": {
                              "type": [
                                "object",
                                "null"
                              ],
                              "properties": {
                                "nodeSelectorTerms": {
                                  "type": [
                                    "array",
                                    "null"
                                  ],
                                  "items": {
                                    "type": [
                                      "object",
                                      "null"
                                    ],
                                    "properties": {
                                      "matchExpressions": {
                                        "type": [
                                          "array",
                                          "null"
                                        ],
                                        "items": {
                                          "type": [
                                            "object",
                                            "null"
                                          ],
                                          "properties": {
                                            "key": {
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            },
                                            "operator": {
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            },
                                            "values": {
                                              "type": [
                                                "array",
                                                "null"
                                              ],
                                              "items": {
                                                "type": [
                                                  "string",
                                                  "null"
                                                ]
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "matchFields": {
                                        "type": [
                                          "array",
                                          "null"
                                        ],
                                        "items": {
                                          "type": [
                                            "object",
                                            "null"
                                          ],
                                          "properties": {
                                            "key": {
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            },
                                            "operator": {
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            },
                                            "values": {
                                              "type": [
                                                "array",
                                                "null"
                                              ],
                                              "items": {
                                                "type": [
                                                  "string",
                                                  "null"
                                                ]
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "podAffinity": {
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "preferredDuringSchedulingIgnoredDuringExecution": {
                              "type": [
                                "array",
                                "null"
                              ],
                              "items": {
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "properties": {
                                  "podAffinityTerm": {
                                    "type": [
                                      "object",
                                      "null"
                                    ],
                                    "properties": {
                                      "labelSelector": {
                                        "type": [
                                          "object",
                                          "null"
                                        ],
                                        "properties": {
                                          "matchExpressions": {
                                            "type": [
                                              "array",
                                              "null"
                                            ],
                                            "items": {
                                              "type": [
                                                "object",
                                                "null"
                                              ],
                                              "properties": {
                                                "key": {
                                                  "type": [
                                                    "string",
                                                    "null"
                                                  ]
                                                },
                                                "operator": {
                                                  "type": [
                                                    "string",
                                                    "null"
                                                  ]
                                                },
                                                "values": {
                                                  "type": [
                                                    "array",
                                                    "null"
                                                  ],
                                                  "items": {
                                                    "type": [
                                                      "string",
                                                      "null"
                                                    ]
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "matchLabels": {
                                            "type": [
                                              "object",
                                              "null"
                                            ],
                                            "additionalProperties": {
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            }
                                          }
                                        }
                                      },
                                      "matchLabelKeys": {
                                        "type": [
                                          "array",
                                          "null"
                                        ],
                                        "items": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        }
                                      },
                                      "mismatchLabelKeys": {
                                        "type": [
                                          "array",
                                          "null"
                                        ],
                                        "items": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        }
                                      },
                                      "namespaceSelector": {
                                        "type": [
                                          "object",
                                          "null"
                                        ],
                                        "properties": {
                                          "matchExpressions": {
                                            "type": [
                                              "array",
                                              "null"
                                            ],
                                            "items": {
                                              "type": [
                                                "object",
                                                "null"
                                              ],
                                              "properties": {
                                                "key": {
                                                  "type": [
                                                    "string",
                                                    "null"
                                                  ]
                                                },
                                                "operator": {
                                                  "type": [
                                                    "string",
                                                    "null"
                                                  ]
                                                },
                                                "values": {
                                                  "type": [
                                                    "array",
                                                    "null"
                                                  ],
                                                  "items": {
                                                    "type": [
                                                      "string",
                                                      "null"
                                                    ]
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "matchLabels": {
                                            "type": [
                                              "object",
                                              "null"
                                            ],
                                            "additionalProperties": {
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            }
                                          }
                                        }
                                      },
                                      "namespaces": {
                                        "type": [
                                          "array",
                                          "null"
                                        ],
                                        "items": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        }
                                      },
                                      "topologyKey": {
                                        "type": [
                                          "string",
                                          "null"
                                        ]
                                      }
                                    }
                                  },
                                  "weight": {
                                    "type": [
                                      "integer",
                                      "null"
                                    ]
                                  }
                                }
                              }
                            },
                            "requiredDuringSchedulingIgnoredDuringExecution": {
                              "type": [
                                "array",
                                "null"
                              ],
                              "items": {
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "properties": {
                                  "labelSelector": {
                                    "type": [
                                      "object",
                                      "null"
                                    ],
                                    "properties": {
                                      "matchExpressions": {
                                        "type": [
                                          "array",
                                          "null"
                                        ],
                                        "items": {
                                          "type": [
                                            "object",
                                            "null"
                                          ],
                                          "properties": {
                                            "key": {
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            },
                                            "operator": {
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            },
                                            "values": {
                                              "type": [
                                                "array",
                                                "null"
                                              ],
                                              "items": {
                                                "type": [
                                                  "string",
                                                  "null"
                                                ]
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "matchLabels": {
                                        "type": [
                                          "object",
                                          "null"
                                        ],
                                        "additionalProperties": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        }
                                      }
                                    }
                                  },
                                  "matchLabelKeys": {
                                    "type": [
                                      "array",
                                      "null"
                                    ],
                                    "items": {
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    }
                                  },
                                  "mismatchLabelKeys": {
                                    "type": [
                                      "array",
                                      "null"
                                    ],
                                    "items": {
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    }
                                  },
                                  "namespaceSelector": {
                                    "type": [
                                      "object",
                                      "null"
                                    ],
                                    "properties": {
                                      "matchExpressions": {
                                        "type": [
                                          "array",
                                          "null"
                                        ],
                                        "items": {
                                          "type": [
                                            "object",
                                            "null"
                                          ],
                                          "properties": {
                                            "key": {
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            },
                                            "operator": {
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            },
                                            "values": {
                                              "type": [
                                                "array",
                                                "null"
                                              ],
                                              "items": {
                                                "type": [
                                                  "string",
                                                  "null"
                                                ]
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "matchLabels": {
                                        "type": [
                                          "object",
                                          "null"
                                        ],
                                        "additionalProperties": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        }
                                      }
                                    }
                                  },
                                  "namespaces": {
                                    "type": [
                                      "array",
                                      "null"
                                    ],
                                    "items": {
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    }
                                  },
                                  "topologyKey": {
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        },
                        "podAntiAffinity": {
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "preferredDuringSchedulingIgnoredDuringExecution": {
                              "type": [
                                "array",
                                "null"
                              ],
                              "items": {
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "properties": {
                                  "podAffinityTerm": {
                                    "type": [
                                      "object",
                                      "null"
                                    ],
                                    "properties": {
                                      "labelSelector": {
                                        "type": [
                                          "object",
                                          "null"
                                        ],
                                        "properties": {
                                          "matchExpressions": {
                                            "type": [
                                              "array",
                                              "null"
                                            ],
                                            "items": {
                                              "type": [
                                                "object",
                                                "null"
                                              ],
                                              "properties": {
                                                "key": {
                                                  "type": [
                                                    "string",
                                                    "null"
                                                  ]
                                                },
                                                "operator": {
                                                  "type": [
                                                    "string",
                                                    "null"
                                                  ]
                                                },
                                                "values": {
                                                  "type": [
                                                    "array",
                                                    "null"
                                                  ],
                                                  "items": {
                                                    "type": [
                                                      "string",
                                                      "null"
                                                    ]
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "matchLabels": {
                                            "type": [
                                              "object",
                                              "null"
                                            ],
                                            "additionalProperties": {
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            }
                                          }
                                        }
                                      },
                                      "matchLabelKeys": {
                                        "type": [
                                          "array",
                                          "null"
                                        ],
                                        "items": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        }
                                      },
                                      "mismatchLabelKeys": {
                                        "type": [
                                          "array",
                                          "null"
                                        ],
                                        "items": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        }
                                      },
                                      "namespaceSelector": {
                                        "type": [
                                          "object",
                                          "null"
                                        ],
                                        "properties": {
                                          "matchExpressions": {
                                            "type": [
                                              "array",
                                              "null"
                                            ],
                                            "items": {
                                              "type": [
                                                "object",
                                                "null"
                                              ],
                                              "properties": {
                                                "key": {
                                                  "type": [
                                                    "string",
                                                    "null"
                                                  ]
                                                },
                                                "operator": {
                                                  "type": [
                                                    "string",
                                                    "null"
                                                  ]
                                                },
                                                "values": {
                                                  "type": [
                                                    "array",
                                                    "null"
                                                  ],
                                                  "items": {
                                                    "type": [
                                                      "string",
                                                      "null"
                                                    ]
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "matchLabels": {
                                            "type": [
                                              "object",
                                              "null"
                                            ],
                                            "additionalProperties": {
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            }
                                          }
                                        }
                                      },
                                      "namespaces": {
                                        "type": [
                                          "array",
                                          "null"
                                        ],
                                        "items": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        }
                                      },
                                      "topologyKey": {
                                        "type": [
                                          "string",
                                          "null"
                                        ]
                                      }
                                    }
                                  },
                                  "weight": {
                                    "type": [
                                      "integer",
                                      "null"
                                    ]
                                  }
                                }
                              }
                            },
                            "requiredDuringSchedulingIgnoredDuringExecution": {
                              "type": [
                                "array",
                                "null"
                              ],
                              "items": {
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "properties": {
                                  "labelSelector": {
                                    "type": [
                                      "object",
                                      "null"
                                    ],
                                    "properties": {
                                      "matchExpressions": {
                                        "type": [
                                          "array",
                                          "null"
                                        ],
                                        "items": {
                                          "type": [
                                            "object",
                                            "null"
                                          ],
                                          "properties": {
                                            "key": {
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            },
                                            "operator": {
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            },
                                            "values": {
                                              "type": [
                                                "array",
                                                "null"
                                              ],
                                              "items": {
                                                "type": [
                                                  "string",
                                                  "null"
                                                ]
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "matchLabels": {
                                        "type": [
                                          "object",
                                          "null"
                                        ],
                                        "additionalProperties": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        }
                                      }
                                    }
                                  },
                                  "matchLabelKeys": {
                                    "type": [
                                      "array",
                                      "null"
                                    ],
                                    "items": {
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    }
                                  },
                                  "mismatchLabelKeys": {
                                    "type": [
                                      "array",
                                      "null"
                                    ],
                                    "items": {
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    }
                                  },
                                  "namespaceSelector": {
                                    "type": [
                                      "object",
                                      "null"
                                    ],
                                    "properties": {
                                      "matchExpressions": {
                                        "type": [
                                          "array",
                                          "null"
                                        ],
                                        "items": {
                                          "type": [
                                            "object",
                                            "null"
                                          ],
                                          "properties": {
                                            "key": {
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            },
                                            "operator": {
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            },
                                            "values": {
                                              "type": [
                                                "array",
                                                "null"
                                              ],
                                              "items": {
                                                "type": [
                                                  "string",
                                                  "null"
                                                ]
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "matchLabels": {
                                        "type": [
                                          "object",
                                          "null"
                                        ],
                                        "additionalProperties": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        }
                                      }
                                    }
                                  },
                                  "namespaces": {
                                    "type": [
                                      "array",
                                      "null"
                                    ],
                                    "items": {
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    }
                                  },
                                  "topologyKey": {
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "dnsConfig": {
                      "description": "The pod's DNSConfig. If specified, it will be merged to the generated DNS configuration based on the DNSPolicy.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "nameservers": {
                          "type": [
                            "array",
                            "null"
                          ],
                          "items": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        },
                        "options": {
                          "type": [
                            "array",
                            "null"
                          ],
                          "items": {
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "name": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "value": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            }
                          }
                        },
                        "searches": {
                          "type": [
                            "array",
                            "null"
                          ],
                          "items": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        }
                      }
                    },
                    "dnsPolicy": {
                      "description": "The pod's DNSPolicy. Defaults to `ClusterFirst`. Valid values are `ClusterFirstWithHostNet`, `ClusterFirst`, `Default` or `None`.",
                      "type": [
                        "string",
                        "null"
                      ],
                      "enum": [
                        "ClusterFirst",
                        "ClusterFirstWithHostNet",
                        "Default",
                        "None"
                      ]
                    },
                    "enableServiceLinks": {
                      "description": "Indicates whether information about services should be injected into Pod's environment variables.",
                      "type": [
                        "boolean",
                        "null"
                      ]
                    },
                    "hostAliases": {
                      "description": "The pod's HostAliases. HostAliases is an optional list of hosts and IPs that will be injected into the Pod's hosts file if specified.",
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "hostnames": {
                            "type": [
                              "array",
                              "null"
                            ],
                            "items": {
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          },
                          "ip": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        }
                      }
                    },
                    "imagePullSecrets": {
                      "description": "List of references to secrets in the same namespace to use for pulling any of the images used by this Pod. When the `STRIMZI_IMAGE_PULL_SECRETS` environment variable in Cluster Operator and the `imagePullSecrets` option are specified, only the `imagePullSecrets` variable is used and the `STRIMZI_IMAGE_PULL_SECRETS` variable is ignored.",
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "name": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        }
                      }
                    },
                    "metadata": {
                      "description": "Metadata applied to the resource.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "annotations": {
                          "description": "Annotations added to the Kubernetes resource.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "additionalProperties": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        },
                        "labels": {
                          "description": "Labels added to the Kubernetes resource.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "additionalProperties": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        }
                      }
                    },
                    "priorityClassName": {
                      "description": "The name of the priority class used to assign priority to the pods. ",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "schedulerName": {
                      "description": "The name of the scheduler used to dispatch this `Pod`. If not specified, the default scheduler will be used.",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "securityContext": {
                      "description": "Configures pod-level security attributes and common container settings.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "appArmorProfile": {
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "localhostProfile": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "type": {
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          }
                        },
                        "fsGroup": {
                          "type": [
                            "integer",
                            "null"
                          ]
                        },
                        "fsGroupChangePolicy": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "runAsGroup": {
                          "type": [
                            "integer",
                            "null"
                          ]
                        },
                        "runAsNonRoot": {
                          "type": [
                            "boolean",
                            "null"
                          ]
                        },
                        "runAsUser": {
                          "type": [
                            "integer",
                            "null"
                          ]
                        },
                        "seLinuxChangePolicy": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "seLinuxOptions": {
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "level": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "role": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "type": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "user": {
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          }
                        },
                        "seccompProfile": {
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "localhostProfile": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "type": {
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          }
                        },
                        "supplementalGroups": {
                          "type": [
                            "array",
                            "null"
                          ],
                          "items": {
                            "type": [
                              "integer",
                              "null"
                            ]
                          }
                        },
                        "supplementalGroupsPolicy": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "sysctls": {
                          "type": [
                            "array",
                            "null"
                          ],
                          "items": {
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "name": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "value": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            }
                          }
                        },
                        "windowsOptions": {
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "gmsaCredentialSpec": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "gmsaCredentialSpecName": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "hostProcess": {
                              "type": [
                                "boolean",
                                "null"
                              ]
                            },
                            "runAsUserName": {
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          }
                        }
                      }
                    },
                    "terminationGracePeriodSeconds": {
                      "description": "The grace period is the duration in seconds after the processes running in the pod are sent a termination signal, and the time when the processes are forcibly halted with a kill signal. Set this value to longer than the expected cleanup time for your process. Value must be a non-negative integer. A zero value indicates delete immediately. You might need to increase the grace period for very large Kafka clusters, so that the Kafka brokers have enough time to transfer their work to another broker before they are terminated. Defaults to 30 seconds.",
                      "type": [
                        "integer",
                        "null"
                      ],
                      "minimum": 0
                    },
                    "tmpDirSizeLimit": {
                      "description": "Defines the total amount of pod memory allocated for the temporary `EmptyDir` volume `/tmp`. Specify the allocation in memory units, for example, `100Mi` for 100 mebibytes. Default value is `5Mi`. The `/tmp` volume is backed by pod memory, not disk storage, so avoid setting a high value as it consumes pod memory resources.",
                      "type": [
                        "string",
                        "null"
                      ],
                      "pattern": "^([0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$"
                    },
                    "tolerations": {
                      "description": "The pod's tolerations.",
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "effect": {
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "key": {
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "operator": {
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "tolerationSeconds": {
                            "type": [
                              "integer",
                              "null"
                            ]
                          },
                          "value": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        }
                      }
                    },
                    "topologySpreadConstraints": {
                      "description": "The pod's topology spread constraints.",
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "labelSelector": {
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "matchExpressions": {
                                "type": [
                                  "array",
                                  "null"
                                ],
                                "items": {
                                  "type": [
                                    "object",
                                    "null"
                                  ],
                                  "properties": {
                                    "key": {
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    },
                                    "operator": {
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    },
                                    "values": {
                                      "type": [
                                        "array",
                                        "null"
                                      ],
                                      "items": {
                                        "type": [
                                          "string",
                                          "null"
                                        ]
                                      }
                                    }
                                  }
                                }
                              },
                              "matchLabels": {
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "additionalProperties": {
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                }
                              }
                            }
                          },
                          "matchLabelKeys": {
                            "type": [
                              "array",
                              "null"
                            ],
                            "items": {
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          },
                          "maxSkew": {
                            "type": [
                              "integer",
                              "null"
                            ]
                          },
                          "minDomains": {
                            "type": [
                              "integer",
                              "null"
                            ]
                          },
                          "nodeAffinityPolicy": {
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "nodeTaintsPolicy": {
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "topologyKey": {
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "whenUnsatisfiable": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        }
                      }
                    },
                    "volumes": {
                      "description": "Additional volumes that can be mounted to the pod.",
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "configMap": {
                            "description": "`ConfigMap` to use to populate the volume.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "defaultMode": {
                                "type": [
                                  "integer",
                                  "null"
                                ]
                              },
                              "items": {
                                "type": [
                                  "array",
                                  "null"
                                ],
                                "items": {
                                  "type": [
                                    "object",
                                    "null"
                                  ],
                                  "properties": {
                                    "key": {
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    },
                                    "mode": {
                                      "type": [
                                        "integer",
                                        "null"
                                      ]
                                    },
                                    "path": {
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    }
                                  }
                                }
                              },
                              "name": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "optional": {
                                "type": [
                                  "boolean",
                                  "null"
                                ]
                              }
                            }
                          },
                          "csi": {
                            "description": "`CSIVolumeSource` object to use to populate the volume.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "driver": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "fsType": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "nodePublishSecretRef": {
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "properties": {
                                  "name": {
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  }
                                }
                              },
                              "readOnly": {
                                "type": [
                                  "boolean",
                                  "null"
                                ]
                              },
                              "volumeAttributes": {
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "additionalProperties": {
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                }
                              }
                            }
                          },
                          "emptyDir": {
                            "description": "`EmptyDir` to use to populate the volume.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "medium": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "sizeLimit": {
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "properties": {
                                  "amount": {
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "format": {
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  }
                                }
                              }
                            }
                          },
                          "image": {
                            "description": "`ImageVolumeSource` object to use to populate the volume.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "pullPolicy": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "reference": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            }
                          },
                          "name": {
                            "description": "Name to use for the volume. Required.",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "persistentVolumeClaim": {
                            "description": "`PersistentVolumeClaim` object to use to populate the volume.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "claimName": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "readOnly": {
                                "type": [
                                  "boolean",
                                  "null"
                                ]
                              }
                            }
                          },
                          "secret": {
                            "description": "`Secret` to use to populate the volume.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "defaultMode": {
                                "type": [
                                  "integer",
                                  "null"
                                ]
                              },
                              "items": {
                                "type": [
                                  "array",
                                  "null"
                                ],
                                "items": {
                                  "type": [
                                    "object",
                                    "null"
                                  ],
                                  "properties": {
                                    "key": {
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    },
                                    "mode": {
                                      "type": [
                                        "integer",
                                        "null"
                                      ]
                                    },
                                    "path": {
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    }
                                  }
                                }
                              },
                              "optional": {
                                "type": [
                                  "boolean",
                                  "null"
                                ]
                              },
                              "secretName": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "serviceAccount": {
                  "description": "Template for the JmxTrans service account.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "metadata": {
                      "description": "Metadata applied to the resource.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "annotations": {
                          "description": "Annotations added to the Kubernetes resource.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "additionalProperties": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        },
                        "labels": {
                          "description": "Labels added to the Kubernetes resource.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "additionalProperties": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "kafka": {
          "description": "Configuration of the Kafka cluster.",
          "type": "object",
          "required": [
            "listeners"
          ],
          "properties": {
            "authorization": {
              "description": "Authorization configuration for Kafka brokers.",
              "type": [
                "object",
                "null"
              ],
              "required": [
                "type"
              ],
              "properties": {
                "allowOnError": {
                  "description": "Defines whether a Kafka client should be allowed or denied by default when the authorizer fails to query the Open Policy Agent, for example, when it is temporarily unavailable). Defaults to `false` - all actions will be denied.",
                  "type": [
                    "boolean",
                    "null"
                  ]
                },
                "authorizerClass": {
                  "description": "Authorization implementation class, which must be available in classpath.",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "clientId": {
                  "description": "OAuth Client ID which the Kafka client can use to authenticate against the OAuth server and use the token endpoint URI.",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "connectTimeoutSeconds": {
                  "description": "The connect timeout in seconds when connecting to authorization server. If not set, the effective connect timeout is 60 seconds.",
                  "type": [
                    "integer",
                    "null"
                  ],
                  "minimum": 1
                },
                "delegateToKafkaAcls": {
                  "description": "Whether authorization decision should be delegated to the 'Simple' authorizer if DENIED by Keycloak Authorization Services policies. Default value is `false`.",
                  "type": [
                    "boolean",
                    "null"
                  ]
                },
                "disableTlsHostnameVerification": {
                  "description": "Enable or disable TLS hostname verification. Default value is `false`.",
                  "type": [
                    "boolean",
                    "null"
                  ]
                },
                "enableMetrics": {
                  "description": "Enable or disable OAuth metrics. The default value is `false`.",
                  "type": [
                    "boolean",
                    "null"
                  ]
                },
                "expireAfterMs": {
                  "description": "The expiration of the records kept in the local cache to avoid querying the Open Policy Agent for every request. Defines how often the cached authorization decisions are reloaded from the Open Policy Agent server. In milliseconds. Defaults to `3600000`.",
                  "type": [
                    "integer",
                    "null"
                  ]
                },
                "grantsAlwaysLatest": {
                  "description": "Controls whether the latest grants are fetched for a new session. When enabled, grants are retrieved from Keycloak and cached for the user. The default value is `false`.",
                  "type": [
                    "boolean",
                    "null"
                  ]
                },
                "grantsGcPeriodSeconds": {
                  "description": "The time, in seconds, between consecutive runs of a job that cleans stale grants from the cache. The default value is 300.",
                  "type": [
                    "integer",
                    "null"
                  ],
                  "minimum": 1
                },
                "grantsMaxIdleTimeSeconds": {
                  "description": "The time, in seconds, after which an idle grant can be evicted from the cache. The default value is 300.",
                  "type": [
                    "integer",
                    "null"
                  ],
                  "minimum": 1
                },
                "grantsRefreshPeriodSeconds": {
                  "description": "The time between two consecutive grants refresh runs in seconds. The default value is 60.",
                  "type": [
                    "integer",
                    "null"
                  ],
                  "minimum": 0
                },
                "grantsRefreshPoolSize": {
                  "description": "The number of threads to use to refresh grants for active sessions. The more threads, the more parallelism, so the sooner the job completes. However, using more threads places a heavier load on the authorization server. The default value is 5.",
                  "type": [
                    "integer",
                    "null"
                  ],
                  "minimum": 1
                },
                "httpRetries": {
                  "description": "The maximum number of retries to attempt if an initial HTTP request fails. If not set, the default is to not attempt any retries.",
                  "type": [
                    "integer",
                    "null"
                  ],
                  "minimum": 0
                },
                "includeAcceptHeader": {
                  "description": "Whether the Accept header should be set in requests to the authorization servers. The default value is `true`.",
                  "type": [
                    "boolean",
                    "null"
                  ]
                },
                "initialCacheCapacity": {
                  "description": "Initial capacity of the local cache used by the authorizer to avoid querying the Open Policy Agent for every request Defaults to `5000`.",
                  "type": [
                    "integer",
                    "null"
                  ]
                },
                "maximumCacheSize": {
                  "description": "Maximum capacity of the local cache used by the authorizer to avoid querying the Open Policy Agent for every request. Defaults to `50000`.",
                  "type": [
                    "integer",
                    "null"
                  ]
                },
                "readTimeoutSeconds": {
                  "description": "The read timeout in seconds when connecting to authorization server. If not set, the effective read timeout is 60 seconds.",
                  "type": [
                    "integer",
                    "null"
                  ],
                  "minimum": 1
                },
                "superUsers": {
                  "description": "List of super users, which are user principals with unlimited access rights.",
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                },
                "supportsAdminApi": {
                  "description": "Indicates whether the custom authorizer supports the APIs for managing ACLs using the Kafka Admin API. Defaults to `false`.",
                  "type": [
                    "boolean",
                    "null"
                  ]
                },
                "tlsTrustedCertificates": {
                  "description": "Trusted certificates for TLS connection to the OAuth server.",
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "required": [
                      "secretName"
                    ],
                    "properties": {
                      "certificate": {
                        "description": "The name of the file certificate in the secret.",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "pattern": {
                        "description": "Pattern for the certificate files in the secret. Use the link:https://en.wikipedia.org/wiki/Glob_(programming)[_glob syntax_] for the pattern. All files in the secret that match the pattern are used.",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "secretName": {
                        "description": "The name of the Secret containing the certificate.",
                        "type": "string"
                      }
                    }
                  }
                },
                "tokenEndpointUri": {
                  "description": "Authorization server token endpoint URI.",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "type": {
                  "description": "Authorization type. Currently, the supported types are `simple`, `keycloak`, `opa` and `custom`. `simple` authorization type uses Kafka's built-in authorizer for authorization. `keycloak` authorization type uses Keycloak Authorization Services for authorization. `opa` authorization type uses Open Policy Agent based authorization. `custom` authorization type uses user-provided implementation for authorization. As of Strimzi 0.46.0, `opa` type is deprecated and will be removed in the future. Please use `custom` type instead.",
                  "type": "string",
                  "enum": [
                    "simple",
                    "opa",
                    "keycloak",
                    "custom"
                  ]
                },
                "url": {
                  "description": "The URL used to connect to the Open Policy Agent server. The URL has to include the policy which will be queried by the authorizer. This option is required.",
                  "type": [
                    "string",
                    "null"
                  ]
                }
              }
            },
            "brokerRackInitImage": {
              "description": "The image of the init container used for initializing the `broker.rack`.",
              "type": [
                "string",
                "null"
              ]
            },
            "config": {
              "description": "Kafka broker config properties with the following prefixes cannot be set: listeners, advertised., broker., listener., host.name, port, inter.broker.listener.name, sasl., ssl., security., password., log.dir, zookeeper.connect, zookeeper.set.acl, zookeeper.ssl, zookeeper.clientCnxnSocket, authorizer., super.user, cruise.control.metrics.topic, cruise.control.metrics.reporter.bootstrap.servers, node.id, process.roles, controller., metadata.log.dir, zookeeper.metadata.migration.enable, client.quota.callback.static.kafka.admin., client.quota.callback.static.produce, client.quota.callback.static.fetch, client.quota.callback.static.storage.per.volume.limit.min.available., client.quota.callback.static.excluded.principal.name.list, prometheus.metrics.reporter. (with the exception of: zookeeper.connection.timeout.ms, sasl.server.max.receive.size, ssl.cipher.suites, ssl.protocol, ssl.enabled.protocols, ssl.secure.random.implementation, cruise.control.metrics.topic.num.partitions, cruise.control.metrics.topic.replication.factor, cruise.control.metrics.topic.retention.ms, cruise.control.metrics.topic.auto.create.retries, cruise.control.metrics.topic.auto.create.timeout.ms, cruise.control.metrics.topic.min.insync.replicas, controller.quorum.election.backoff.max.ms, controller.quorum.election.timeout.ms, controller.quorum.fetch.timeout.ms).",
              "x-kubernetes-preserve-unknown-fields": true
            },
            "image": {
              "description": "The container image used for Kafka pods. If the property is not set, the default Kafka image version is determined based on the `version` configuration. The image names are specifically mapped to corresponding versions in the Cluster Operator configuration. Changing the Kafka image version does not automatically update the image versions for other components, such as Kafka Exporter. ",
              "type": [
                "string",
                "null"
              ]
            },
            "jmxOptions": {
              "description": "JMX Options for Kafka brokers.",
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "authentication": {
                  "description": "Authentication configuration for connecting to the JMX port.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "required": [
                    "type"
                  ],
                  "properties": {
                    "type": {
                      "description": "Authentication type. Currently the only supported types are `password`.`password` type creates a username and protected port with no TLS.",
                      "type": "string",
                      "enum": [
                        "password"
                      ]
                    }
                  }
                }
              }
            },
            "jvmOptions": {
              "description": "JVM Options for pods.",
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "-XX": {
                  "description": "A map of -XX options to the JVM.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "additionalProperties": {
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                },
                "-Xms": {
                  "description": "-Xms option to to the JVM.",
                  "type": [
                    "string",
                    "null"
                  ],
                  "pattern": "^[0-9]+[mMgG]?$"
                },
                "-Xmx": {
                  "description": "-Xmx option to to the JVM.",
                  "type": [
                    "string",
                    "null"
                  ],
                  "pattern": "^[0-9]+[mMgG]?$"
                },
                "gcLoggingEnabled": {
                  "description": "Specifies whether the Garbage Collection logging is enabled. The default is false.",
                  "type": [
                    "boolean",
                    "null"
                  ]
                },
                "javaSystemProperties": {
                  "description": "A map of additional system properties which will be passed using the `-D` option to the JVM.",
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "properties": {
                      "name": {
                        "description": "The system property name.",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "value": {
                        "description": "The system property value.",
                        "type": [
                          "string",
                          "null"
                        ]
                      }
                    }
                  }
                }
              }
            },
            "listeners": {
              "description": "Configures listeners to provide access to Kafka brokers.",
              "type": "array",
              "minItems": 1,
              "items": {
                "type": [
                  "object",
                  "null"
                ],
                "required": [
                  "name",
                  "port",
                  "type",
                  "tls"
                ],
                "properties": {
                  "authentication": {
                    "description": "Authentication configuration for this listener.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "required": [
                      "type"
                    ],
                    "properties": {
                      "accessTokenIsJwt": {
                        "description": "Configure whether the access token is treated as JWT. This must be set to `false` if the authorization server returns opaque tokens. Defaults to `true`.",
                        "type": [
                          "boolean",
                          "null"
                        ]
                      },
                      "checkAccessTokenType": {
                        "description": "Configure whether the access token type check is performed or not. This should be set to `false` if the authorization server does not include 'typ' claim in JWT token. Defaults to `true`.",
                        "type": [
                          "boolean",
                          "null"
                        ]
                      },
                      "checkAudience": {
                        "description": "Enable or disable audience checking. Audience checks identify the recipients of tokens. If audience checking is enabled, the OAuth Client ID also has to be configured using the `clientId` property. The Kafka broker will reject tokens that do not have its `clientId` in their `aud` (audience) claim.Default value is `false`.",
                        "type": [
                          "boolean",
                          "null"
                        ]
                      },
                      "checkIssuer": {
                        "description": "Enable or disable issuer checking. By default issuer is checked using the value configured by `validIssuerUri`. Default value is `true`.",
                        "type": [
                          "boolean",
                          "null"
                        ]
                      },
                      "clientAudience": {
                        "description": "The audience to use when making requests to the authorization server's token endpoint. Used for inter-broker authentication and for configuring OAuth 2.0 over PLAIN using the `clientId` and `secret` method.",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "clientId": {
                        "description": "OAuth Client ID which the Kafka broker can use to authenticate against the authorization server and use the introspect endpoint URI.",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "clientScope": {
                        "description": "The scope to use when making requests to the authorization server's token endpoint. Used for inter-broker authentication and for configuring OAuth 2.0 over PLAIN using the `clientId` and `secret` method.",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "clientSecret": {
                        "description": "Link to Kubernetes Secret containing the OAuth client secret which the Kafka broker can use to authenticate against the authorization server and use the introspect endpoint URI.",
                        "type": [
                          "object",
                          "null"
                        ],
                        "required": [
                          "key",
                          "secretName"
                        ],
                        "properties": {
                          "key": {
                            "description": "The key under which the secret value is stored in the Kubernetes Secret.",
                            "type": "string"
                          },
                          "secretName": {
                            "description": "The name of the Kubernetes Secret containing the secret value.",
                            "type": "string"
                          }
                        }
                      },
                      "connectTimeoutSeconds": {
                        "description": "The connect timeout in seconds when connecting to authorization server. If not set, the effective connect timeout is 60 seconds.",
                        "type": [
                          "integer",
                          "null"
                        ]
                      },
                      "customClaimCheck": {
                        "description": "JsonPath filter query to be applied to the JWT token or to the response of the introspection endpoint for additional token validation. Not set by default.",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "disableTlsHostnameVerification": {
                        "description": "Enable or disable TLS hostname verification. Default value is `false`.",
                        "type": [
                          "boolean",
                          "null"
                        ]
                      },
                      "enableECDSA": {
                        "description": "Enable or disable ECDSA support by installing BouncyCastle crypto provider. ECDSA support is always enabled. The BouncyCastle libraries are no longer packaged with Strimzi. Value is ignored.",
                        "type": [
                          "boolean",
                          "null"
                        ]
                      },
                      "enableMetrics": {
                        "description": "Enable or disable OAuth metrics. Default value is `false`.",
                        "type": [
                          "boolean",
                          "null"
                        ]
                      },
                      "enableOauthBearer": {
                        "description": "Enable or disable OAuth authentication over SASL_OAUTHBEARER. Default value is `true`.",
                        "type": [
                          "boolean",
                          "null"
                        ]
                      },
                      "enablePlain": {
                        "description": "Enable or disable OAuth authentication over SASL_PLAIN. There is no re-authentication support when this mechanism is used. Default value is `false`.",
                        "type": [
                          "boolean",
                          "null"
                        ]
                      },
                      "failFast": {
                        "description": "Enable or disable termination of Kafka broker processes due to potentially recoverable runtime errors during startup. Default value is `true`.",
                        "type": [
                          "boolean",
                          "null"
                        ]
                      },
                      "fallbackUserNameClaim": {
                        "description": "The fallback username claim to be used for the user ID if the claim specified by `userNameClaim` is not present. This is useful when `client_credentials` authentication only results in the client ID being provided in another claim. It only takes effect if `userNameClaim` is set.",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "fallbackUserNamePrefix": {
                        "description": "The prefix to use with the value of `fallbackUserNameClaim` to construct the user id. This only takes effect if `fallbackUserNameClaim` is true, and the value is present for the claim. Mapping usernames and client ids into the same user id space is useful in preventing name collisions.",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "groupsClaim": {
                        "description": "JsonPath query used to extract groups for the user during authentication. Extracted groups can be used by a custom authorizer. By default no groups are extracted.",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "groupsClaimDelimiter": {
                        "description": "A delimiter used to parse groups when they are extracted as a single String value rather than a JSON array. Default value is ',' (comma).",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "httpRetries": {
                        "description": "The maximum number of retries to attempt if an initial HTTP request fails. If not set, the default is to not attempt any retries.",
                        "type": [
                          "integer",
                          "null"
                        ]
                      },
                      "httpRetryPauseMs": {
                        "description": "The pause to take before retrying a failed HTTP request. If not set, the default is to not pause at all but to immediately repeat a request.",
                        "type": [
                          "integer",
                          "null"
                        ]
                      },
                      "includeAcceptHeader": {
                        "description": "Whether the Accept header should be set in requests to the authorization servers. The default value is `true`.",
                        "type": [
                          "boolean",
                          "null"
                        ]
                      },
                      "introspectionEndpointUri": {
                        "description": "URI of the token introspection endpoint which can be used to validate opaque non-JWT tokens.",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "jwksEndpointUri": {
                        "description": "URI of the JWKS certificate endpoint, which can be used for local JWT validation.",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "jwksExpirySeconds": {
                        "description": "Configures how often are the JWKS certificates considered valid. The expiry interval has to be at least 60 seconds longer then the refresh interval specified in `jwksRefreshSeconds`. Defaults to 360 seconds.",
                        "type": [
                          "integer",
                          "null"
                        ],
                        "minimum": 1
                      },
                      "jwksIgnoreKeyUse": {
                        "description": "Flag to ignore the 'use' attribute of `key` declarations in a JWKS endpoint response. Default value is `false`.",
                        "type": [
                          "boolean",
                          "null"
                        ]
                      },
                      "jwksMinRefreshPauseSeconds": {
                        "description": "The minimum pause between two consecutive refreshes. When an unknown signing key is encountered the refresh is scheduled immediately, but will always wait for this minimum pause. Defaults to 1 second.",
                        "type": [
                          "integer",
                          "null"
                        ],
                        "minimum": 0
                      },
                      "jwksRefreshSeconds": {
                        "description": "Configures how often are the JWKS certificates refreshed. The refresh interval has to be at least 60 seconds shorter then the expiry interval specified in `jwksExpirySeconds`. Defaults to 300 seconds.",
                        "type": [
                          "integer",
                          "null"
                        ],
                        "minimum": 1
                      },
                      "listenerConfig": {
                        "description": "Configuration to be used for a specific listener. All values are prefixed with `listener.name.<listener_name>`.",
                        "x-kubernetes-preserve-unknown-fields": true
                      },
                      "maxSecondsWithoutReauthentication": {
                        "description": "Maximum number of seconds the authenticated session remains valid without re-authentication. This enables Apache Kafka re-authentication feature, and causes sessions to expire when the access token expires. If the access token expires before max time or if max time is reached, the client has to re-authenticate, otherwise the server will drop the connection. Not set by default - the authenticated session does not expire when the access token expires. This option only applies to SASL_OAUTHBEARER authentication mechanism (when `enableOauthBearer` is `true`).",
                        "type": [
                          "integer",
                          "null"
                        ]
                      },
                      "readTimeoutSeconds": {
                        "description": "The read timeout in seconds when connecting to authorization server. If not set, the effective read timeout is 60 seconds.",
                        "type": [
                          "integer",
                          "null"
                        ]
                      },
                      "sasl": {
                        "description": "Enable or disable SASL on this listener.",
                        "type": [
                          "boolean",
                          "null"
                        ]
                      },
                      "secrets": {
                        "description": "Secrets to be mounted to `/opt/kafka/custom-authn-secrets/custom-listener-<listener_name>-<port>/<secret_name>`.",
                        "type": [
                          "array",
                          "null"
                        ],
                        "items": {
                          "type": [
                            "object",
                            "null"
                          ],
                          "required": [
                            "key",
                            "secretName"
                          ],
                          "properties": {
                            "key": {
                              "description": "The key under which the secret value is stored in the Kubernetes Secret.",
                              "type": "string"
                            },
                            "secretName": {
                              "description": "The name of the Kubernetes Secret containing the secret value.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "serverBearerTokenLocation": {
                        "description": "Path to the file on the local filesystem that contains a bearer token to be used instead of client ID and secret when authenticating to authorization server.",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "tlsTrustedCertificates": {
                        "description": "Trusted certificates for TLS connection to the OAuth server.",
                        "type": [
                          "array",
                          "null"
                        ],
                        "items": {
                          "type": [
                            "object",
                            "null"
                          ],
                          "required": [
                            "secretName"
                          ],
                          "properties": {
                            "certificate": {
                              "description": "The name of the file certificate in the secret.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "pattern": {
                              "description": "Pattern for the certificate files in the secret. Use the link:https://en.wikipedia.org/wiki/Glob_(programming)[_glob syntax_] for the pattern. All files in the secret that match the pattern are used.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "secretName": {
                              "description": "The name of the Secret containing the certificate.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "tokenEndpointUri": {
                        "description": "URI of the Token Endpoint to use with SASL_PLAIN mechanism when the client authenticates with `clientId` and a `secret`. If set, the client can authenticate over SASL_PLAIN by either setting `username` to `clientId`, and setting `password` to client `secret`, or by setting `username` to account username, and `password` to access token prefixed with `$accessToken:`. If this option is not set, the `password` is always interpreted as an access token (without a prefix), and `username` as the account username (a so called 'no-client-credentials' mode).",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "type": {
                        "description": "Authentication type. `oauth` type uses SASL OAUTHBEARER Authentication. `scram-sha-512` type uses SASL SCRAM-SHA-512 Authentication. `tls` type uses TLS Client Authentication. `tls` type is supported only on TLS listeners.`custom` type allows for any authentication type to be used.",
                        "type": "string",
                        "enum": [
                          "tls",
                          "scram-sha-512",
                          "oauth",
                          "custom"
                        ]
                      },
                      "userInfoEndpointUri": {
                        "description": "URI of the User Info Endpoint to use as a fallback to obtaining the user id when the Introspection Endpoint does not return information that can be used for the user id. ",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "userNameClaim": {
                        "description": "Name of the claim from the JWT authentication token, Introspection Endpoint response or User Info Endpoint response which will be used to extract the user id. Defaults to `sub`.",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "userNamePrefix": {
                        "description": "The prefix to use with the value of `userNameClaim` to construct the user ID. This only takes effect if `userNameClaim` is specified and the value is present for the claim. When used in combination with `fallbackUserNameClaims`, it ensures consistent mapping of usernames and client IDs into the same user ID space and prevents name collisions.",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "validIssuerUri": {
                        "description": "URI of the token issuer used for authentication.",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "validTokenType": {
                        "description": "Valid value for the `token_type` attribute returned by the Introspection Endpoint. No default value, and not checked by default.",
                        "type": [
                          "string",
                          "null"
                        ]
                      }
                    }
                  },
                  "configuration": {
                    "description": "Additional listener configuration.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "properties": {
                      "advertisedHostTemplate": {
                        "description": "Configures the template for generating the advertised hostnames of the individual brokers. Valid placeholders that you can use in the template are `{nodeId}` and `{nodePodName}`.",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "allocateLoadBalancerNodePorts": {
                        "description": "Configures whether to allocate NodePort automatically for the `Service` with type `LoadBalancer`.\nThis is a one to one with the `spec.allocateLoadBalancerNodePorts` configuration in the `Service` type\nFor `loadbalancer` listeners only.",
                        "type": [
                          "boolean",
                          "null"
                        ]
                      },
                      "bootstrap": {
                        "description": "Bootstrap configuration.",
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "alternativeNames": {
                            "description": "Additional alternative names for the bootstrap service. The alternative names will be added to the list of subject alternative names of the TLS certificates.",
                            "type": [
                              "array",
                              "null"
                            ],
                            "items": {
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          },
                          "annotations": {
                            "description": "Annotations added to `Ingress`, `Route`, or `Service` resources. You can use this property to configure DNS providers such as External DNS. For `loadbalancer`, `nodeport`, `route`, or `ingress` listeners only.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "additionalProperties": {
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          },
                          "externalIPs": {
                            "description": "External IPs associated to the nodeport service. These IPs are used by clients external to the Kubernetes cluster to access the Kafka brokers. This property is helpful when `nodeport` without `externalIP` is not sufficient. For example on bare-metal Kubernetes clusters that do not support Loadbalancer service types. For `nodeport` listeners only.",
                            "type": [
                              "array",
                              "null"
                            ],
                            "items": {
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          },
                          "host": {
                            "description": "Specifies the hostname used for the bootstrap resource. For `route` (optional) or `ingress` (required) listeners only. Ensure the hostname resolves to the Ingress endpoints; no validation is performed by Strimzi.",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "labels": {
                            "description": "Labels added to `Ingress`, `Route`, or `Service` resources. For `loadbalancer`, `nodeport`, `route`, or `ingress` listeners only.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "additionalProperties": {
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          },
                          "loadBalancerIP": {
                            "description": "The loadbalancer is requested with the IP address specified in this property. This feature depends on whether the underlying cloud provider supports specifying the `loadBalancerIP` when a load balancer is created. This property is ignored if the cloud provider does not support the feature. For `loadbalancer` listeners only.",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "nodePort": {
                            "description": "Node port for the bootstrap service. For `nodeport` listeners only.",
                            "type": [
                              "integer",
                              "null"
                            ]
                          }
                        }
                      },
                      "brokerCertChainAndKey": {
                        "description": "Reference to the `Secret` which holds the certificate and private key pair which will be used for this listener. The certificate can optionally contain the whole chain. This field can be used only with listeners with enabled TLS encryption.",
                        "type": [
                          "object",
                          "null"
                        ],
                        "required": [
                          "secretName",
                          "certificate",
                          "key"
                        ],
                        "properties": {
                          "certificate": {
                            "description": "The name of the file certificate in the Secret.",
                            "type": "string"
                          },
                          "key": {
                            "description": "The name of the private key in the Secret.",
                            "type": "string"
                          },
                          "secretName": {
                            "description": "The name of the Secret containing the certificate.",
                            "type": "string"
                          }
                        }
                      },
                      "brokers": {
                        "description": "Per-broker configurations.",
                        "type": [
                          "array",
                          "null"
                        ],
                        "items": {
                          "type": [
                            "object",
                            "null"
                          ],
                          "required": [
                            "broker"
                          ],
                          "properties": {
                            "advertisedHost": {
                              "description": "The host name used in the brokers' `advertised.listeners`.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "advertisedPort": {
                              "description": "The port number used in the brokers' `advertised.listeners`.",
                              "type": [
                                "integer",
                                "null"
                              ]
                            },
                            "annotations": {
                              "description": "Annotations that will be added to the `Ingress` or `Service` resource. You can use this field to configure DNS providers such as External DNS. This field can be used only with `loadbalancer`, `nodeport`, or `ingress` type listeners.",
                              "type": [
                                "object",
                                "null"
                              ],
                              "additionalProperties": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            },
                            "broker": {
                              "description": "ID of the kafka broker (broker identifier). Broker IDs start from 0 and correspond to the number of broker replicas.",
                              "type": "integer"
                            },
                            "externalIPs": {
                              "description": "External IPs associated to the nodeport service. These IPs are used by clients external to the Kubernetes cluster to access the Kafka brokers. This field is helpful when `nodeport` without `externalIP` is not sufficient. For example on bare-metal Kubernetes clusters that do not support Loadbalancer service types. This field can only be used with `nodeport` type listener.",
                              "type": [
                                "array",
                                "null"
                              ],
                              "items": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            },
                            "host": {
                              "description": "The broker host. This field will be used in the Ingress resource or in the Route resource to specify the desired hostname. This field can be used only with `route` (optional) or `ingress` (required) type listeners.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "labels": {
                              "description": "Labels that will be added to the `Ingress`, `Route`, or `Service` resource. This field can be used only with `loadbalancer`, `nodeport`, `route`, or `ingress` type listeners.",
                              "type": [
                                "object",
                                "null"
                              ],
                              "additionalProperties": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            },
                            "loadBalancerIP": {
                              "description": "The loadbalancer is requested with the IP address specified in this field. This feature depends on whether the underlying cloud provider supports specifying the `loadBalancerIP` when a load balancer is created. This field is ignored if the cloud provider does not support the feature.This field can be used only with `loadbalancer` type listener.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "nodePort": {
                              "description": "Node port for the per-broker service. This field can be used only with `nodeport` type listener.",
                              "type": [
                                "integer",
                                "null"
                              ]
                            }
                          }
                        }
                      },
                      "class": {
                        "description": "Configures a specific class for `Ingress` and `LoadBalancer` that defines which controller is used. If not specified, the default controller is used.\n\n* For an `ingress` listener, the operator uses this property to set the `ingressClassName` property in the `Ingress` resources.\n* For a `loadbalancer` listener, the operator uses this property to set the `loadBalancerClass` property  in the `Service` resources.\n\nFor `ingress` and `loadbalancer` listeners only.",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "createBootstrapService": {
                        "description": "Whether to create the bootstrap service or not. The bootstrap service is created by default (if not specified differently). This field can be used with the `loadbalancer` listener.",
                        "type": [
                          "boolean",
                          "null"
                        ]
                      },
                      "externalTrafficPolicy": {
                        "description": "Specifies whether the service routes external traffic to cluster-wide or node-local endpoints:\n\n* `Cluster` may cause a second hop to another node and obscures the client source IP.\n* `Local` avoids a second hop for `LoadBalancer` and `Nodeport` type services and preserves the client source IP (when supported by the infrastructure).\n\nIf unspecified, Kubernetes uses `Cluster` as the default. For `loadbalancer` or `nodeport` listeners only.",
                        "type": [
                          "string",
                          "null"
                        ],
                        "enum": [
                          "Local",
                          "Cluster"
                        ]
                      },
                      "finalizers": {
                        "description": "A list of finalizers configured for the `LoadBalancer` type services created for this listener. If supported by the platform, the finalizer `service.kubernetes.io/load-balancer-cleanup` to make sure that the external load balancer is deleted together with the service.For more information, see https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#garbage-collecting-load-balancers. For `loadbalancer` listeners only.",
                        "type": [
                          "array",
                          "null"
                        ],
                        "items": {
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      },
                      "hostTemplate": {
                        "description": "Configures the template for generating the hostnames of the individual brokers. Valid placeholders that you can use in the template are `{nodeId}` and `{nodePodName}`.",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "ipFamilies": {
                        "description": "Specifies the IP Families used by the service. Available options are `IPv4` and `IPv6`. If unspecified, Kubernetes will choose the default value based on the `ipFamilyPolicy` setting.",
                        "type": [
                          "array",
                          "null"
                        ],
                        "items": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "enum": [
                            "IPv4",
                            "IPv6"
                          ]
                        }
                      },
                      "ipFamilyPolicy": {
                        "description": "Specifies the IP Family Policy used by the service. Available options are `SingleStack`, `PreferDualStack` and `RequireDualStack`:\n\n* `SingleStack` is for a single IP family.\n* `PreferDualStack` is for two IP families on dual-stack configured clusters or a single IP family on single-stack clusters.\n* `RequireDualStack` fails unless there are two IP families on dual-stack configured clusters.\n\nIf unspecified, Kubernetes will choose the default value based on the service type.",
                        "type": [
                          "string",
                          "null"
                        ],
                        "enum": [
                          "SingleStack",
                          "PreferDualStack",
                          "RequireDualStack"
                        ]
                      },
                      "loadBalancerSourceRanges": {
                        "description": "A list of CIDR ranges (for example `10.0.0.0/8` or `130.211.204.1/32`) from which clients can connect to loadbalancer listeners. If supported by the platform, traffic through the loadbalancer is restricted to the specified CIDR ranges. This field is applicable only for loadbalancer type services and is ignored if the cloud provider does not support the feature. For `loadbalancer` listeners only.",
                        "type": [
                          "array",
                          "null"
                        ],
                        "items": {
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      },
                      "maxConnectionCreationRate": {
                        "description": "The maximum connection creation rate we allow in this listener at any time. New connections will be throttled if the limit is reached.",
                        "type": [
                          "integer",
                          "null"
                        ]
                      },
                      "maxConnections": {
                        "description": "The maximum number of connections we allow for this listener in the broker at any time. New connections are blocked if the limit is reached.",
                        "type": [
                          "integer",
                          "null"
                        ]
                      },
                      "preferredNodePortAddressType": {
                        "description": "Defines which address type should be used as the node address. Available types are: `ExternalDNS`, `ExternalIP`, `InternalDNS`, `InternalIP` and `Hostname`. By default, the addresses are used in the following order (the first one found is used):\n\n* `ExternalDNS`\n* `ExternalIP`\n* `InternalDNS`\n* `InternalIP`\n* `Hostname`\n\nThis property is used to select the preferred address type, which is checked first. If no address is found for this address type, the other types are checked in the default order.For `nodeport` listeners only.",
                        "type": [
                          "string",
                          "null"
                        ],
                        "enum": [
                          "ExternalIP",
                          "ExternalDNS",
                          "InternalIP",
                          "InternalDNS",
                          "Hostname"
                        ]
                      },
                      "publishNotReadyAddresses": {
                        "description": "Configures whether the service endpoints are considered \"ready\" even if the Pods themselves are not. Defaults to `false`. This field can not be used with `internal` listeners.",
                        "type": [
                          "boolean",
                          "null"
                        ]
                      },
                      "useServiceDnsDomain": {
                        "description": "Configures whether the Kubernetes service DNS domain should be included in the generated addresses.\n\n* If set to `false`, the generated addresses do not contain the service DNS domain suffix. For example, `my-cluster-kafka-0.my-cluster-kafka-brokers.myproject.svc`.\n* If set to `true`, the generated addresses contain the service DNS domain suffix. For example, `my-cluster-kafka-0.my-cluster-kafka-brokers.myproject.svc.cluster.local`.\n\nThe default is `.cluster.local`, but this is customizable using the environment variable `KUBERNETES_SERVICE_DNS_DOMAIN`. For `internal` and `cluster-ip` listeners only.",
                        "type": [
                          "boolean",
                          "null"
                        ]
                      }
                    }
                  },
                  "name": {
                    "description": "Name of the listener. The name will be used to identify the listener and the related Kubernetes objects. The name has to be unique within given a Kafka cluster. The name can consist of lowercase characters and numbers and be up to 11 characters long.",
                    "type": "string",
                    "pattern": "^[a-z0-9]{1,11}$"
                  },
                  "networkPolicyPeers": {
                    "description": "List of peers which should be able to connect to this listener. Peers in this list are combined using a logical OR operation. If this field is empty or missing, all connections will be allowed for this listener. If this field is present and contains at least one item, the listener only allows the traffic which matches at least one item in this list.",
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "ipBlock": {
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "cidr": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "except": {
                              "type": [
                                "array",
                                "null"
                              ],
                              "items": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            }
                          }
                        },
                        "namespaceSelector": {
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "matchExpressions": {
                              "type": [
                                "array",
                                "null"
                              ],
                              "items": {
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "properties": {
                                  "key": {
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "operator": {
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "values": {
                                    "type": [
                                      "array",
                                      "null"
                                    ],
                                    "items": {
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    }
                                  }
                                }
                              }
                            },
                            "matchLabels": {
                              "type": [
                                "object",
                                "null"
                              ],
                              "additionalProperties": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            }
                          }
                        },
                        "podSelector": {
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "matchExpressions": {
                              "type": [
                                "array",
                                "null"
                              ],
                              "items": {
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "properties": {
                                  "key": {
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "operator": {
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "values": {
                                    "type": [
                                      "array",
                                      "null"
                                    ],
                                    "items": {
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    }
                                  }
                                }
                              }
                            },
                            "matchLabels": {
                              "type": [
                                "object",
                                "null"
                              ],
                              "additionalProperties": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "port": {
                    "description": "Port number used by the listener inside Kafka. The port number has to be unique within a given Kafka cluster. Allowed port numbers are 9092 and higher with the exception of ports 9404 and 9999, which are already used for Prometheus and JMX. Depending on the listener type, the port number might not be the same as the port number that connects Kafka clients.",
                    "type": "integer",
                    "minimum": 9092
                  },
                  "tls": {
                    "description": "Enables TLS encryption on the listener. This is a required property. For `route` and `ingress` type listeners, TLS encryption must be always enabled.",
                    "type": "boolean"
                  },
                  "type": {
                    "description": "Type of the listener. The supported types are as follows: \n\n* `internal` type exposes Kafka internally only within the Kubernetes cluster.\n* `route` type uses OpenShift Routes to expose Kafka.\n* `loadbalancer` type uses LoadBalancer type services to expose Kafka.\n* `nodeport` type uses NodePort type services to expose Kafka.\n* `ingress` type uses Kubernetes Nginx Ingress to expose Kafka with TLS passthrough.\n* `cluster-ip` type uses a per-broker `ClusterIP` service.\n",
                    "type": "string",
                    "enum": [
                      "internal",
                      "route",
                      "loadbalancer",
                      "nodeport",
                      "ingress",
                      "cluster-ip"
                    ]
                  }
                }
              }
            },
            "livenessProbe": {
              "description": "Pod liveness checking.",
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "failureThreshold": {
                  "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.",
                  "type": [
                    "integer",
                    "null"
                  ],
                  "minimum": 1
                },
                "initialDelaySeconds": {
                  "description": "The initial delay before first the health is first checked. Default to 15 seconds. Minimum value is 0.",
                  "type": [
                    "integer",
                    "null"
                  ],
                  "minimum": 0
                },
                "periodSeconds": {
                  "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.",
                  "type": [
                    "integer",
                    "null"
                  ],
                  "minimum": 1
                },
                "successThreshold": {
                  "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.",
                  "type": [
                    "integer",
                    "null"
                  ],
                  "minimum": 1
                },
                "timeoutSeconds": {
                  "description": "The timeout for each attempted health check. Default to 5 seconds. Minimum value is 1.",
                  "type": [
                    "integer",
                    "null"
                  ],
                  "minimum": 1
                }
              }
            },
            "logging": {
              "description": "Logging configuration for Kafka.",
              "type": [
                "object",
                "null"
              ],
              "required": [
                "type"
              ],
              "properties": {
                "loggers": {
                  "description": "A Map from logger name to logger level.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "additionalProperties": {
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                },
                "type": {
                  "description": "Logging type, must be either 'inline' or 'external'.",
                  "type": "string",
                  "enum": [
                    "inline",
                    "external"
                  ]
                },
                "valueFrom": {
                  "description": "`ConfigMap` entry where the logging configuration is stored. ",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "configMapKeyRef": {
                      "description": "Reference to the key in the ConfigMap containing the configuration.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "key": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "name": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "optional": {
                          "type": [
                            "boolean",
                            "null"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            },
            "metadataVersion": {
              "description": "The KRaft metadata version used by the Kafka cluster. This property is ignored when running in ZooKeeper mode. If the property is not set, it defaults to the metadata version that corresponds to the `version` property.",
              "type": [
                "string",
                "null"
              ]
            },
            "metricsConfig": {
              "description": "Metrics configuration.",
              "type": [
                "object",
                "null"
              ],
              "required": [
                "type"
              ],
              "properties": {
                "type": {
                  "description": "Metrics type. The supported types are `jmxPrometheusExporter` and `strimziMetricsReporter`. Type `jmxPrometheusExporter` uses the Prometheus JMX Exporter to expose Kafka JMX metrics in Prometheus format through an HTTP endpoint. Type `strimziMetricsReporter` uses the Strimzi Metrics Reporter to directly expose Kafka metrics in Prometheus format through an HTTP endpoint.",
                  "type": "string",
                  "enum": [
                    "jmxPrometheusExporter",
                    "strimziMetricsReporter"
                  ]
                },
                "valueFrom": {
                  "description": "ConfigMap entry where the Prometheus JMX Exporter configuration is stored.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "configMapKeyRef": {
                      "description": "Reference to the key in the ConfigMap containing the configuration.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "key": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "name": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "optional": {
                          "type": [
                            "boolean",
                            "null"
                          ]
                        }
                      }
                    }
                  }
                },
                "values": {
                  "description": "Configuration values for the Strimzi Metrics Reporter.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "allowList": {
                      "description": "A list of regex patterns to filter the metrics to collect. Should contain at least one element.",
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": [
                          "string",
                          "null"
                        ]
                      }
                    }
                  }
                }
              },
              "x-kubernetes-validations": [
                {
                  "message": "valueFrom property is required",
                  "rule": "self.type != 'jmxPrometheusExporter' || has(self.valueFrom)"
                }
              ]
            },
            "quotas": {
              "description": "Quotas plugin configuration for Kafka brokers allows setting quotas for disk usage, produce/fetch rates, and more. Supported plugin types include `kafka` (default) and `strimzi`. If not specified, the default `kafka` quotas plugin is used.",
              "type": [
                "object",
                "null"
              ],
              "required": [
                "type"
              ],
              "properties": {
                "consumerByteRate": {
                  "description": "A per-broker byte-rate quota for clients consuming from a broker, independent of their number. If clients consume at maximum speed, the quota is shared equally between all non-excluded consumers. Otherwise, the quota is divided based on each client's consumption rate.",
                  "type": [
                    "integer",
                    "null"
                  ],
                  "minimum": 0
                },
                "controllerMutationRate": {
                  "description": "The default client quota on the rate at which mutations are accepted per second for create topic requests, create partition requests, and delete topic requests, defined for each broker. The mutations rate is measured by the number of partitions created or deleted. Applied on a per-broker basis.",
                  "type": [
                    "number",
                    "null"
                  ],
                  "minimum": 0
                },
                "excludedPrincipals": {
                  "description": "List of principals that are excluded from the quota. The principals have to be prefixed with `User:`, for example `User:my-user;User:CN=my-other-user`.",
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                },
                "minAvailableBytesPerVolume": {
                  "description": "Stop message production if the available size (in bytes) of the storage is lower than or equal to this specified value. This condition is mutually exclusive with `minAvailableRatioPerVolume`.",
                  "type": [
                    "integer",
                    "null"
                  ],
                  "minimum": 0
                },
                "minAvailableRatioPerVolume": {
                  "description": "Stop message production if the percentage of available storage space falls below or equals the specified ratio (set as a decimal representing a percentage). This condition is mutually exclusive with `minAvailableBytesPerVolume`.",
                  "type": [
                    "number",
                    "null"
                  ],
                  "maximum": 1,
                  "minimum": 0
                },
                "producerByteRate": {
                  "description": "A per-broker byte-rate quota for clients producing to a broker, independent of their number. If clients produce at maximum speed, the quota is shared equally between all non-excluded producers. Otherwise, the quota is divided based on each client's production rate.",
                  "type": [
                    "integer",
                    "null"
                  ],
                  "minimum": 0
                },
                "requestPercentage": {
                  "description": "The default client quota limits the maximum CPU utilization of each client as a percentage of the network and I/O threads of each broker. Applied on a per-broker basis.",
                  "type": [
                    "integer",
                    "null"
                  ],
                  "minimum": 0
                },
                "type": {
                  "description": "Quotas plugin type. Currently, the supported types are `kafka` and `strimzi`. `kafka` quotas type uses Kafka's built-in quotas plugin. `strimzi` quotas type uses Strimzi quotas plugin.",
                  "type": "string",
                  "enum": [
                    "kafka",
                    "strimzi"
                  ]
                }
              }
            },
            "rack": {
              "description": "Configuration of the `broker.rack` broker config.",
              "type": [
                "object",
                "null"
              ],
              "required": [
                "topologyKey"
              ],
              "properties": {
                "topologyKey": {
                  "description": "A key that matches labels assigned to the Kubernetes cluster nodes. The value of the label is used to set a broker's `broker.rack` config, and the `client.rack` config for Kafka Connect or MirrorMaker 2.",
                  "type": "string"
                }
              }
            },
            "readinessProbe": {
              "description": "Pod readiness checking.",
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "failureThreshold": {
                  "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.",
                  "type": [
                    "integer",
                    "null"
                  ],
                  "minimum": 1
                },
                "initialDelaySeconds": {
                  "description": "The initial delay before first the health is first checked. Default to 15 seconds. Minimum value is 0.",
                  "type": [
                    "integer",
                    "null"
                  ],
                  "minimum": 0
                },
                "periodSeconds": {
                  "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.",
                  "type": [
                    "integer",
                    "null"
                  ],
                  "minimum": 1
                },
                "successThreshold": {
                  "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.",
                  "type": [
                    "integer",
                    "null"
                  ],
                  "minimum": 1
                },
                "timeoutSeconds": {
                  "description": "The timeout for each attempted health check. Default to 5 seconds. Minimum value is 1.",
                  "type": [
                    "integer",
                    "null"
                  ],
                  "minimum": 1
                }
              }
            },
            "replicas": {
              "description": "Replicas are now configured in `KafkaNodePool` resources and this option is ignored.",
              "type": [
                "integer",
                "null"
              ],
              "minimum": 1
            },
            "resources": {
              "description": "CPU and memory resources to reserve.",
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "claims": {
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "properties": {
                      "name": {
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "request": {
                        "type": [
                          "string",
                          "null"
                        ]
                      }
                    }
                  }
                },
                "limits": {
                  "type": [
                    "object",
                    "null"
                  ],
                  "additionalProperties": {
                    "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                    "x-kubernetes-int-or-string": true
                  }
                },
                "requests": {
                  "type": [
                    "object",
                    "null"
                  ],
                  "additionalProperties": {
                    "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                    "x-kubernetes-int-or-string": true
                  }
                }
              }
            },
            "storage": {
              "description": "Storage is now configured in the `KafkaNodePool` resources and this option is ignored.",
              "type": [
                "object",
                "null"
              ],
              "required": [
                "type"
              ],
              "properties": {
                "class": {
                  "description": "The storage class to use for dynamic volume allocation.",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "deleteClaim": {
                  "description": "Specifies if the persistent volume claim has to be deleted when the cluster is un-deployed.",
                  "type": [
                    "boolean",
                    "null"
                  ]
                },
                "id": {
                  "description": "Storage identification number. It is mandatory only for storage volumes defined in a storage of type 'jbod'.",
                  "type": [
                    "integer",
                    "null"
                  ],
                  "minimum": 0
                },
                "kraftMetadata": {
                  "description": "Specifies whether this volume should be used for storing KRaft metadata. This property is optional. When set, the only currently supported value is `shared`. At most one volume can have this property set.",
                  "type": [
                    "string",
                    "null"
                  ],
                  "enum": [
                    "shared"
                  ]
                },
                "overrides": {
                  "description": "As of Strimzi 0.46.0, the storage overrides for individual brokers are not supported anymore and this option is ignored.",
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "properties": {
                      "broker": {
                        "description": "Id of the kafka broker (broker identifier).",
                        "type": [
                          "integer",
                          "null"
                        ]
                      },
                      "class": {
                        "description": "The storage class to use for dynamic volume allocation for this broker.",
                        "type": [
                          "string",
                          "null"
                        ]
                      }
                    }
                  }
                },
                "selector": {
                  "description": "Specifies a specific persistent volume to use. It contains key:value pairs representing labels for selecting such a volume.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "additionalProperties": {
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                },
                "size": {
                  "description": "When `type=persistent-claim`, defines the size of the persistent volume claim, such as 100Gi. Mandatory when `type=persistent-claim`.",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "sizeLimit": {
                  "description": "When type=ephemeral, defines the total amount of local storage required for this EmptyDir volume (for example 1Gi).",
                  "type": [
                    "string",
                    "null"
                  ],
                  "pattern": "^([0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$"
                },
                "type": {
                  "description": "Storage type, must be either 'ephemeral', 'persistent-claim', or 'jbod'.",
                  "type": "string",
                  "enum": [
                    "ephemeral",
                    "persistent-claim",
                    "jbod"
                  ]
                },
                "volumes": {
                  "description": "List of volumes as Storage objects representing the JBOD disks array.",
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "required": [
                      "type"
                    ],
                    "properties": {
                      "class": {
                        "description": "The storage class to use for dynamic volume allocation.",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "deleteClaim": {
                        "description": "Specifies if the persistent volume claim has to be deleted when the cluster is un-deployed.",
                        "type": [
                          "boolean",
                          "null"
                        ]
                      },
                      "id": {
                        "description": "Storage identification number. Mandatory for storage volumes defined with a `jbod` storage type configuration.",
                        "type": [
                          "integer",
                          "null"
                        ],
                        "minimum": 0
                      },
                      "kraftMetadata": {
                        "description": "Specifies whether this volume should be used for storing KRaft metadata. This property is optional. When set, the only currently supported value is `shared`. At most one volume can have this property set.",
                        "type": [
                          "string",
                          "null"
                        ],
                        "enum": [
                          "shared"
                        ]
                      },
                      "overrides": {
                        "description": "As of Strimzi 0.46.0, the storage overrides for individual brokers are not supported anymore and this option is ignored.",
                        "type": [
                          "array",
                          "null"
                        ],
                        "items": {
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "broker": {
                              "description": "Id of the kafka broker (broker identifier).",
                              "type": [
                                "integer",
                                "null"
                              ]
                            },
                            "class": {
                              "description": "The storage class to use for dynamic volume allocation for this broker.",
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          }
                        }
                      },
                      "selector": {
                        "description": "Specifies a specific persistent volume to use. It contains key:value pairs representing labels for selecting such a volume.",
                        "type": [
                          "object",
                          "null"
                        ],
                        "additionalProperties": {
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      },
                      "size": {
                        "description": "When `type=persistent-claim`, defines the size of the persistent volume claim, such as 100Gi. Mandatory when `type=persistent-claim`.",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "sizeLimit": {
                        "description": "When type=ephemeral, defines the total amount of local storage required for this EmptyDir volume (for example 1Gi).",
                        "type": [
                          "string",
                          "null"
                        ],
                        "pattern": "^([0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$"
                      },
                      "type": {
                        "description": "Storage type, must be either 'ephemeral' or 'persistent-claim'.",
                        "type": "string",
                        "enum": [
                          "ephemeral",
                          "persistent-claim"
                        ]
                      }
                    }
                  }
                }
              }
            },
            "template": {
              "description": "Template for Kafka cluster resources. The template allows users to specify how the Kubernetes resources are generated.",
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "bootstrapService": {
                  "description": "Template for Kafka bootstrap `Service`.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "ipFamilies": {
                      "description": "Specifies the IP Families used by the service. Available options are `IPv4` and `IPv6`. If unspecified, Kubernetes will choose the default value based on the `ipFamilyPolicy` setting.",
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": [
                          "string",
                          "null"
                        ],
                        "enum": [
                          "IPv4",
                          "IPv6"
                        ]
                      }
                    },
                    "ipFamilyPolicy": {
                      "description": "Specifies the IP Family Policy used by the service. Available options are `SingleStack`, `PreferDualStack` and `RequireDualStack`. `SingleStack` is for a single IP family. `PreferDualStack` is for two IP families on dual-stack configured clusters or a single IP family on single-stack clusters. `RequireDualStack` fails unless there are two IP families on dual-stack configured clusters. If unspecified, Kubernetes will choose the default value based on the service type.",
                      "type": [
                        "string",
                        "null"
                      ],
                      "enum": [
                        "SingleStack",
                        "PreferDualStack",
                        "RequireDualStack"
                      ]
                    },
                    "metadata": {
                      "description": "Metadata applied to the resource.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "annotations": {
                          "description": "Annotations added to the Kubernetes resource.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "additionalProperties": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        },
                        "labels": {
                          "description": "Labels added to the Kubernetes resource.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "additionalProperties": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "brokersService": {
                  "description": "Template for Kafka broker `Service`.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "ipFamilies": {
                      "description": "Specifies the IP Families used by the service. Available options are `IPv4` and `IPv6`. If unspecified, Kubernetes will choose the default value based on the `ipFamilyPolicy` setting.",
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": [
                          "string",
                          "null"
                        ],
                        "enum": [
                          "IPv4",
                          "IPv6"
                        ]
                      }
                    },
                    "ipFamilyPolicy": {
                      "description": "Specifies the IP Family Policy used by the service. Available options are `SingleStack`, `PreferDualStack` and `RequireDualStack`. `SingleStack` is for a single IP family. `PreferDualStack` is for two IP families on dual-stack configured clusters or a single IP family on single-stack clusters. `RequireDualStack` fails unless there are two IP families on dual-stack configured clusters. If unspecified, Kubernetes will choose the default value based on the service type.",
                      "type": [
                        "string",
                        "null"
                      ],
                      "enum": [
                        "SingleStack",
                        "PreferDualStack",
                        "RequireDualStack"
                      ]
                    },
                    "metadata": {
                      "description": "Metadata applied to the resource.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "annotations": {
                          "description": "Annotations added to the Kubernetes resource.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "additionalProperties": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        },
                        "labels": {
                          "description": "Labels added to the Kubernetes resource.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "additionalProperties": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "clusterCaCert": {
                  "description": "Template for Secret with Kafka Cluster certificate public key.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "metadata": {
                      "description": "Metadata applied to the resource.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "annotations": {
                          "description": "Annotations added to the Kubernetes resource.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "additionalProperties": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        },
                        "labels": {
                          "description": "Labels added to the Kubernetes resource.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "additionalProperties": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "clusterRoleBinding": {
                  "description": "Template for the Kafka ClusterRoleBinding.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "metadata": {
                      "description": "Metadata applied to the resource.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "annotations": {
                          "description": "Annotations added to the Kubernetes resource.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "additionalProperties": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        },
                        "labels": {
                          "description": "Labels added to the Kubernetes resource.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "additionalProperties": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "externalBootstrapIngress": {
                  "description": "Template for Kafka external bootstrap `Ingress`.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "metadata": {
                      "description": "Metadata applied to the resource.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "annotations": {
                          "description": "Annotations added to the Kubernetes resource.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "additionalProperties": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        },
                        "labels": {
                          "description": "Labels added to the Kubernetes resource.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "additionalProperties": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "externalBootstrapRoute": {
                  "description": "Template for Kafka external bootstrap `Route`.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "metadata": {
                      "description": "Metadata applied to the resource.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "annotations": {
                          "description": "Annotations added to the Kubernetes resource.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "additionalProperties": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        },
                        "labels": {
                          "description": "Labels added to the Kubernetes resource.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "additionalProperties": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "externalBootstrapService": {
                  "description": "Template for Kafka external bootstrap `Service`.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "metadata": {
                      "description": "Metadata applied to the resource.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "annotations": {
                          "description": "Annotations added to the Kubernetes resource.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "additionalProperties": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        },
                        "labels": {
                          "description": "Labels added to the Kubernetes resource.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "additionalProperties": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "initContainer": {
                  "description": "Template for the Kafka init container.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "env": {
                      "description": "Environment variables which should be applied to the container.",
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "name": {
                            "description": "The environment variable key.",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "value": {
                            "description": "The environment variable value.",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "valueFrom": {
                            "description": "Reference to the secret or config map property to which the environment variable is set.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "configMapKeyRef": {
                                "description": "Reference to a key in a config map.",
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "properties": {
                                  "key": {
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "name": {
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "optional": {
                                    "type": [
                                      "boolean",
                                      "null"
                                    ]
                                  }
                                }
                              },
                              "secretKeyRef": {
                                "description": "Reference to a key in a secret.",
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "properties": {
                                  "key": {
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "name": {
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "optional": {
                                    "type": [
                                      "boolean",
                                      "null"
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "securityContext": {
                      "description": "Security context for the container.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "allowPrivilegeEscalation": {
                          "type": [
                            "boolean",
                            "null"
                          ]
                        },
                        "appArmorProfile": {
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "localhostProfile": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "type": {
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          }
                        },
                        "capabilities": {
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "add": {
                              "type": [
                                "array",
                                "null"
                              ],
                              "items": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            },
                            "drop": {
                              "type": [
                                "array",
                                "null"
                              ],
                              "items": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            }
                          }
                        },
                        "privileged": {
                          "type": [
                            "boolean",
                            "null"
                          ]
                        },
                        "procMount": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "readOnlyRootFilesystem": {
                          "type": [
                            "boolean",
                            "null"
                          ]
                        },
                        "runAsGroup": {
                          "type": [
                            "integer",
                            "null"
                          ]
                        },
                        "runAsNonRoot": {
                          "type": [
                            "boolean",
                            "null"
                          ]
                        },
                        "runAsUser": {
                          "type": [
                            "integer",
                            "null"
                          ]
                        },
                        "seLinuxOptions": {
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "level": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "role": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "type": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "user": {
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          }
                        },
                        "seccompProfile": {
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "localhostProfile": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "type": {
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          }
                        },
                        "windowsOptions": {
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "gmsaCredentialSpec": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "gmsaCredentialSpecName": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "hostProcess": {
                              "type": [
                                "boolean",
                                "null"
                              ]
                            },
                            "runAsUserName": {
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          }
                        }
                      }
                    },
                    "volumeMounts": {
                      "description": "Additional volume mounts which should be applied to the container.",
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "mountPath": {
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "mountPropagation": {
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "name": {
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "readOnly": {
                            "type": [
                              "boolean",
                              "null"
                            ]
                          },
                          "recursiveReadOnly": {
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "subPath": {
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "subPathExpr": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "jmxSecret": {
                  "description": "Template for Secret of the Kafka Cluster JMX authentication.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "metadata": {
                      "description": "Metadata applied to the resource.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "annotations": {
                          "description": "Annotations added to the Kubernetes resource.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "additionalProperties": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        },
                        "labels": {
                          "description": "Labels added to the Kubernetes resource.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "additionalProperties": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "kafkaContainer": {
                  "description": "Template for the Kafka broker container.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "env": {
                      "description": "Environment variables which should be applied to the container.",
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "name": {
                            "description": "The environment variable key.",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "value": {
                            "description": "The environment variable value.",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "valueFrom": {
                            "description": "Reference to the secret or config map property to which the environment variable is set.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "configMapKeyRef": {
                                "description": "Reference to a key in a config map.",
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "properties": {
                                  "key": {
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "name": {
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "optional": {
                                    "type": [
                                      "boolean",
                                      "null"
                                    ]
                                  }
                                }
                              },
                              "secretKeyRef": {
                                "description": "Reference to a key in a secret.",
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "properties": {
                                  "key": {
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "name": {
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "optional": {
                                    "type": [
                                      "boolean",
                                      "null"
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "securityContext": {
                      "description": "Security context for the container.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "allowPrivilegeEscalation": {
                          "type": [
                            "boolean",
                            "null"
                          ]
                        },
                        "appArmorProfile": {
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "localhostProfile": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "type": {
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          }
                        },
                        "capabilities": {
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "add": {
                              "type": [
                                "array",
                                "null"
                              ],
                              "items": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            },
                            "drop": {
                              "type": [
                                "array",
                                "null"
                              ],
                              "items": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            }
                          }
                        },
                        "privileged": {
                          "type": [
                            "boolean",
                            "null"
                          ]
                        },
                        "procMount": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "readOnlyRootFilesystem": {
                          "type": [
                            "boolean",
                            "null"
                          ]
                        },
                        "runAsGroup": {
                          "type": [
                            "integer",
                            "null"
                          ]
                        },
                        "runAsNonRoot": {
                          "type": [
                            "boolean",
                            "null"
                          ]
                        },
                        "runAsUser": {
                          "type": [
                            "integer",
                            "null"
                          ]
                        },
                        "seLinuxOptions": {
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "level": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "role": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "type": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "user": {
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          }
                        },
                        "seccompProfile": {
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "localhostProfile": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "type": {
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          }
                        },
                        "windowsOptions": {
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "gmsaCredentialSpec": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "gmsaCredentialSpecName": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "hostProcess": {
                              "type": [
                                "boolean",
                                "null"
                              ]
                            },
                            "runAsUserName": {
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          }
                        }
                      }
                    },
                    "volumeMounts": {
                      "description": "Additional volume mounts which should be applied to the container.",
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "mountPath": {
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "mountPropagation": {
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "name": {
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "readOnly": {
                            "type": [
                              "boolean",
                              "null"
                            ]
                          },
                          "recursiveReadOnly": {
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "subPath": {
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "subPathExpr": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "perPodIngress": {
                  "description": "Template for Kafka per-pod `Ingress` used for access from outside of Kubernetes.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "metadata": {
                      "description": "Metadata applied to the resource.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "annotations": {
                          "description": "Annotations added to the Kubernetes resource.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "additionalProperties": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        },
                        "labels": {
                          "description": "Labels added to the Kubernetes resource.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "additionalProperties": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "perPodRoute": {
                  "description": "Template for Kafka per-pod `Routes` used for access from outside of OpenShift.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "metadata": {
                      "description": "Metadata applied to the resource.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "annotations": {
                          "description": "Annotations added to the Kubernetes resource.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "additionalProperties": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        },
                        "labels": {
                          "description": "Labels added to the Kubernetes resource.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "additionalProperties": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "perPodService": {
                  "description": "Template for Kafka per-pod `Services` used for access from outside of Kubernetes.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "metadata": {
                      "description": "Metadata applied to the resource.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "annotations": {
                          "description": "Annotations added to the Kubernetes resource.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "additionalProperties": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        },
                        "labels": {
                          "description": "Labels added to the Kubernetes resource.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "additionalProperties": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "persistentVolumeClaim": {
                  "description": "Template for all Kafka `PersistentVolumeClaims`.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "metadata": {
                      "description": "Metadata applied to the resource.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "annotations": {
                          "description": "Annotations added to the Kubernetes resource.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "additionalProperties": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        },
                        "labels": {
                          "description": "Labels added to the Kubernetes resource.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "additionalProperties": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "pod": {
                  "description": "Template for Kafka `Pods`.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "affinity": {
                      "description": "The pod's affinity rules.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "nodeAffinity": {
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "preferredDuringSchedulingIgnoredDuringExecution": {
                              "type": [
                                "array",
                                "null"
                              ],
                              "items": {
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "properties": {
                                  "preference": {
                                    "type": [
                                      "object",
                                      "null"
                                    ],
                                    "properties": {
                                      "matchExpressions": {
                                        "type": [
                                          "array",
                                          "null"
                                        ],
                                        "items": {
                                          "type": [
                                            "object",
                                            "null"
                                          ],
                                          "properties": {
                                            "key": {
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            },
                                            "operator": {
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            },
                                            "values": {
                                              "type": [
                                                "array",
                                                "null"
                                              ],
                                              "items": {
                                                "type": [
                                                  "string",
                                                  "null"
                                                ]
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "matchFields": {
                                        "type": [
                                          "array",
                                          "null"
                                        ],
                                        "items": {
                                          "type": [
                                            "object",
                                            "null"
                                          ],
                                          "properties": {
                                            "key": {
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            },
                                            "operator": {
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            },
                                            "values": {
                                              "type": [
                                                "array",
                                                "null"
                                              ],
                                              "items": {
                                                "type": [
                                                  "string",
                                                  "null"
                                                ]
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "weight": {
                                    "type": [
                                      "integer",
                                      "null"
                                    ]
                                  }
                                }
                              }
                            },
                            "requiredDuringSchedulingIgnoredDuringExecution": {
                              "type": [
                                "object",
                                "null"
                              ],
                              "properties": {
                                "nodeSelectorTerms": {
                                  "type": [
                                    "array",
                                    "null"
                                  ],
                                  "items": {
                                    "type": [
                                      "object",
                                      "null"
                                    ],
                                    "properties": {
                                      "matchExpressions": {
                                        "type": [
                                          "array",
                                          "null"
                                        ],
                                        "items": {
                                          "type": [
                                            "object",
                                            "null"
                                          ],
                                          "properties": {
                                            "key": {
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            },
                                            "operator": {
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            },
                                            "values": {
                                              "type": [
                                                "array",
                                                "null"
                                              ],
                                              "items": {
                                                "type": [
                                                  "string",
                                                  "null"
                                                ]
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "matchFields": {
                                        "type": [
                                          "array",
                                          "null"
                                        ],
                                        "items": {
                                          "type": [
                                            "object",
                                            "null"
                                          ],
                                          "properties": {
                                            "key": {
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            },
                                            "operator": {
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            },
                                            "values": {
                                              "type": [
                                                "array",
                                                "null"
                                              ],
                                              "items": {
                                                "type": [
                                                  "string",
                                                  "null"
                                                ]
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "podAffinity": {
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "preferredDuringSchedulingIgnoredDuringExecution": {
                              "type": [
                                "array",
                                "null"
                              ],
                              "items": {
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "properties": {
                                  "podAffinityTerm": {
                                    "type": [
                                      "object",
                                      "null"
                                    ],
                                    "properties": {
                                      "labelSelector": {
                                        "type": [
                                          "object",
                                          "null"
                                        ],
                                        "properties": {
                                          "matchExpressions": {
                                            "type": [
                                              "array",
                                              "null"
                                            ],
                                            "items": {
                                              "type": [
                                                "object",
                                                "null"
                                              ],
                                              "properties": {
                                                "key": {
                                                  "type": [
                                                    "string",
                                                    "null"
                                                  ]
                                                },
                                                "operator": {
                                                  "type": [
                                                    "string",
                                                    "null"
                                                  ]
                                                },
                                                "values": {
                                                  "type": [
                                                    "array",
                                                    "null"
                                                  ],
                                                  "items": {
                                                    "type": [
                                                      "string",
                                                      "null"
                                                    ]
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "matchLabels": {
                                            "type": [
                                              "object",
                                              "null"
                                            ],
                                            "additionalProperties": {
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            }
                                          }
                                        }
                                      },
                                      "matchLabelKeys": {
                                        "type": [
                                          "array",
                                          "null"
                                        ],
                                        "items": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        }
                                      },
                                      "mismatchLabelKeys": {
                                        "type": [
                                          "array",
                                          "null"
                                        ],
                                        "items": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        }
                                      },
                                      "namespaceSelector": {
                                        "type": [
                                          "object",
                                          "null"
                                        ],
                                        "properties": {
                                          "matchExpressions": {
                                            "type": [
                                              "array",
                                              "null"
                                            ],
                                            "items": {
                                              "type": [
                                                "object",
                                                "null"
                                              ],
                                              "properties": {
                                                "key": {
                                                  "type": [
                                                    "string",
                                                    "null"
                                                  ]
                                                },
                                                "operator": {
                                                  "type": [
                                                    "string",
                                                    "null"
                                                  ]
                                                },
                                                "values": {
                                                  "type": [
                                                    "array",
                                                    "null"
                                                  ],
                                                  "items": {
                                                    "type": [
                                                      "string",
                                                      "null"
                                                    ]
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "matchLabels": {
                                            "type": [
                                              "object",
                                              "null"
                                            ],
                                            "additionalProperties": {
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            }
                                          }
                                        }
                                      },
                                      "namespaces": {
                                        "type": [
                                          "array",
                                          "null"
                                        ],
                                        "items": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        }
                                      },
                                      "topologyKey": {
                                        "type": [
                                          "string",
                                          "null"
                                        ]
                                      }
                                    }
                                  },
                                  "weight": {
                                    "type": [
                                      "integer",
                                      "null"
                                    ]
                                  }
                                }
                              }
                            },
                            "requiredDuringSchedulingIgnoredDuringExecution": {
                              "type": [
                                "array",
                                "null"
                              ],
                              "items": {
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "properties": {
                                  "labelSelector": {
                                    "type": [
                                      "object",
                                      "null"
                                    ],
                                    "properties": {
                                      "matchExpressions": {
                                        "type": [
                                          "array",
                                          "null"
                                        ],
                                        "items": {
                                          "type": [
                                            "object",
                                            "null"
                                          ],
                                          "properties": {
                                            "key": {
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            },
                                            "operator": {
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            },
                                            "values": {
                                              "type": [
                                                "array",
                                                "null"
                                              ],
                                              "items": {
                                                "type": [
                                                  "string",
                                                  "null"
                                                ]
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "matchLabels": {
                                        "type": [
                                          "object",
                                          "null"
                                        ],
                                        "additionalProperties": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        }
                                      }
                                    }
                                  },
                                  "matchLabelKeys": {
                                    "type": [
                                      "array",
                                      "null"
                                    ],
                                    "items": {
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    }
                                  },
                                  "mismatchLabelKeys": {
                                    "type": [
                                      "array",
                                      "null"
                                    ],
                                    "items": {
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    }
                                  },
                                  "namespaceSelector": {
                                    "type": [
                                      "object",
                                      "null"
                                    ],
                                    "properties": {
                                      "matchExpressions": {
                                        "type": [
                                          "array",
                                          "null"
                                        ],
                                        "items": {
                                          "type": [
                                            "object",
                                            "null"
                                          ],
                                          "properties": {
                                            "key": {
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            },
                                            "operator": {
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            },
                                            "values": {
                                              "type": [
                                                "array",
                                                "null"
                                              ],
                                              "items": {
                                                "type": [
                                                  "string",
                                                  "null"
                                                ]
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "matchLabels": {
                                        "type": [
                                          "object",
                                          "null"
                                        ],
                                        "additionalProperties": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        }
                                      }
                                    }
                                  },
                                  "namespaces": {
                                    "type": [
                                      "array",
                                      "null"
                                    ],
                                    "items": {
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    }
                                  },
                                  "topologyKey": {
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        },
                        "podAntiAffinity": {
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "preferredDuringSchedulingIgnoredDuringExecution": {
                              "type": [
                                "array",
                                "null"
                              ],
                              "items": {
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "properties": {
                                  "podAffinityTerm": {
                                    "type": [
                                      "object",
                                      "null"
                                    ],
                                    "properties": {
                                      "labelSelector": {
                                        "type": [
                                          "object",
                                          "null"
                                        ],
                                        "properties": {
                                          "matchExpressions": {
                                            "type": [
                                              "array",
                                              "null"
                                            ],
                                            "items": {
                                              "type": [
                                                "object",
                                                "null"
                                              ],
                                              "properties": {
                                                "key": {
                                                  "type": [
                                                    "string",
                                                    "null"
                                                  ]
                                                },
                                                "operator": {
                                                  "type": [
                                                    "string",
                                                    "null"
                                                  ]
                                                },
                                                "values": {
                                                  "type": [
                                                    "array",
                                                    "null"
                                                  ],
                                                  "items": {
                                                    "type": [
                                                      "string",
                                                      "null"
                                                    ]
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "matchLabels": {
                                            "type": [
                                              "object",
                                              "null"
                                            ],
                                            "additionalProperties": {
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            }
                                          }
                                        }
                                      },
                                      "matchLabelKeys": {
                                        "type": [
                                          "array",
                                          "null"
                                        ],
                                        "items": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        }
                                      },
                                      "mismatchLabelKeys": {
                                        "type": [
                                          "array",
                                          "null"
                                        ],
                                        "items": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        }
                                      },
                                      "namespaceSelector": {
                                        "type": [
                                          "object",
                                          "null"
                                        ],
                                        "properties": {
                                          "matchExpressions": {
                                            "type": [
                                              "array",
                                              "null"
                                            ],
                                            "items": {
                                              "type": [
                                                "object",
                                                "null"
                                              ],
                                              "properties": {
                                                "key": {
                                                  "type": [
                                                    "string",
                                                    "null"
                                                  ]
                                                },
                                                "operator": {
                                                  "type": [
                                                    "string",
                                                    "null"
                                                  ]
                                                },
                                                "values": {
                                                  "type": [
                                                    "array",
                                                    "null"
                                                  ],
                                                  "items": {
                                                    "type": [
                                                      "string",
                                                      "null"
                                                    ]
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "matchLabels": {
                                            "type": [
                                              "object",
                                              "null"
                                            ],
                                            "additionalProperties": {
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            }
                                          }
                                        }
                                      },
                                      "namespaces": {
                                        "type": [
                                          "array",
                                          "null"
                                        ],
                                        "items": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        }
                                      },
                                      "topologyKey": {
                                        "type": [
                                          "string",
                                          "null"
                                        ]
                                      }
                                    }
                                  },
                                  "weight": {
                                    "type": [
                                      "integer",
                                      "null"
                                    ]
                                  }
                                }
                              }
                            },
                            "requiredDuringSchedulingIgnoredDuringExecution": {
                              "type": [
                                "array",
                                "null"
                              ],
                              "items": {
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "properties": {
                                  "labelSelector": {
                                    "type": [
                                      "object",
                                      "null"
                                    ],
                                    "properties": {
                                      "matchExpressions": {
                                        "type": [
                                          "array",
                                          "null"
                                        ],
                                        "items": {
                                          "type": [
                                            "object",
                                            "null"
                                          ],
                                          "properties": {
                                            "key": {
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            },
                                            "operator": {
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            },
                                            "values": {
                                              "type": [
                                                "array",
                                                "null"
                                              ],
                                              "items": {
                                                "type": [
                                                  "string",
                                                  "null"
                                                ]
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "matchLabels": {
                                        "type": [
                                          "object",
                                          "null"
                                        ],
                                        "additionalProperties": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        }
                                      }
                                    }
                                  },
                                  "matchLabelKeys": {
                                    "type": [
                                      "array",
                                      "null"
                                    ],
                                    "items": {
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    }
                                  },
                                  "mismatchLabelKeys": {
                                    "type": [
                                      "array",
                                      "null"
                                    ],
                                    "items": {
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    }
                                  },
                                  "namespaceSelector": {
                                    "type": [
                                      "object",
                                      "null"
                                    ],
                                    "properties": {
                                      "matchExpressions": {
                                        "type": [
                                          "array",
                                          "null"
                                        ],
                                        "items": {
                                          "type": [
                                            "object",
                                            "null"
                                          ],
                                          "properties": {
                                            "key": {
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            },
                                            "operator": {
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            },
                                            "values": {
                                              "type": [
                                                "array",
                                                "null"
                                              ],
                                              "items": {
                                                "type": [
                                                  "string",
                                                  "null"
                                                ]
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "matchLabels": {
                                        "type": [
                                          "object",
                                          "null"
                                        ],
                                        "additionalProperties": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        }
                                      }
                                    }
                                  },
                                  "namespaces": {
                                    "type": [
                                      "array",
                                      "null"
                                    ],
                                    "items": {
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    }
                                  },
                                  "topologyKey": {
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "dnsConfig": {
                      "description": "The pod's DNSConfig. If specified, it will be merged to the generated DNS configuration based on the DNSPolicy.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "nameservers": {
                          "type": [
                            "array",
                            "null"
                          ],
                          "items": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        },
                        "options": {
                          "type": [
                            "array",
                            "null"
                          ],
                          "items": {
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "name": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "value": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            }
                          }
                        },
                        "searches": {
                          "type": [
                            "array",
                            "null"
                          ],
                          "items": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        }
                      }
                    },
                    "dnsPolicy": {
                      "description": "The pod's DNSPolicy. Defaults to `ClusterFirst`. Valid values are `ClusterFirstWithHostNet`, `ClusterFirst`, `Default` or `None`.",
                      "type": [
                        "string",
                        "null"
                      ],
                      "enum": [
                        "ClusterFirst",
                        "ClusterFirstWithHostNet",
                        "Default",
                        "None"
                      ]
                    },
                    "enableServiceLinks": {
                      "description": "Indicates whether information about services should be injected into Pod's environment variables.",
                      "type": [
                        "boolean",
                        "null"
                      ]
                    },
                    "hostAliases": {
                      "description": "The pod's HostAliases. HostAliases is an optional list of hosts and IPs that will be injected into the Pod's hosts file if specified.",
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "hostnames": {
                            "type": [
                              "array",
                              "null"
                            ],
                            "items": {
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          },
                          "ip": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        }
                      }
                    },
                    "imagePullSecrets": {
                      "description": "List of references to secrets in the same namespace to use for pulling any of the images used by this Pod. When the `STRIMZI_IMAGE_PULL_SECRETS` environment variable in Cluster Operator and the `imagePullSecrets` option are specified, only the `imagePullSecrets` variable is used and the `STRIMZI_IMAGE_PULL_SECRETS` variable is ignored.",
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "name": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        }
                      }
                    },
                    "metadata": {
                      "description": "Metadata applied to the resource.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "annotations": {
                          "description": "Annotations added to the Kubernetes resource.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "additionalProperties": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        },
                        "labels": {
                          "description": "Labels added to the Kubernetes resource.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "additionalProperties": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        }
                      }
                    },
                    "priorityClassName": {
                      "description": "The name of the priority class used to assign priority to the pods. ",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "schedulerName": {
                      "description": "The name of the scheduler used to dispatch this `Pod`. If not specified, the default scheduler will be used.",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "securityContext": {
                      "description": "Configures pod-level security attributes and common container settings.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "appArmorProfile": {
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "localhostProfile": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "type": {
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          }
                        },
                        "fsGroup": {
                          "type": [
                            "integer",
                            "null"
                          ]
                        },
                        "fsGroupChangePolicy": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "runAsGroup": {
                          "type": [
                            "integer",
                            "null"
                          ]
                        },
                        "runAsNonRoot": {
                          "type": [
                            "boolean",
                            "null"
                          ]
                        },
                        "runAsUser": {
                          "type": [
                            "integer",
                            "null"
                          ]
                        },
                        "seLinuxChangePolicy": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "seLinuxOptions": {
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "level": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "role": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "type": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "user": {
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          }
                        },
                        "seccompProfile": {
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "localhostProfile": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "type": {
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          }
                        },
                        "supplementalGroups": {
                          "type": [
                            "array",
                            "null"
                          ],
                          "items": {
                            "type": [
                              "integer",
                              "null"
                            ]
                          }
                        },
                        "supplementalGroupsPolicy": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "sysctls": {
                          "type": [
                            "array",
                            "null"
                          ],
                          "items": {
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "name": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "value": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            }
                          }
                        },
                        "windowsOptions": {
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "gmsaCredentialSpec": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "gmsaCredentialSpecName": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "hostProcess": {
                              "type": [
                                "boolean",
                                "null"
                              ]
                            },
                            "runAsUserName": {
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          }
                        }
                      }
                    },
                    "terminationGracePeriodSeconds": {
                      "description": "The grace period is the duration in seconds after the processes running in the pod are sent a termination signal, and the time when the processes are forcibly halted with a kill signal. Set this value to longer than the expected cleanup time for your process. Value must be a non-negative integer. A zero value indicates delete immediately. You might need to increase the grace period for very large Kafka clusters, so that the Kafka brokers have enough time to transfer their work to another broker before they are terminated. Defaults to 30 seconds.",
                      "type": [
                        "integer",
                        "null"
                      ],
                      "minimum": 0
                    },
                    "tmpDirSizeLimit": {
                      "description": "Defines the total amount of pod memory allocated for the temporary `EmptyDir` volume `/tmp`. Specify the allocation in memory units, for example, `100Mi` for 100 mebibytes. Default value is `5Mi`. The `/tmp` volume is backed by pod memory, not disk storage, so avoid setting a high value as it consumes pod memory resources.",
                      "type": [
                        "string",
                        "null"
                      ],
                      "pattern": "^([0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$"
                    },
                    "tolerations": {
                      "description": "The pod's tolerations.",
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "effect": {
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "key": {
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "operator": {
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "tolerationSeconds": {
                            "type": [
                              "integer",
                              "null"
                            ]
                          },
                          "value": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        }
                      }
                    },
                    "topologySpreadConstraints": {
                      "description": "The pod's topology spread constraints.",
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "labelSelector": {
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "matchExpressions": {
                                "type": [
                                  "array",
                                  "null"
                                ],
                                "items": {
                                  "type": [
                                    "object",
                                    "null"
                                  ],
                                  "properties": {
                                    "key": {
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    },
                                    "operator": {
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    },
                                    "values": {
                                      "type": [
                                        "array",
                                        "null"
                                      ],
                                      "items": {
                                        "type": [
                                          "string",
                                          "null"
                                        ]
                                      }
                                    }
                                  }
                                }
                              },
                              "matchLabels": {
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "additionalProperties": {
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                }
                              }
                            }
                          },
                          "matchLabelKeys": {
                            "type": [
                              "array",
                              "null"
                            ],
                            "items": {
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          },
                          "maxSkew": {
                            "type": [
                              "integer",
                              "null"
                            ]
                          },
                          "minDomains": {
                            "type": [
                              "integer",
                              "null"
                            ]
                          },
                          "nodeAffinityPolicy": {
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "nodeTaintsPolicy": {
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "topologyKey": {
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "whenUnsatisfiable": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        }
                      }
                    },
                    "volumes": {
                      "description": "Additional volumes that can be mounted to the pod.",
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "configMap": {
                            "description": "`ConfigMap` to use to populate the volume.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "defaultMode": {
                                "type": [
                                  "integer",
                                  "null"
                                ]
                              },
                              "items": {
                                "type": [
                                  "array",
                                  "null"
                                ],
                                "items": {
                                  "type": [
                                    "object",
                                    "null"
                                  ],
                                  "properties": {
                                    "key": {
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    },
                                    "mode": {
                                      "type": [
                                        "integer",
                                        "null"
                                      ]
                                    },
                                    "path": {
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    }
                                  }
                                }
                              },
                              "name": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "optional": {
                                "type": [
                                  "boolean",
                                  "null"
                                ]
                              }
                            }
                          },
                          "csi": {
                            "description": "`CSIVolumeSource` object to use to populate the volume.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "driver": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "fsType": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "nodePublishSecretRef": {
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "properties": {
                                  "name": {
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  }
                                }
                              },
                              "readOnly": {
                                "type": [
                                  "boolean",
                                  "null"
                                ]
                              },
                              "volumeAttributes": {
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "additionalProperties": {
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                }
                              }
                            }
                          },
                          "emptyDir": {
                            "description": "`EmptyDir` to use to populate the volume.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "medium": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "sizeLimit": {
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "properties": {
                                  "amount": {
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "format": {
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  }
                                }
                              }
                            }
                          },
                          "image": {
                            "description": "`ImageVolumeSource` object to use to populate the volume.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "pullPolicy": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "reference": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            }
                          },
                          "name": {
                            "description": "Name to use for the volume. Required.",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "persistentVolumeClaim": {
                            "description": "`PersistentVolumeClaim` object to use to populate the volume.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "claimName": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "readOnly": {
                                "type": [
                                  "boolean",
                                  "null"
                                ]
                              }
                            }
                          },
                          "secret": {
                            "description": "`Secret` to use to populate the volume.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "defaultMode": {
                                "type": [
                                  "integer",
                                  "null"
                                ]
                              },
                              "items": {
                                "type": [
                                  "array",
                                  "null"
                                ],
                                "items": {
                                  "type": [
                                    "object",
                                    "null"
                                  ],
                                  "properties": {
                                    "key": {
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    },
                                    "mode": {
                                      "type": [
                                        "integer",
                                        "null"
                                      ]
                                    },
                                    "path": {
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    }
                                  }
                                }
                              },
                              "optional": {
                                "type": [
                                  "boolean",
                                  "null"
                                ]
                              },
                              "secretName": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "podDisruptionBudget": {
                  "description": "Template for Kafka `PodDisruptionBudget`.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "maxUnavailable": {
                      "description": "Maximum number of unavailable pods to allow automatic Pod eviction. A Pod eviction is allowed when the `maxUnavailable` number of pods or fewer are unavailable after the eviction. Setting this value to 0 prevents all voluntary evictions, so the pods must be evicted manually. Defaults to 1.",
                      "type": [
                        "integer",
                        "null"
                      ],
                      "minimum": 0
                    },
                    "metadata": {
                      "description": "Metadata to apply to the `PodDisruptionBudgetTemplate` resource.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "annotations": {
                          "description": "Annotations added to the Kubernetes resource.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "additionalProperties": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        },
                        "labels": {
                          "description": "Labels added to the Kubernetes resource.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "additionalProperties": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "podSet": {
                  "description": "Template for Kafka `StrimziPodSet` resource.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "metadata": {
                      "description": "Metadata applied to the resource.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "annotations": {
                          "description": "Annotations added to the Kubernetes resource.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "additionalProperties": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        },
                        "labels": {
                          "description": "Labels added to the Kubernetes resource.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "additionalProperties": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "serviceAccount": {
                  "description": "Template for the Kafka service account.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "metadata": {
                      "description": "Metadata applied to the resource.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "annotations": {
                          "description": "Annotations added to the Kubernetes resource.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "additionalProperties": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        },
                        "labels": {
                          "description": "Labels added to the Kubernetes resource.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "additionalProperties": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "statefulset": {
                  "description": "Template for Kafka `StatefulSet`.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "metadata": {
                      "description": "Metadata applied to the resource.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "annotations": {
                          "description": "Annotations added to the Kubernetes resource.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "additionalProperties": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        },
                        "labels": {
                          "description": "Labels added to the Kubernetes resource.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "additionalProperties": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        }
                      }
                    },
                    "podManagementPolicy": {
                      "description": "PodManagementPolicy which will be used for this StatefulSet. Valid values are `Parallel` and `OrderedReady`. Defaults to `Parallel`.",
                      "type": [
                        "string",
                        "null"
                      ],
                      "enum": [
                        "OrderedReady",
                        "Parallel"
                      ]
                    }
                  }
                }
              }
            },
            "tieredStorage": {
              "description": "Configure the tiered storage feature for Kafka brokers.",
              "type": [
                "object",
                "null"
              ],
              "required": [
                "type"
              ],
              "properties": {
                "remoteStorageManager": {
                  "description": "Configuration for the Remote Storage Manager.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "className": {
                      "description": "The class name for the `RemoteStorageManager` implementation.",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "classPath": {
                      "description": "The class path for the `RemoteStorageManager` implementation.",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "config": {
                      "description": "The additional configuration map for the `RemoteStorageManager` implementation. Keys will be automatically prefixed with `rsm.config.`, and added to Kafka broker configuration.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "additionalProperties": {
                        "type": [
                          "string",
                          "null"
                        ]
                      }
                    }
                  }
                },
                "type": {
                  "description": "Storage type, only 'custom' is supported at the moment.",
                  "type": "string",
                  "enum": [
                    "custom"
                  ]
                }
              }
            },
            "version": {
              "description": "The Kafka broker version. Defaults to the latest version. Consult the user documentation to understand the process required to upgrade or downgrade the version.",
              "type": [
                "string",
                "null"
              ]
            }
          }
        },
        "kafkaExporter": {
          "description": "Configuration of the Kafka Exporter. Kafka Exporter can provide additional metrics, for example lag of consumer group at topic/partition.",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "enableSaramaLogging": {
              "description": "Enable Sarama logging, a Go client library used by the Kafka Exporter.",
              "type": [
                "boolean",
                "null"
              ]
            },
            "groupExcludeRegex": {
              "description": "Regular expression to specify which consumer groups to exclude.",
              "type": [
                "string",
                "null"
              ]
            },
            "groupRegex": {
              "description": "Regular expression to specify which consumer groups to collect. Default value is `.*`.",
              "type": [
                "string",
                "null"
              ]
            },
            "image": {
              "description": "The container image used for the Kafka Exporter pods. If no image name is explicitly specified, the image name corresponds to the version specified in the Cluster Operator configuration. If an image name is not defined in the Cluster Operator configuration, a default value is used.",
              "type": [
                "string",
                "null"
              ]
            },
            "livenessProbe": {
              "description": "Pod liveness check.",
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "failureThreshold": {
                  "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.",
                  "type": [
                    "integer",
                    "null"
                  ],
                  "minimum": 1
                },
                "initialDelaySeconds": {
                  "description": "The initial delay before first the health is first checked. Default to 15 seconds. Minimum value is 0.",
                  "type": [
                    "integer",
                    "null"
                  ],
                  "minimum": 0
                },
                "periodSeconds": {
                  "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.",
                  "type": [
                    "integer",
                    "null"
                  ],
                  "minimum": 1
                },
                "successThreshold": {
                  "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.",
                  "type": [
                    "integer",
                    "null"
                  ],
                  "minimum": 1
                },
                "timeoutSeconds": {
                  "description": "The timeout for each attempted health check. Default to 5 seconds. Minimum value is 1.",
                  "type": [
                    "integer",
                    "null"
                  ],
                  "minimum": 1
                }
              }
            },
            "logging": {
              "description": "Only log messages with the given severity or above. Valid levels: [`info`, `debug`, `trace`]. Default log level is `info`.",
              "type": [
                "string",
                "null"
              ]
            },
            "readinessProbe": {
              "description": "Pod readiness check.",
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "failureThreshold": {
                  "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.",
                  "type": [
                    "integer",
                    "null"
                  ],
                  "minimum": 1
                },
                "initialDelaySeconds": {
                  "description": "The initial delay before first the health is first checked. Default to 15 seconds. Minimum value is 0.",
                  "type": [
                    "integer",
                    "null"
                  ],
                  "minimum": 0
                },
                "periodSeconds": {
                  "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.",
                  "type": [
                    "integer",
                    "null"
                  ],
                  "minimum": 1
                },
                "successThreshold": {
                  "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.",
                  "type": [
                    "integer",
                    "null"
                  ],
                  "minimum": 1
                },
                "timeoutSeconds": {
                  "description": "The timeout for each attempted health check. Default to 5 seconds. Minimum value is 1.",
                  "type": [
                    "integer",
                    "null"
                  ],
                  "minimum": 1
                }
              }
            },
            "resources": {
              "description": "CPU and memory resources to reserve.",
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "claims": {
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "properties": {
                      "name": {
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "request": {
                        "type": [
                          "string",
                          "null"
                        ]
                      }
                    }
                  }
                },
                "limits": {
                  "type": [
                    "object",
                    "null"
                  ],
                  "additionalProperties": {
                    "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                    "x-kubernetes-int-or-string": true
                  }
                },
                "requests": {
                  "type": [
                    "object",
                    "null"
                  ],
                  "additionalProperties": {
                    "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                    "x-kubernetes-int-or-string": true
                  }
                }
              }
            },
            "showAllOffsets": {
              "description": "Whether show the offset/lag for all consumer group, otherwise, only show connected consumer groups.",
              "type": [
                "boolean",
                "null"
              ]
            },
            "template": {
              "description": "Customization of deployment templates and pods.",
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "container": {
                  "description": "Template for the Kafka Exporter container.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "env": {
                      "description": "Environment variables which should be applied to the container.",
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "name": {
                            "description": "The environment variable key.",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "value": {
                            "description": "The environment variable value.",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "valueFrom": {
                            "description": "Reference to the secret or config map property to which the environment variable is set.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "configMapKeyRef": {
                                "description": "Reference to a key in a config map.",
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "properties": {
                                  "key": {
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "name": {
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "optional": {
                                    "type": [
                                      "boolean",
                                      "null"
                                    ]
                                  }
                                }
                              },
                              "secretKeyRef": {
                                "description": "Reference to a key in a secret.",
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "properties": {
                                  "key": {
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "name": {
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "optional": {
                                    "type": [
                                      "boolean",
                                      "null"
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "securityContext": {
                      "description": "Security context for the container.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "allowPrivilegeEscalation": {
                          "type": [
                            "boolean",
                            "null"
                          ]
                        },
                        "appArmorProfile": {
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "localhostProfile": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "type": {
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          }
                        },
                        "capabilities": {
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "add": {
                              "type": [
                                "array",
                                "null"
                              ],
                              "items": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            },
                            "drop": {
                              "type": [
                                "array",
                                "null"
                              ],
                              "items": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            }
                          }
                        },
                        "privileged": {
                          "type": [
                            "boolean",
                            "null"
                          ]
                        },
                        "procMount": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "readOnlyRootFilesystem": {
                          "type": [
                            "boolean",
                            "null"
                          ]
                        },
                        "runAsGroup": {
                          "type": [
                            "integer",
                            "null"
                          ]
                        },
                        "runAsNonRoot": {
                          "type": [
                            "boolean",
                            "null"
                          ]
                        },
                        "runAsUser": {
                          "type": [
                            "integer",
                            "null"
                          ]
                        },
                        "seLinuxOptions": {
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "level": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "role": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "type": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "user": {
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          }
                        },
                        "seccompProfile": {
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "localhostProfile": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "type": {
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          }
                        },
                        "windowsOptions": {
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "gmsaCredentialSpec": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "gmsaCredentialSpecName": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "hostProcess": {
                              "type": [
                                "boolean",
                                "null"
                              ]
                            },
                            "runAsUserName": {
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          }
                        }
                      }
                    },
                    "volumeMounts": {
                      "description": "Additional volume mounts which should be applied to the container.",
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "mountPath": {
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "mountPropagation": {
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "name": {
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "readOnly": {
                            "type": [
                              "boolean",
                              "null"
                            ]
                          },
                          "recursiveReadOnly": {
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "subPath": {
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "subPathExpr": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "deployment": {
                  "description": "Template for Kafka Exporter `Deployment`.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "deploymentStrategy": {
                      "description": "Pod replacement strategy for deployment configuration changes. Valid values are `RollingUpdate` and `Recreate`. Defaults to `RollingUpdate`.",
                      "type": [
                        "string",
                        "null"
                      ],
                      "enum": [
                        "RollingUpdate",
                        "Recreate"
                      ]
                    },
                    "metadata": {
                      "description": "Metadata applied to the resource.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "annotations": {
                          "description": "Annotations added to the Kubernetes resource.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "additionalProperties": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        },
                        "labels": {
                          "description": "Labels added to the Kubernetes resource.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "additionalProperties": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "pod": {
                  "description": "Template for Kafka Exporter `Pods`.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "affinity": {
                      "description": "The pod's affinity rules.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "nodeAffinity": {
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "preferredDuringSchedulingIgnoredDuringExecution": {
                              "type": [
                                "array",
                                "null"
                              ],
                              "items": {
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "properties": {
                                  "preference": {
                                    "type": [
                                      "object",
                                      "null"
                                    ],
                                    "properties": {
                                      "matchExpressions": {
                                        "type": [
                                          "array",
                                          "null"
                                        ],
                                        "items": {
                                          "type": [
                                            "object",
                                            "null"
                                          ],
                                          "properties": {
                                            "key": {
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            },
                                            "operator": {
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            },
                                            "values": {
                                              "type": [
                                                "array",
                                                "null"
                                              ],
                                              "items": {
                                                "type": [
                                                  "string",
                                                  "null"
                                                ]
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "matchFields": {
                                        "type": [
                                          "array",
                                          "null"
                                        ],
                                        "items": {
                                          "type": [
                                            "object",
                                            "null"
                                          ],
                                          "properties": {
                                            "key": {
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            },
                                            "operator": {
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            },
                                            "values": {
                                              "type": [
                                                "array",
                                                "null"
                                              ],
                                              "items": {
                                                "type": [
                                                  "string",
                                                  "null"
                                                ]
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "weight": {
                                    "type": [
                                      "integer",
                                      "null"
                                    ]
                                  }
                                }
                              }
                            },
                            "requiredDuringSchedulingIgnoredDuringExecution": {
                              "type": [
                                "object",
                                "null"
                              ],
                              "properties": {
                                "nodeSelectorTerms": {
                                  "type": [
                                    "array",
                                    "null"
                                  ],
                                  "items": {
                                    "type": [
                                      "object",
                                      "null"
                                    ],
                                    "properties": {
                                      "matchExpressions": {
                                        "type": [
                                          "array",
                                          "null"
                                        ],
                                        "items": {
                                          "type": [
                                            "object",
                                            "null"
                                          ],
                                          "properties": {
                                            "key": {
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            },
                                            "operator": {
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            },
                                            "values": {
                                              "type": [
                                                "array",
                                                "null"
                                              ],
                                              "items": {
                                                "type": [
                                                  "string",
                                                  "null"
                                                ]
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "matchFields": {
                                        "type": [
                                          "array",
                                          "null"
                                        ],
                                        "items": {
                                          "type": [
                                            "object",
                                            "null"
                                          ],
                                          "properties": {
                                            "key": {
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            },
                                            "operator": {
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            },
                                            "values": {
                                              "type": [
                                                "array",
                                                "null"
                                              ],
                                              "items": {
                                                "type": [
                                                  "string",
                                                  "null"
                                                ]
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "podAffinity": {
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "preferredDuringSchedulingIgnoredDuringExecution": {
                              "type": [
                                "array",
                                "null"
                              ],
                              "items": {
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "properties": {
                                  "podAffinityTerm": {
                                    "type": [
                                      "object",
                                      "null"
                                    ],
                                    "properties": {
                                      "labelSelector": {
                                        "type": [
                                          "object",
                                          "null"
                                        ],
                                        "properties": {
                                          "matchExpressions": {
                                            "type": [
                                              "array",
                                              "null"
                                            ],
                                            "items": {
                                              "type": [
                                                "object",
                                                "null"
                                              ],
                                              "properties": {
                                                "key": {
                                                  "type": [
                                                    "string",
                                                    "null"
                                                  ]
                                                },
                                                "operator": {
                                                  "type": [
                                                    "string",
                                                    "null"
                                                  ]
                                                },
                                                "values": {
                                                  "type": [
                                                    "array",
                                                    "null"
                                                  ],
                                                  "items": {
                                                    "type": [
                                                      "string",
                                                      "null"
                                                    ]
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "matchLabels": {
                                            "type": [
                                              "object",
                                              "null"
                                            ],
                                            "additionalProperties": {
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            }
                                          }
                                        }
                                      },
                                      "matchLabelKeys": {
                                        "type": [
                                          "array",
                                          "null"
                                        ],
                                        "items": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        }
                                      },
                                      "mismatchLabelKeys": {
                                        "type": [
                                          "array",
                                          "null"
                                        ],
                                        "items": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        }
                                      },
                                      "namespaceSelector": {
                                        "type": [
                                          "object",
                                          "null"
                                        ],
                                        "properties": {
                                          "matchExpressions": {
                                            "type": [
                                              "array",
                                              "null"
                                            ],
                                            "items": {
                                              "type": [
                                                "object",
                                                "null"
                                              ],
                                              "properties": {
                                                "key": {
                                                  "type": [
                                                    "string",
                                                    "null"
                                                  ]
                                                },
                                                "operator": {
                                                  "type": [
                                                    "string",
                                                    "null"
                                                  ]
                                                },
                                                "values": {
                                                  "type": [
                                                    "array",
                                                    "null"
                                                  ],
                                                  "items": {
                                                    "type": [
                                                      "string",
                                                      "null"
                                                    ]
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "matchLabels": {
                                            "type": [
                                              "object",
                                              "null"
                                            ],
                                            "additionalProperties": {
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            }
                                          }
                                        }
                                      },
                                      "namespaces": {
                                        "type": [
                                          "array",
                                          "null"
                                        ],
                                        "items": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        }
                                      },
                                      "topologyKey": {
                                        "type": [
                                          "string",
                                          "null"
                                        ]
                                      }
                                    }
                                  },
                                  "weight": {
                                    "type": [
                                      "integer",
                                      "null"
                                    ]
                                  }
                                }
                              }
                            },
                            "requiredDuringSchedulingIgnoredDuringExecution": {
                              "type": [
                                "array",
                                "null"
                              ],
                              "items": {
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "properties": {
                                  "labelSelector": {
                                    "type": [
                                      "object",
                                      "null"
                                    ],
                                    "properties": {
                                      "matchExpressions": {
                                        "type": [
                                          "array",
                                          "null"
                                        ],
                                        "items": {
                                          "type": [
                                            "object",
                                            "null"
                                          ],
                                          "properties": {
                                            "key": {
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            },
                                            "operator": {
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            },
                                            "values": {
                                              "type": [
                                                "array",
                                                "null"
                                              ],
                                              "items": {
                                                "type": [
                                                  "string",
                                                  "null"
                                                ]
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "matchLabels": {
                                        "type": [
                                          "object",
                                          "null"
                                        ],
                                        "additionalProperties": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        }
                                      }
                                    }
                                  },
                                  "matchLabelKeys": {
                                    "type": [
                                      "array",
                                      "null"
                                    ],
                                    "items": {
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    }
                                  },
                                  "mismatchLabelKeys": {
                                    "type": [
                                      "array",
                                      "null"
                                    ],
                                    "items": {
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    }
                                  },
                                  "namespaceSelector": {
                                    "type": [
                                      "object",
                                      "null"
                                    ],
                                    "properties": {
                                      "matchExpressions": {
                                        "type": [
                                          "array",
                                          "null"
                                        ],
                                        "items": {
                                          "type": [
                                            "object",
                                            "null"
                                          ],
                                          "properties": {
                                            "key": {
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            },
                                            "operator": {
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            },
                                            "values": {
                                              "type": [
                                                "array",
                                                "null"
                                              ],
                                              "items": {
                                                "type": [
                                                  "string",
                                                  "null"
                                                ]
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "matchLabels": {
                                        "type": [
                                          "object",
                                          "null"
                                        ],
                                        "additionalProperties": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        }
                                      }
                                    }
                                  },
                                  "namespaces": {
                                    "type": [
                                      "array",
                                      "null"
                                    ],
                                    "items": {
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    }
                                  },
                                  "topologyKey": {
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        },
                        "podAntiAffinity": {
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "preferredDuringSchedulingIgnoredDuringExecution": {
                              "type": [
                                "array",
                                "null"
                              ],
                              "items": {
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "properties": {
                                  "podAffinityTerm": {
                                    "type": [
                                      "object",
                                      "null"
                                    ],
                                    "properties": {
                                      "labelSelector": {
                                        "type": [
                                          "object",
                                          "null"
                                        ],
                                        "properties": {
                                          "matchExpressions": {
                                            "type": [
                                              "array",
                                              "null"
                                            ],
                                            "items": {
                                              "type": [
                                                "object",
                                                "null"
                                              ],
                                              "properties": {
                                                "key": {
                                                  "type": [
                                                    "string",
                                                    "null"
                                                  ]
                                                },
                                                "operator": {
                                                  "type": [
                                                    "string",
                                                    "null"
                                                  ]
                                                },
                                                "values": {
                                                  "type": [
                                                    "array",
                                                    "null"
                                                  ],
                                                  "items": {
                                                    "type": [
                                                      "string",
                                                      "null"
                                                    ]
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "matchLabels": {
                                            "type": [
                                              "object",
                                              "null"
                                            ],
                                            "additionalProperties": {
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            }
                                          }
                                        }
                                      },
                                      "matchLabelKeys": {
                                        "type": [
                                          "array",
                                          "null"
                                        ],
                                        "items": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        }
                                      },
                                      "mismatchLabelKeys": {
                                        "type": [
                                          "array",
                                          "null"
                                        ],
                                        "items": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        }
                                      },
                                      "namespaceSelector": {
                                        "type": [
                                          "object",
                                          "null"
                                        ],
                                        "properties": {
                                          "matchExpressions": {
                                            "type": [
                                              "array",
                                              "null"
                                            ],
                                            "items": {
                                              "type": [
                                                "object",
                                                "null"
                                              ],
                                              "properties": {
                                                "key": {
                                                  "type": [
                                                    "string",
                                                    "null"
                                                  ]
                                                },
                                                "operator": {
                                                  "type": [
                                                    "string",
                                                    "null"
                                                  ]
                                                },
                                                "values": {
                                                  "type": [
                                                    "array",
                                                    "null"
                                                  ],
                                                  "items": {
                                                    "type": [
                                                      "string",
                                                      "null"
                                                    ]
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "matchLabels": {
                                            "type": [
                                              "object",
                                              "null"
                                            ],
                                            "additionalProperties": {
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            }
                                          }
                                        }
                                      },
                                      "namespaces": {
                                        "type": [
                                          "array",
                                          "null"
                                        ],
                                        "items": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        }
                                      },
                                      "topologyKey": {
                                        "type": [
                                          "string",
                                          "null"
                                        ]
                                      }
                                    }
                                  },
                                  "weight": {
                                    "type": [
                                      "integer",
                                      "null"
                                    ]
                                  }
                                }
                              }
                            },
                            "requiredDuringSchedulingIgnoredDuringExecution": {
                              "type": [
                                "array",
                                "null"
                              ],
                              "items": {
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "properties": {
                                  "labelSelector": {
                                    "type": [
                                      "object",
                                      "null"
                                    ],
                                    "properties": {
                                      "matchExpressions": {
                                        "type": [
                                          "array",
                                          "null"
                                        ],
                                        "items": {
                                          "type": [
                                            "object",
                                            "null"
                                          ],
                                          "properties": {
                                            "key": {
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            },
                                            "operator": {
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            },
                                            "values": {
                                              "type": [
                                                "array",
                                                "null"
                                              ],
                                              "items": {
                                                "type": [
                                                  "string",
                                                  "null"
                                                ]
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "matchLabels": {
                                        "type": [
                                          "object",
                                          "null"
                                        ],
                                        "additionalProperties": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        }
                                      }
                                    }
                                  },
                                  "matchLabelKeys": {
                                    "type": [
                                      "array",
                                      "null"
                                    ],
                                    "items": {
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    }
                                  },
                                  "mismatchLabelKeys": {
                                    "type": [
                                      "array",
                                      "null"
                                    ],
                                    "items": {
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    }
                                  },
                                  "namespaceSelector": {
                                    "type": [
                                      "object",
                                      "null"
                                    ],
                                    "properties": {
                                      "matchExpressions": {
                                        "type": [
                                          "array",
                                          "null"
                                        ],
                                        "items": {
                                          "type": [
                                            "object",
                                            "null"
                                          ],
                                          "properties": {
                                            "key": {
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            },
                                            "operator": {
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            },
                                            "values": {
                                              "type": [
                                                "array",
                                                "null"
                                              ],
                                              "items": {
                                                "type": [
                                                  "string",
                                                  "null"
                                                ]
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "matchLabels": {
                                        "type": [
                                          "object",
                                          "null"
                                        ],
                                        "additionalProperties": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        }
                                      }
                                    }
                                  },
                                  "namespaces": {
                                    "type": [
                                      "array",
                                      "null"
                                    ],
                                    "items": {
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    }
                                  },
                                  "topologyKey": {
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "dnsConfig": {
                      "description": "The pod's DNSConfig. If specified, it will be merged to the generated DNS configuration based on the DNSPolicy.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "nameservers": {
                          "type": [
                            "array",
                            "null"
                          ],
                          "items": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        },
                        "options": {
                          "type": [
                            "array",
                            "null"
                          ],
                          "items": {
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "name": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "value": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            }
                          }
                        },
                        "searches": {
                          "type": [
                            "array",
                            "null"
                          ],
                          "items": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        }
                      }
                    },
                    "dnsPolicy": {
                      "description": "The pod's DNSPolicy. Defaults to `ClusterFirst`. Valid values are `ClusterFirstWithHostNet`, `ClusterFirst`, `Default` or `None`.",
                      "type": [
                        "string",
                        "null"
                      ],
                      "enum": [
                        "ClusterFirst",
                        "ClusterFirstWithHostNet",
                        "Default",
                        "None"
                      ]
                    },
                    "enableServiceLinks": {
                      "description": "Indicates whether information about services should be injected into Pod's environment variables.",
                      "type": [
                        "boolean",
                        "null"
                      ]
                    },
                    "hostAliases": {
                      "description": "The pod's HostAliases. HostAliases is an optional list of hosts and IPs that will be injected into the Pod's hosts file if specified.",
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "hostnames": {
                            "type": [
                              "array",
                              "null"
                            ],
                            "items": {
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          },
                          "ip": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        }
                      }
                    },
                    "imagePullSecrets": {
                      "description": "List of references to secrets in the same namespace to use for pulling any of the images used by this Pod. When the `STRIMZI_IMAGE_PULL_SECRETS` environment variable in Cluster Operator and the `imagePullSecrets` option are specified, only the `imagePullSecrets` variable is used and the `STRIMZI_IMAGE_PULL_SECRETS` variable is ignored.",
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "name": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        }
                      }
                    },
                    "metadata": {
                      "description": "Metadata applied to the resource.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "annotations": {
                          "description": "Annotations added to the Kubernetes resource.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "additionalProperties": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        },
                        "labels": {
                          "description": "Labels added to the Kubernetes resource.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "additionalProperties": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        }
                      }
                    },
                    "priorityClassName": {
                      "description": "The name of the priority class used to assign priority to the pods. ",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "schedulerName": {
                      "description": "The name of the scheduler used to dispatch this `Pod`. If not specified, the default scheduler will be used.",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "securityContext": {
                      "description": "Configures pod-level security attributes and common container settings.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "appArmorProfile": {
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "localhostProfile": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "type": {
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          }
                        },
                        "fsGroup": {
                          "type": [
                            "integer",
                            "null"
                          ]
                        },
                        "fsGroupChangePolicy": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "runAsGroup": {
                          "type": [
                            "integer",
                            "null"
                          ]
                        },
                        "runAsNonRoot": {
                          "type": [
                            "boolean",
                            "null"
                          ]
                        },
                        "runAsUser": {
                          "type": [
                            "integer",
                            "null"
                          ]
                        },
                        "seLinuxChangePolicy": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "seLinuxOptions": {
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "level": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "role": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "type": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "user": {
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          }
                        },
                        "seccompProfile": {
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "localhostProfile": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "type": {
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          }
                        },
                        "supplementalGroups": {
                          "type": [
                            "array",
                            "null"
                          ],
                          "items": {
                            "type": [
                              "integer",
                              "null"
                            ]
                          }
                        },
                        "supplementalGroupsPolicy": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "sysctls": {
                          "type": [
                            "array",
                            "null"
                          ],
                          "items": {
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "name": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "value": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            }
                          }
                        },
                        "windowsOptions": {
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "gmsaCredentialSpec": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "gmsaCredentialSpecName": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "hostProcess": {
                              "type": [
                                "boolean",
                                "null"
                              ]
                            },
                            "runAsUserName": {
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          }
                        }
                      }
                    },
                    "terminationGracePeriodSeconds": {
                      "description": "The grace period is the duration in seconds after the processes running in the pod are sent a termination signal, and the time when the processes are forcibly halted with a kill signal. Set this value to longer than the expected cleanup time for your process. Value must be a non-negative integer. A zero value indicates delete immediately. You might need to increase the grace period for very large Kafka clusters, so that the Kafka brokers have enough time to transfer their work to another broker before they are terminated. Defaults to 30 seconds.",
                      "type": [
                        "integer",
                        "null"
                      ],
                      "minimum": 0
                    },
                    "tmpDirSizeLimit": {
                      "description": "Defines the total amount of pod memory allocated for the temporary `EmptyDir` volume `/tmp`. Specify the allocation in memory units, for example, `100Mi` for 100 mebibytes. Default value is `5Mi`. The `/tmp` volume is backed by pod memory, not disk storage, so avoid setting a high value as it consumes pod memory resources.",
                      "type": [
                        "string",
                        "null"
                      ],
                      "pattern": "^([0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$"
                    },
                    "tolerations": {
                      "description": "The pod's tolerations.",
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "effect": {
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "key": {
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "operator": {
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "tolerationSeconds": {
                            "type": [
                              "integer",
                              "null"
                            ]
                          },
                          "value": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        }
                      }
                    },
                    "topologySpreadConstraints": {
                      "description": "The pod's topology spread constraints.",
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "labelSelector": {
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "matchExpressions": {
                                "type": [
                                  "array",
                                  "null"
                                ],
                                "items": {
                                  "type": [
                                    "object",
                                    "null"
                                  ],
                                  "properties": {
                                    "key": {
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    },
                                    "operator": {
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    },
                                    "values": {
                                      "type": [
                                        "array",
                                        "null"
                                      ],
                                      "items": {
                                        "type": [
                                          "string",
                                          "null"
                                        ]
                                      }
                                    }
                                  }
                                }
                              },
                              "matchLabels": {
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "additionalProperties": {
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                }
                              }
                            }
                          },
                          "matchLabelKeys": {
                            "type": [
                              "array",
                              "null"
                            ],
                            "items": {
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          },
                          "maxSkew": {
                            "type": [
                              "integer",
                              "null"
                            ]
                          },
                          "minDomains": {
                            "type": [
                              "integer",
                              "null"
                            ]
                          },
                          "nodeAffinityPolicy": {
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "nodeTaintsPolicy": {
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "topologyKey": {
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "whenUnsatisfiable": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        }
                      }
                    },
                    "volumes": {
                      "description": "Additional volumes that can be mounted to the pod.",
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "configMap": {
                            "description": "`ConfigMap` to use to populate the volume.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "defaultMode": {
                                "type": [
                                  "integer",
                                  "null"
                                ]
                              },
                              "items": {
                                "type": [
                                  "array",
                                  "null"
                                ],
                                "items": {
                                  "type": [
                                    "object",
                                    "null"
                                  ],
                                  "properties": {
                                    "key": {
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    },
                                    "mode": {
                                      "type": [
                                        "integer",
                                        "null"
                                      ]
                                    },
                                    "path": {
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    }
                                  }
                                }
                              },
                              "name": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "optional": {
                                "type": [
                                  "boolean",
                                  "null"
                                ]
                              }
                            }
                          },
                          "csi": {
                            "description": "`CSIVolumeSource` object to use to populate the volume.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "driver": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "fsType": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "nodePublishSecretRef": {
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "properties": {
                                  "name": {
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  }
                                }
                              },
                              "readOnly": {
                                "type": [
                                  "boolean",
                                  "null"
                                ]
                              },
                              "volumeAttributes": {
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "additionalProperties": {
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                }
                              }
                            }
                          },
                          "emptyDir": {
                            "description": "`EmptyDir` to use to populate the volume.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "medium": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "sizeLimit": {
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "properties": {
                                  "amount": {
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "format": {
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  }
                                }
                              }
                            }
                          },
                          "image": {
                            "description": "`ImageVolumeSource` object to use to populate the volume.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "pullPolicy": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "reference": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            }
                          },
                          "name": {
                            "description": "Name to use for the volume. Required.",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "persistentVolumeClaim": {
                            "description": "`PersistentVolumeClaim` object to use to populate the volume.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "claimName": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "readOnly": {
                                "type": [
                                  "boolean",
                                  "null"
                                ]
                              }
                            }
                          },
                          "secret": {
                            "description": "`Secret` to use to populate the volume.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "defaultMode": {
                                "type": [
                                  "integer",
                                  "null"
                                ]
                              },
                              "items": {
                                "type": [
                                  "array",
                                  "null"
                                ],
                                "items": {
                                  "type": [
                                    "object",
                                    "null"
                                  ],
                                  "properties": {
                                    "key": {
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    },
                                    "mode": {
                                      "type": [
                                        "integer",
                                        "null"
                                      ]
                                    },
                                    "path": {
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    }
                                  }
                                }
                              },
                              "optional": {
                                "type": [
                                  "boolean",
                                  "null"
                                ]
                              },
                              "secretName": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "service": {
                  "description": "Template for Kafka Exporter `Service`.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "metadata": {
                      "description": "Metadata applied to the resource.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "annotations": {
                          "description": "Annotations added to the Kubernetes resource.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "additionalProperties": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        },
                        "labels": {
                          "description": "Labels added to the Kubernetes resource.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "additionalProperties": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "serviceAccount": {
                  "description": "Template for the Kafka Exporter service account.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "metadata": {
                      "description": "Metadata applied to the resource.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "annotations": {
                          "description": "Annotations added to the Kubernetes resource.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "additionalProperties": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        },
                        "labels": {
                          "description": "Labels added to the Kubernetes resource.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "additionalProperties": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "topicExcludeRegex": {
              "description": "Regular expression to specify which topics to exclude.",
              "type": [
                "string",
                "null"
              ]
            },
            "topicRegex": {
              "description": "Regular expression to specify which topics to collect. Default value is `.*`.",
              "type": [
                "string",
                "null"
              ]
            }
          }
        },
        "maintenanceTimeWindows": {
          "description": "A list of time windows for maintenance tasks (that is, certificates renewal). Each time window is defined by a cron expression.",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "zookeeper": {
          "description": "As of Strimzi 0.46.0, ZooKeeper-based Apache Kafka clusters are not supported anymore and this option is ignored.",
          "type": [
            "object",
            "null"
          ],
          "required": [
            "replicas",
            "storage"
          ],
          "properties": {
            "config": {
              "description": "The ZooKeeper broker config. Properties with the following prefixes cannot be set: server., dataDir, dataLogDir, clientPort, authProvider, quorum.auth, requireClientAuthScheme, snapshot.trust.empty, standaloneEnabled, reconfigEnabled, 4lw.commands.whitelist, secureClientPort, ssl., serverCnxnFactory, sslQuorum (with the exception of: ssl.protocol, ssl.quorum.protocol, ssl.enabledProtocols, ssl.quorum.enabledProtocols, ssl.ciphersuites, ssl.quorum.ciphersuites, ssl.hostnameVerification, ssl.quorum.hostnameVerification).",
              "x-kubernetes-preserve-unknown-fields": true
            },
            "image": {
              "description": "The container image used for ZooKeeper pods. If no image name is explicitly specified, it is determined based on the Kafka version set in `spec.kafka.version`. The image names are specifically mapped to corresponding versions in the Cluster Operator configuration.",
              "type": [
                "string",
                "null"
              ]
            },
            "jmxOptions": {
              "description": "JMX Options for Zookeeper nodes.",
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "authentication": {
                  "description": "Authentication configuration for connecting to the JMX port.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "required": [
                    "type"
                  ],
                  "properties": {
                    "type": {
                      "description": "Authentication type. Currently the only supported types are `password`.`password` type creates a username and protected port with no TLS.",
                      "type": "string",
                      "enum": [
                        "password"
                      ]
                    }
                  }
                }
              }
            },
            "jvmOptions": {
              "description": "JVM Options for pods.",
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "-XX": {
                  "description": "A map of -XX options to the JVM.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "additionalProperties": {
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                },
                "-Xms": {
                  "description": "-Xms option to to the JVM.",
                  "type": [
                    "string",
                    "null"
                  ],
                  "pattern": "^[0-9]+[mMgG]?$"
                },
                "-Xmx": {
                  "description": "-Xmx option to to the JVM.",
                  "type": [
                    "string",
                    "null"
                  ],
                  "pattern": "^[0-9]+[mMgG]?$"
                },
                "gcLoggingEnabled": {
                  "description": "Specifies whether the Garbage Collection logging is enabled. The default is false.",
                  "type": [
                    "boolean",
                    "null"
                  ]
                },
                "javaSystemProperties": {
                  "description": "A map of additional system properties which will be passed using the `-D` option to the JVM.",
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "properties": {
                      "name": {
                        "description": "The system property name.",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "value": {
                        "description": "The system property value.",
                        "type": [
                          "string",
                          "null"
                        ]
                      }
                    }
                  }
                }
              }
            },
            "livenessProbe": {
              "description": "Pod liveness checking.",
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "failureThreshold": {
                  "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.",
                  "type": [
                    "integer",
                    "null"
                  ],
                  "minimum": 1
                },
                "initialDelaySeconds": {
                  "description": "The initial delay before first the health is first checked. Default to 15 seconds. Minimum value is 0.",
                  "type": [
                    "integer",
                    "null"
                  ],
                  "minimum": 0
                },
                "periodSeconds": {
                  "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.",
                  "type": [
                    "integer",
                    "null"
                  ],
                  "minimum": 1
                },
                "successThreshold": {
                  "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.",
                  "type": [
                    "integer",
                    "null"
                  ],
                  "minimum": 1
                },
                "timeoutSeconds": {
                  "description": "The timeout for each attempted health check. Default to 5 seconds. Minimum value is 1.",
                  "type": [
                    "integer",
                    "null"
                  ],
                  "minimum": 1
                }
              }
            },
            "logging": {
              "description": "Logging configuration for ZooKeeper.",
              "type": [
                "object",
                "null"
              ],
              "required": [
                "type"
              ],
              "properties": {
                "loggers": {
                  "description": "A Map from logger name to logger level.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "additionalProperties": {
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                },
                "type": {
                  "description": "Logging type, must be either 'inline' or 'external'.",
                  "type": "string",
                  "enum": [
                    "inline",
                    "external"
                  ]
                },
                "valueFrom": {
                  "description": "`ConfigMap` entry where the logging configuration is stored. ",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "configMapKeyRef": {
                      "description": "Reference to the key in the ConfigMap containing the configuration.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "key": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "name": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "optional": {
                          "type": [
                            "boolean",
                            "null"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            },
            "metricsConfig": {
              "description": "Metrics configuration.",
              "type": [
                "object",
                "null"
              ],
              "required": [
                "type"
              ],
              "properties": {
                "type": {
                  "description": "Metrics type. The supported types are `jmxPrometheusExporter` and `strimziMetricsReporter`. Type `jmxPrometheusExporter` uses the Prometheus JMX Exporter to expose Kafka JMX metrics in Prometheus format through an HTTP endpoint. Type `strimziMetricsReporter` uses the Strimzi Metrics Reporter to directly expose Kafka metrics in Prometheus format through an HTTP endpoint.",
                  "type": "string",
                  "enum": [
                    "jmxPrometheusExporter",
                    "strimziMetricsReporter"
                  ]
                },
                "valueFrom": {
                  "description": "ConfigMap entry where the Prometheus JMX Exporter configuration is stored.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "configMapKeyRef": {
                      "description": "Reference to the key in the ConfigMap containing the configuration.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "key": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "name": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "optional": {
                          "type": [
                            "boolean",
                            "null"
                          ]
                        }
                      }
                    }
                  }
                },
                "values": {
                  "description": "Configuration values for the Strimzi Metrics Reporter.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "allowList": {
                      "description": "A list of regex patterns to filter the metrics to collect. Should contain at least one element.",
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": [
                          "string",
                          "null"
                        ]
                      }
                    }
                  }
                }
              },
              "x-kubernetes-validations": [
                {
                  "message": "valueFrom property is required",
                  "rule": "self.type != 'jmxPrometheusExporter' || has(self.valueFrom)"
                }
              ]
            },
            "readinessProbe": {
              "description": "Pod readiness checking.",
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "failureThreshold": {
                  "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.",
                  "type": [
                    "integer",
                    "null"
                  ],
                  "minimum": 1
                },
                "initialDelaySeconds": {
                  "description": "The initial delay before first the health is first checked. Default to 15 seconds. Minimum value is 0.",
                  "type": [
                    "integer",
                    "null"
                  ],
                  "minimum": 0
                },
                "periodSeconds": {
                  "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.",
                  "type": [
                    "integer",
                    "null"
                  ],
                  "minimum": 1
                },
                "successThreshold": {
                  "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.",
                  "type": [
                    "integer",
                    "null"
                  ],
                  "minimum": 1
                },
                "timeoutSeconds": {
                  "description": "The timeout for each attempted health check. Default to 5 seconds. Minimum value is 1.",
                  "type": [
                    "integer",
                    "null"
                  ],
                  "minimum": 1
                }
              }
            },
            "replicas": {
              "description": "The number of pods in the cluster.",
              "type": "integer",
              "minimum": 1
            },
            "resources": {
              "description": "CPU and memory resources to reserve.",
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "claims": {
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "properties": {
                      "name": {
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "request": {
                        "type": [
                          "string",
                          "null"
                        ]
                      }
                    }
                  }
                },
                "limits": {
                  "type": [
                    "object",
                    "null"
                  ],
                  "additionalProperties": {
                    "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                    "x-kubernetes-int-or-string": true
                  }
                },
                "requests": {
                  "type": [
                    "object",
                    "null"
                  ],
                  "additionalProperties": {
                    "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                    "x-kubernetes-int-or-string": true
                  }
                }
              }
            },
            "storage": {
              "description": "Storage configuration (disk). Cannot be updated.",
              "type": "object",
              "required": [
                "type"
              ],
              "properties": {
                "class": {
                  "description": "The storage class to use for dynamic volume allocation.",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "deleteClaim": {
                  "description": "Specifies if the persistent volume claim has to be deleted when the cluster is un-deployed.",
                  "type": [
                    "boolean",
                    "null"
                  ]
                },
                "id": {
                  "description": "Storage identification number. Mandatory for storage volumes defined with a `jbod` storage type configuration.",
                  "type": [
                    "integer",
                    "null"
                  ],
                  "minimum": 0
                },
                "kraftMetadata": {
                  "description": "Specifies whether this volume should be used for storing KRaft metadata. This property is optional. When set, the only currently supported value is `shared`. At most one volume can have this property set.",
                  "type": [
                    "string",
                    "null"
                  ],
                  "enum": [
                    "shared"
                  ]
                },
                "overrides": {
                  "description": "As of Strimzi 0.46.0, the storage overrides for individual brokers are not supported anymore and this option is ignored.",
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "properties": {
                      "broker": {
                        "description": "Id of the kafka broker (broker identifier).",
                        "type": [
                          "integer",
                          "null"
                        ]
                      },
                      "class": {
                        "description": "The storage class to use for dynamic volume allocation for this broker.",
                        "type": [
                          "string",
                          "null"
                        ]
                      }
                    }
                  }
                },
                "selector": {
                  "description": "Specifies a specific persistent volume to use. It contains key:value pairs representing labels for selecting such a volume.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "additionalProperties": {
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                },
                "size": {
                  "description": "When `type=persistent-claim`, defines the size of the persistent volume claim, such as 100Gi. Mandatory when `type=persistent-claim`.",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "sizeLimit": {
                  "description": "When type=ephemeral, defines the total amount of local storage required for this EmptyDir volume (for example 1Gi).",
                  "type": [
                    "string",
                    "null"
                  ],
                  "pattern": "^([0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$"
                },
                "type": {
                  "description": "Storage type, must be either 'ephemeral' or 'persistent-claim'.",
                  "type": "string",
                  "enum": [
                    "ephemeral",
                    "persistent-claim"
                  ]
                }
              }
            },
            "template": {
              "description": "Template for ZooKeeper cluster resources. The template allows users to specify how the Kubernetes resources are generated.",
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "clientService": {
                  "description": "Template for ZooKeeper client `Service`.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "ipFamilies": {
                      "description": "Specifies the IP Families used by the service. Available options are `IPv4` and `IPv6`. If unspecified, Kubernetes will choose the default value based on the `ipFamilyPolicy` setting.",
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": [
                          "string",
                          "null"
                        ],
                        "enum": [
                          "IPv4",
                          "IPv6"
                        ]
                      }
                    },
                    "ipFamilyPolicy": {
                      "description": "Specifies the IP Family Policy used by the service. Available options are `SingleStack`, `PreferDualStack` and `RequireDualStack`. `SingleStack` is for a single IP family. `PreferDualStack` is for two IP families on dual-stack configured clusters or a single IP family on single-stack clusters. `RequireDualStack` fails unless there are two IP families on dual-stack configured clusters. If unspecified, Kubernetes will choose the default value based on the service type.",
                      "type": [
                        "string",
                        "null"
                      ],
                      "enum": [
                        "SingleStack",
                        "PreferDualStack",
                        "RequireDualStack"
                      ]
                    },
                    "metadata": {
                      "description": "Metadata applied to the resource.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "annotations": {
                          "description": "Annotations added to the Kubernetes resource.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "additionalProperties": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        },
                        "labels": {
                          "description": "Labels added to the Kubernetes resource.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "additionalProperties": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "jmxSecret": {
                  "description": "Template for Secret of the Zookeeper Cluster JMX authentication.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "metadata": {
                      "description": "Metadata applied to the resource.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "annotations": {
                          "description": "Annotations added to the Kubernetes resource.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "additionalProperties": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        },
                        "labels": {
                          "description": "Labels added to the Kubernetes resource.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "additionalProperties": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "nodesService": {
                  "description": "Template for ZooKeeper nodes `Service`.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "ipFamilies": {
                      "description": "Specifies the IP Families used by the service. Available options are `IPv4` and `IPv6`. If unspecified, Kubernetes will choose the default value based on the `ipFamilyPolicy` setting.",
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": [
                          "string",
                          "null"
                        ],
                        "enum": [
                          "IPv4",
                          "IPv6"
                        ]
                      }
                    },
                    "ipFamilyPolicy": {
                      "description": "Specifies the IP Family Policy used by the service. Available options are `SingleStack`, `PreferDualStack` and `RequireDualStack`. `SingleStack` is for a single IP family. `PreferDualStack` is for two IP families on dual-stack configured clusters or a single IP family on single-stack clusters. `RequireDualStack` fails unless there are two IP families on dual-stack configured clusters. If unspecified, Kubernetes will choose the default value based on the service type.",
                      "type": [
                        "string",
                        "null"
                      ],
                      "enum": [
                        "SingleStack",
                        "PreferDualStack",
                        "RequireDualStack"
                      ]
                    },
                    "metadata": {
                      "description": "Metadata applied to the resource.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "annotations": {
                          "description": "Annotations added to the Kubernetes resource.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "additionalProperties": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        },
                        "labels": {
                          "description": "Labels added to the Kubernetes resource.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "additionalProperties": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "persistentVolumeClaim": {
                  "description": "Template for all ZooKeeper `PersistentVolumeClaims`.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "metadata": {
                      "description": "Metadata applied to the resource.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "annotations": {
                          "description": "Annotations added to the Kubernetes resource.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "additionalProperties": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        },
                        "labels": {
                          "description": "Labels added to the Kubernetes resource.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "additionalProperties": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "pod": {
                  "description": "Template for ZooKeeper `Pods`.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "affinity": {
                      "description": "The pod's affinity rules.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "nodeAffinity": {
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "preferredDuringSchedulingIgnoredDuringExecution": {
                              "type": [
                                "array",
                                "null"
                              ],
                              "items": {
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "properties": {
                                  "preference": {
                                    "type": [
                                      "object",
                                      "null"
                                    ],
                                    "properties": {
                                      "matchExpressions": {
                                        "type": [
                                          "array",
                                          "null"
                                        ],
                                        "items": {
                                          "type": [
                                            "object",
                                            "null"
                                          ],
                                          "properties": {
                                            "key": {
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            },
                                            "operator": {
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            },
                                            "values": {
                                              "type": [
                                                "array",
                                                "null"
                                              ],
                                              "items": {
                                                "type": [
                                                  "string",
                                                  "null"
                                                ]
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "matchFields": {
                                        "type": [
                                          "array",
                                          "null"
                                        ],
                                        "items": {
                                          "type": [
                                            "object",
                                            "null"
                                          ],
                                          "properties": {
                                            "key": {
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            },
                                            "operator": {
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            },
                                            "values": {
                                              "type": [
                                                "array",
                                                "null"
                                              ],
                                              "items": {
                                                "type": [
                                                  "string",
                                                  "null"
                                                ]
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "weight": {
                                    "type": [
                                      "integer",
                                      "null"
                                    ]
                                  }
                                }
                              }
                            },
                            "requiredDuringSchedulingIgnoredDuringExecution": {
                              "type": [
                                "object",
                                "null"
                              ],
                              "properties": {
                                "nodeSelectorTerms": {
                                  "type": [
                                    "array",
                                    "null"
                                  ],
                                  "items": {
                                    "type": [
                                      "object",
                                      "null"
                                    ],
                                    "properties": {
                                      "matchExpressions": {
                                        "type": [
                                          "array",
                                          "null"
                                        ],
                                        "items": {
                                          "type": [
                                            "object",
                                            "null"
                                          ],
                                          "properties": {
                                            "key": {
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            },
                                            "operator": {
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            },
                                            "values": {
                                              "type": [
                                                "array",
                                                "null"
                                              ],
                                              "items": {
                                                "type": [
                                                  "string",
                                                  "null"
                                                ]
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "matchFields": {
                                        "type": [
                                          "array",
                                          "null"
                                        ],
                                        "items": {
                                          "type": [
                                            "object",
                                            "null"
                                          ],
                                          "properties": {
                                            "key": {
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            },
                                            "operator": {
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            },
                                            "values": {
                                              "type": [
                                                "array",
                                                "null"
                                              ],
                                              "items": {
                                                "type": [
                                                  "string",
                                                  "null"
                                                ]
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "podAffinity": {
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "preferredDuringSchedulingIgnoredDuringExecution": {
                              "type": [
                                "array",
                                "null"
                              ],
                              "items": {
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "properties": {
                                  "podAffinityTerm": {
                                    "type": [
                                      "object",
                                      "null"
                                    ],
                                    "properties": {
                                      "labelSelector": {
                                        "type": [
                                          "object",
                                          "null"
                                        ],
                                        "properties": {
                                          "matchExpressions": {
                                            "type": [
                                              "array",
                                              "null"
                                            ],
                                            "items": {
                                              "type": [
                                                "object",
                                                "null"
                                              ],
                                              "properties": {
                                                "key": {
                                                  "type": [
                                                    "string",
                                                    "null"
                                                  ]
                                                },
                                                "operator": {
                                                  "type": [
                                                    "string",
                                                    "null"
                                                  ]
                                                },
                                                "values": {
                                                  "type": [
                                                    "array",
                                                    "null"
                                                  ],
                                                  "items": {
                                                    "type": [
                                                      "string",
                                                      "null"
                                                    ]
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "matchLabels": {
                                            "type": [
                                              "object",
                                              "null"
                                            ],
                                            "additionalProperties": {
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            }
                                          }
                                        }
                                      },
                                      "matchLabelKeys": {
                                        "type": [
                                          "array",
                                          "null"
                                        ],
                                        "items": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        }
                                      },
                                      "mismatchLabelKeys": {
                                        "type": [
                                          "array",
                                          "null"
                                        ],
                                        "items": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        }
                                      },
                                      "namespaceSelector": {
                                        "type": [
                                          "object",
                                          "null"
                                        ],
                                        "properties": {
                                          "matchExpressions": {
                                            "type": [
                                              "array",
                                              "null"
                                            ],
                                            "items": {
                                              "type": [
                                                "object",
                                                "null"
                                              ],
                                              "properties": {
                                                "key": {
                                                  "type": [
                                                    "string",
                                                    "null"
                                                  ]
                                                },
                                                "operator": {
                                                  "type": [
                                                    "string",
                                                    "null"
                                                  ]
                                                },
                                                "values": {
                                                  "type": [
                                                    "array",
                                                    "null"
                                                  ],
                                                  "items": {
                                                    "type": [
                                                      "string",
                                                      "null"
                                                    ]
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "matchLabels": {
                                            "type": [
                                              "object",
                                              "null"
                                            ],
                                            "additionalProperties": {
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            }
                                          }
                                        }
                                      },
                                      "namespaces": {
                                        "type": [
                                          "array",
                                          "null"
                                        ],
                                        "items": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        }
                                      },
                                      "topologyKey": {
                                        "type": [
                                          "string",
                                          "null"
                                        ]
                                      }
                                    }
                                  },
                                  "weight": {
                                    "type": [
                                      "integer",
                                      "null"
                                    ]
                                  }
                                }
                              }
                            },
                            "requiredDuringSchedulingIgnoredDuringExecution": {
                              "type": [
                                "array",
                                "null"
                              ],
                              "items": {
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "properties": {
                                  "labelSelector": {
                                    "type": [
                                      "object",
                                      "null"
                                    ],
                                    "properties": {
                                      "matchExpressions": {
                                        "type": [
                                          "array",
                                          "null"
                                        ],
                                        "items": {
                                          "type": [
                                            "object",
                                            "null"
                                          ],
                                          "properties": {
                                            "key": {
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            },
                                            "operator": {
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            },
                                            "values": {
                                              "type": [
                                                "array",
                                                "null"
                                              ],
                                              "items": {
                                                "type": [
                                                  "string",
                                                  "null"
                                                ]
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "matchLabels": {
                                        "type": [
                                          "object",
                                          "null"
                                        ],
                                        "additionalProperties": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        }
                                      }
                                    }
                                  },
                                  "matchLabelKeys": {
                                    "type": [
                                      "array",
                                      "null"
                                    ],
                                    "items": {
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    }
                                  },
                                  "mismatchLabelKeys": {
                                    "type": [
                                      "array",
                                      "null"
                                    ],
                                    "items": {
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    }
                                  },
                                  "namespaceSelector": {
                                    "type": [
                                      "object",
                                      "null"
                                    ],
                                    "properties": {
                                      "matchExpressions": {
                                        "type": [
                                          "array",
                                          "null"
                                        ],
                                        "items": {
                                          "type": [
                                            "object",
                                            "null"
                                          ],
                                          "properties": {
                                            "key": {
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            },
                                            "operator": {
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            },
                                            "values": {
                                              "type": [
                                                "array",
                                                "null"
                                              ],
                                              "items": {
                                                "type": [
                                                  "string",
                                                  "null"
                                                ]
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "matchLabels": {
                                        "type": [
                                          "object",
                                          "null"
                                        ],
                                        "additionalProperties": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        }
                                      }
                                    }
                                  },
                                  "namespaces": {
                                    "type": [
                                      "array",
                                      "null"
                                    ],
                                    "items": {
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    }
                                  },
                                  "topologyKey": {
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        },
                        "podAntiAffinity": {
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "preferredDuringSchedulingIgnoredDuringExecution": {
                              "type": [
                                "array",
                                "null"
                              ],
                              "items": {
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "properties": {
                                  "podAffinityTerm": {
                                    "type": [
                                      "object",
                                      "null"
                                    ],
                                    "properties": {
                                      "labelSelector": {
                                        "type": [
                                          "object",
                                          "null"
                                        ],
                                        "properties": {
                                          "matchExpressions": {
                                            "type": [
                                              "array",
                                              "null"
                                            ],
                                            "items": {
                                              "type": [
                                                "object",
                                                "null"
                                              ],
                                              "properties": {
                                                "key": {
                                                  "type": [
                                                    "string",
                                                    "null"
                                                  ]
                                                },
                                                "operator": {
                                                  "type": [
                                                    "string",
                                                    "null"
                                                  ]
                                                },
                                                "values": {
                                                  "type": [
                                                    "array",
                                                    "null"
                                                  ],
                                                  "items": {
                                                    "type": [
                                                      "string",
                                                      "null"
                                                    ]
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "matchLabels": {
                                            "type": [
                                              "object",
                                              "null"
                                            ],
                                            "additionalProperties": {
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            }
                                          }
                                        }
                                      },
                                      "matchLabelKeys": {
                                        "type": [
                                          "array",
                                          "null"
                                        ],
                                        "items": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        }
                                      },
                                      "mismatchLabelKeys": {
                                        "type": [
                                          "array",
                                          "null"
                                        ],
                                        "items": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        }
                                      },
                                      "namespaceSelector": {
                                        "type": [
                                          "object",
                                          "null"
                                        ],
                                        "properties": {
                                          "matchExpressions": {
                                            "type": [
                                              "array",
                                              "null"
                                            ],
                                            "items": {
                                              "type": [
                                                "object",
                                                "null"
                                              ],
                                              "properties": {
                                                "key": {
                                                  "type": [
                                                    "string",
                                                    "null"
                                                  ]
                                                },
                                                "operator": {
                                                  "type": [
                                                    "string",
                                                    "null"
                                                  ]
                                                },
                                                "values": {
                                                  "type": [
                                                    "array",
                                                    "null"
                                                  ],
                                                  "items": {
                                                    "type": [
                                                      "string",
                                                      "null"
                                                    ]
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "matchLabels": {
                                            "type": [
                                              "object",
                                              "null"
                                            ],
                                            "additionalProperties": {
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            }
                                          }
                                        }
                                      },
                                      "namespaces": {
                                        "type": [
                                          "array",
                                          "null"
                                        ],
                                        "items": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        }
                                      },
                                      "topologyKey": {
                                        "type": [
                                          "string",
                                          "null"
                                        ]
                                      }
                                    }
                                  },
                                  "weight": {
                                    "type": [
                                      "integer",
                                      "null"
                                    ]
                                  }
                                }
                              }
                            },
                            "requiredDuringSchedulingIgnoredDuringExecution": {
                              "type": [
                                "array",
                                "null"
                              ],
                              "items": {
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "properties": {
                                  "labelSelector": {
                                    "type": [
                                      "object",
                                      "null"
                                    ],
                                    "properties": {
                                      "matchExpressions": {
                                        "type": [
                                          "array",
                                          "null"
                                        ],
                                        "items": {
                                          "type": [
                                            "object",
                                            "null"
                                          ],
                                          "properties": {
                                            "key": {
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            },
                                            "operator": {
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            },
                                            "values": {
                                              "type": [
                                                "array",
                                                "null"
                                              ],
                                              "items": {
                                                "type": [
                                                  "string",
                                                  "null"
                                                ]
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "matchLabels": {
                                        "type": [
                                          "object",
                                          "null"
                                        ],
                                        "additionalProperties": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        }
                                      }
                                    }
                                  },
                                  "matchLabelKeys": {
                                    "type": [
                                      "array",
                                      "null"
                                    ],
                                    "items": {
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    }
                                  },
                                  "mismatchLabelKeys": {
                                    "type": [
                                      "array",
                                      "null"
                                    ],
                                    "items": {
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    }
                                  },
                                  "namespaceSelector": {
                                    "type": [
                                      "object",
                                      "null"
                                    ],
                                    "properties": {
                                      "matchExpressions": {
                                        "type": [
                                          "array",
                                          "null"
                                        ],
                                        "items": {
                                          "type": [
                                            "object",
                                            "null"
                                          ],
                                          "properties": {
                                            "key": {
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            },
                                            "operator": {
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            },
                                            "values": {
                                              "type": [
                                                "array",
                                                "null"
                                              ],
                                              "items": {
                                                "type": [
                                                  "string",
                                                  "null"
                                                ]
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "matchLabels": {
                                        "type": [
                                          "object",
                                          "null"
                                        ],
                                        "additionalProperties": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        }
                                      }
                                    }
                                  },
                                  "namespaces": {
                                    "type": [
                                      "array",
                                      "null"
                                    ],
                                    "items": {
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    }
                                  },
                                  "topologyKey": {
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "dnsConfig": {
                      "description": "The pod's DNSConfig. If specified, it will be merged to the generated DNS configuration based on the DNSPolicy.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "nameservers": {
                          "type": [
                            "array",
                            "null"
                          ],
                          "items": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        },
                        "options": {
                          "type": [
                            "array",
                            "null"
                          ],
                          "items": {
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "name": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "value": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            }
                          }
                        },
                        "searches": {
                          "type": [
                            "array",
                            "null"
                          ],
                          "items": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        }
                      }
                    },
                    "dnsPolicy": {
                      "description": "The pod's DNSPolicy. Defaults to `ClusterFirst`. Valid values are `ClusterFirstWithHostNet`, `ClusterFirst`, `Default` or `None`.",
                      "type": [
                        "string",
                        "null"
                      ],
                      "enum": [
                        "ClusterFirst",
                        "ClusterFirstWithHostNet",
                        "Default",
                        "None"
                      ]
                    },
                    "enableServiceLinks": {
                      "description": "Indicates whether information about services should be injected into Pod's environment variables.",
                      "type": [
                        "boolean",
                        "null"
                      ]
                    },
                    "hostAliases": {
                      "description": "The pod's HostAliases. HostAliases is an optional list of hosts and IPs that will be injected into the Pod's hosts file if specified.",
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "hostnames": {
                            "type": [
                              "array",
                              "null"
                            ],
                            "items": {
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          },
                          "ip": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        }
                      }
                    },
                    "imagePullSecrets": {
                      "description": "List of references to secrets in the same namespace to use for pulling any of the images used by this Pod. When the `STRIMZI_IMAGE_PULL_SECRETS` environment variable in Cluster Operator and the `imagePullSecrets` option are specified, only the `imagePullSecrets` variable is used and the `STRIMZI_IMAGE_PULL_SECRETS` variable is ignored.",
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "name": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        }
                      }
                    },
                    "metadata": {
                      "description": "Metadata applied to the resource.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "annotations": {
                          "description": "Annotations added to the Kubernetes resource.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "additionalProperties": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        },
                        "labels": {
                          "description": "Labels added to the Kubernetes resource.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "additionalProperties": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        }
                      }
                    },
                    "priorityClassName": {
                      "description": "The name of the priority class used to assign priority to the pods. ",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "schedulerName": {
                      "description": "The name of the scheduler used to dispatch this `Pod`. If not specified, the default scheduler will be used.",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "securityContext": {
                      "description": "Configures pod-level security attributes and common container settings.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "appArmorProfile": {
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "localhostProfile": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "type": {
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          }
                        },
                        "fsGroup": {
                          "type": [
                            "integer",
                            "null"
                          ]
                        },
                        "fsGroupChangePolicy": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "runAsGroup": {
                          "type": [
                            "integer",
                            "null"
                          ]
                        },
                        "runAsNonRoot": {
                          "type": [
                            "boolean",
                            "null"
                          ]
                        },
                        "runAsUser": {
                          "type": [
                            "integer",
                            "null"
                          ]
                        },
                        "seLinuxChangePolicy": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "seLinuxOptions": {
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "level": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "role": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "type": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "user": {
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          }
                        },
                        "seccompProfile": {
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "localhostProfile": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "type": {
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          }
                        },
                        "supplementalGroups": {
                          "type": [
                            "array",
                            "null"
                          ],
                          "items": {
                            "type": [
                              "integer",
                              "null"
                            ]
                          }
                        },
                        "supplementalGroupsPolicy": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "sysctls": {
                          "type": [
                            "array",
                            "null"
                          ],
                          "items": {
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "name": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "value": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            }
                          }
                        },
                        "windowsOptions": {
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "gmsaCredentialSpec": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "gmsaCredentialSpecName": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "hostProcess": {
                              "type": [
                                "boolean",
                                "null"
                              ]
                            },
                            "runAsUserName": {
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          }
                        }
                      }
                    },
                    "terminationGracePeriodSeconds": {
                      "description": "The grace period is the duration in seconds after the processes running in the pod are sent a termination signal, and the time when the processes are forcibly halted with a kill signal. Set this value to longer than the expected cleanup time for your process. Value must be a non-negative integer. A zero value indicates delete immediately. You might need to increase the grace period for very large Kafka clusters, so that the Kafka brokers have enough time to transfer their work to another broker before they are terminated. Defaults to 30 seconds.",
                      "type": [
                        "integer",
                        "null"
                      ],
                      "minimum": 0
                    },
                    "tmpDirSizeLimit": {
                      "description": "Defines the total amount of pod memory allocated for the temporary `EmptyDir` volume `/tmp`. Specify the allocation in memory units, for example, `100Mi` for 100 mebibytes. Default value is `5Mi`. The `/tmp` volume is backed by pod memory, not disk storage, so avoid setting a high value as it consumes pod memory resources.",
                      "type": [
                        "string",
                        "null"
                      ],
                      "pattern": "^([0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$"
                    },
                    "tolerations": {
                      "description": "The pod's tolerations.",
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "effect": {
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "key": {
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "operator": {
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "tolerationSeconds": {
                            "type": [
                              "integer",
                              "null"
                            ]
                          },
                          "value": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        }
                      }
                    },
                    "topologySpreadConstraints": {
                      "description": "The pod's topology spread constraints.",
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "labelSelector": {
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "matchExpressions": {
                                "type": [
                                  "array",
                                  "null"
                                ],
                                "items": {
                                  "type": [
                                    "object",
                                    "null"
                                  ],
                                  "properties": {
                                    "key": {
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    },
                                    "operator": {
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    },
                                    "values": {
                                      "type": [
                                        "array",
                                        "null"
                                      ],
                                      "items": {
                                        "type": [
                                          "string",
                                          "null"
                                        ]
                                      }
                                    }
                                  }
                                }
                              },
                              "matchLabels": {
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "additionalProperties": {
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                }
                              }
                            }
                          },
                          "matchLabelKeys": {
                            "type": [
                              "array",
                              "null"
                            ],
                            "items": {
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          },
                          "maxSkew": {
                            "type": [
                              "integer",
                              "null"
                            ]
                          },
                          "minDomains": {
                            "type": [
                              "integer",
                              "null"
                            ]
                          },
                          "nodeAffinityPolicy": {
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "nodeTaintsPolicy": {
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "topologyKey": {
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "whenUnsatisfiable": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        }
                      }
                    },
                    "volumes": {
                      "description": "Additional volumes that can be mounted to the pod.",
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "configMap": {
                            "description": "`ConfigMap` to use to populate the volume.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "defaultMode": {
                                "type": [
                                  "integer",
                                  "null"
                                ]
                              },
                              "items": {
                                "type": [
                                  "array",
                                  "null"
                                ],
                                "items": {
                                  "type": [
                                    "object",
                                    "null"
                                  ],
                                  "properties": {
                                    "key": {
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    },
                                    "mode": {
                                      "type": [
                                        "integer",
                                        "null"
                                      ]
                                    },
                                    "path": {
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    }
                                  }
                                }
                              },
                              "name": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "optional": {
                                "type": [
                                  "boolean",
                                  "null"
                                ]
                              }
                            }
                          },
                          "csi": {
                            "description": "`CSIVolumeSource` object to use to populate the volume.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "driver": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "fsType": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "nodePublishSecretRef": {
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "properties": {
                                  "name": {
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  }
                                }
                              },
                              "readOnly": {
                                "type": [
                                  "boolean",
                                  "null"
                                ]
                              },
                              "volumeAttributes": {
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "additionalProperties": {
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                }
                              }
                            }
                          },
                          "emptyDir": {
                            "description": "`EmptyDir` to use to populate the volume.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "medium": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "sizeLimit": {
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "properties": {
                                  "amount": {
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "format": {
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  }
                                }
                              }
                            }
                          },
                          "image": {
                            "description": "`ImageVolumeSource` object to use to populate the volume.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "pullPolicy": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "reference": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            }
                          },
                          "name": {
                            "description": "Name to use for the volume. Required.",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "persistentVolumeClaim": {
                            "description": "`PersistentVolumeClaim` object to use to populate the volume.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "claimName": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "readOnly": {
                                "type": [
                                  "boolean",
                                  "null"
                                ]
                              }
                            }
                          },
                          "secret": {
                            "description": "`Secret` to use to populate the volume.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "defaultMode": {
                                "type": [
                                  "integer",
                                  "null"
                                ]
                              },
                              "items": {
                                "type": [
                                  "array",
                                  "null"
                                ],
                                "items": {
                                  "type": [
                                    "object",
                                    "null"
                                  ],
                                  "properties": {
                                    "key": {
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    },
                                    "mode": {
                                      "type": [
                                        "integer",
                                        "null"
                                      ]
                                    },
                                    "path": {
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    }
                                  }
                                }
                              },
                              "optional": {
                                "type": [
                                  "boolean",
                                  "null"
                                ]
                              },
                              "secretName": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "podDisruptionBudget": {
                  "description": "Template for ZooKeeper `PodDisruptionBudget`.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "maxUnavailable": {
                      "description": "Maximum number of unavailable pods to allow automatic Pod eviction. A Pod eviction is allowed when the `maxUnavailable` number of pods or fewer are unavailable after the eviction. Setting this value to 0 prevents all voluntary evictions, so the pods must be evicted manually. Defaults to 1.",
                      "type": [
                        "integer",
                        "null"
                      ],
                      "minimum": 0
                    },
                    "metadata": {
                      "description": "Metadata to apply to the `PodDisruptionBudgetTemplate` resource.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "annotations": {
                          "description": "Annotations added to the Kubernetes resource.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "additionalProperties": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        },
                        "labels": {
                          "description": "Labels added to the Kubernetes resource.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "additionalProperties": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "podSet": {
                  "description": "Template for ZooKeeper `StrimziPodSet` resource.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "metadata": {
                      "description": "Metadata applied to the resource.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "annotations": {
                          "description": "Annotations added to the Kubernetes resource.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "additionalProperties": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        },
                        "labels": {
                          "description": "Labels added to the Kubernetes resource.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "additionalProperties": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "serviceAccount": {
                  "description": "Template for the ZooKeeper service account.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "metadata": {
                      "description": "Metadata applied to the resource.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "annotations": {
                          "description": "Annotations added to the Kubernetes resource.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "additionalProperties": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        },
                        "labels": {
                          "description": "Labels added to the Kubernetes resource.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "additionalProperties": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "statefulset": {
                  "description": "Template for ZooKeeper `StatefulSet`.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "metadata": {
                      "description": "Metadata applied to the resource.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "annotations": {
                          "description": "Annotations added to the Kubernetes resource.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "additionalProperties": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        },
                        "labels": {
                          "description": "Labels added to the Kubernetes resource.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "additionalProperties": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        }
                      }
                    },
                    "podManagementPolicy": {
                      "description": "PodManagementPolicy which will be used for this StatefulSet. Valid values are `Parallel` and `OrderedReady`. Defaults to `Parallel`.",
                      "type": [
                        "string",
                        "null"
                      ],
                      "enum": [
                        "OrderedReady",
                        "Parallel"
                      ]
                    }
                  }
                },
                "zookeeperContainer": {
                  "description": "Template for the ZooKeeper container.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "env": {
                      "description": "Environment variables which should be applied to the container.",
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "name": {
                            "description": "The environment variable key.",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "value": {
                            "description": "The environment variable value.",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "valueFrom": {
                            "description": "Reference to the secret or config map property to which the environment variable is set.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "configMapKeyRef": {
                                "description": "Reference to a key in a config map.",
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "properties": {
                                  "key": {
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "name": {
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "optional": {
                                    "type": [
                                      "boolean",
                                      "null"
                                    ]
                                  }
                                }
                              },
                              "secretKeyRef": {
                                "description": "Reference to a key in a secret.",
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "properties": {
                                  "key": {
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "name": {
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "optional": {
                                    "type": [
                                      "boolean",
                                      "null"
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "securityContext": {
                      "description": "Security context for the container.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "allowPrivilegeEscalation": {
                          "type": [
                            "boolean",
                            "null"
                          ]
                        },
                        "appArmorProfile": {
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "localhostProfile": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "type": {
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          }
                        },
                        "capabilities": {
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "add": {
                              "type": [
                                "array",
                                "null"
                              ],
                              "items": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            },
                            "drop": {
                              "type": [
                                "array",
                                "null"
                              ],
                              "items": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            }
                          }
                        },
                        "privileged": {
                          "type": [
                            "boolean",
                            "null"
                          ]
                        },
                        "procMount": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "readOnlyRootFilesystem": {
                          "type": [
                            "boolean",
                            "null"
                          ]
                        },
                        "runAsGroup": {
                          "type": [
                            "integer",
                            "null"
                          ]
                        },
                        "runAsNonRoot": {
                          "type": [
                            "boolean",
                            "null"
                          ]
                        },
                        "runAsUser": {
                          "type": [
                            "integer",
                            "null"
                          ]
                        },
                        "seLinuxOptions": {
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "level": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "role": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "type": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "user": {
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          }
                        },
                        "seccompProfile": {
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "localhostProfile": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "type": {
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          }
                        },
                        "windowsOptions": {
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "gmsaCredentialSpec": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "gmsaCredentialSpecName": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "hostProcess": {
                              "type": [
                                "boolean",
                                "null"
                              ]
                            },
                            "runAsUserName": {
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          }
                        }
                      }
                    },
                    "volumeMounts": {
                      "description": "Additional volume mounts which should be applied to the container.",
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "mountPath": {
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "mountPropagation": {
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "name": {
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "readOnly": {
                            "type": [
                              "boolean",
                              "null"
                            ]
                          },
                          "recursiveReadOnly": {
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "subPath": {
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "subPathExpr": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "status": {
      "description": "The status of the Kafka cluster.",
      "type": [
        "object",
        "null"
      ],
      "properties": {
        "autoRebalance": {
          "description": "The status of an auto-rebalancing triggered by a cluster scaling request.",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "lastTransitionTime": {
              "description": "The timestamp of the latest auto-rebalancing state update.",
              "type": [
                "string",
                "null"
              ]
            },
            "modes": {
              "description": "List of modes where an auto-rebalancing operation is either running or queued. \nEach mode entry (`add-brokers` or `remove-brokers`) includes one of the following: \n\n* Broker IDs for a current auto-rebalance. \n* Broker IDs for a queued auto-rebalance (if a previous rebalance is still in progress).",
              "type": [
                "array",
                "null"
              ],
              "items": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "brokers": {
                    "description": "List of broker IDs involved in an auto-rebalancing operation related to the current mode. \nThe list contains one of the following: \n\n* Broker IDs for a current auto-rebalance. \n* Broker IDs for a queued auto-rebalance (if a previous auto-rebalance is still in progress). \n",
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": [
                        "integer",
                        "null"
                      ]
                    }
                  },
                  "mode": {
                    "description": "Mode for which there is an auto-rebalancing operation in progress or queued, when brokers are added or removed. The possible modes are `add-brokers` and `remove-brokers`.",
                    "type": [
                      "string",
                      "null"
                    ],
                    "enum": [
                      "add-brokers",
                      "remove-brokers"
                    ]
                  }
                }
              }
            },
            "state": {
              "description": "The current state of an auto-rebalancing operation. Possible values are: \n\n* `Idle` as the initial state when an auto-rebalancing is requested or as final state when it completes or fails.\n* `RebalanceOnScaleDown` if an auto-rebalance related to a scale-down operation is running.\n* `RebalanceOnScaleUp` if an auto-rebalance related to a scale-up operation is running.",
              "type": [
                "string",
                "null"
              ],
              "enum": [
                "Idle",
                "RebalanceOnScaleDown",
                "RebalanceOnScaleUp"
              ]
            }
          }
        },
        "clusterId": {
          "description": "Kafka cluster Id.",
          "type": [
            "string",
            "null"
          ]
        },
        "conditions": {
          "description": "List of status conditions.",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "type": [
              "object",
              "null"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "Last time the condition of a type changed from one status to another. The required format is 'yyyy-MM-ddTHH:mm:ssZ', in the UTC time zone.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "message": {
                "description": "Human-readable message indicating details about the condition's last transition.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "reason": {
                "description": "The reason for the condition's last transition (a single word in CamelCase).",
                "type": [
                  "string",
                  "null"
                ]
              },
              "status": {
                "description": "The status of the condition, either True, False or Unknown.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "type": {
                "description": "The unique identifier of a condition, used to distinguish between other conditions in the resource.",
                "type": [
                  "string",
                  "null"
                ]
              }
            }
          }
        },
        "kafkaMetadataState": {
          "description": "Defines where cluster metadata are stored. Since Kafka KRaft has been fully adopted, the only applicable value is `KRaft`.",
          "type": [
            "string",
            "null"
          ],
          "enum": [
            "ZooKeeper",
            "KRaftMigration",
            "KRaftDualWriting",
            "KRaftPostMigration",
            "PreKRaft",
            "KRaft"
          ]
        },
        "kafkaMetadataVersion": {
          "description": "The KRaft metadata.version currently used by the Kafka cluster.",
          "type": [
            "string",
            "null"
          ]
        },
        "kafkaNodePools": {
          "description": "List of the KafkaNodePools used by this Kafka cluster.",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "type": [
              "object",
              "null"
            ],
            "properties": {
              "name": {
                "description": "The name of the KafkaNodePool used by this Kafka resource.",
                "type": [
                  "string",
                  "null"
                ]
              }
            }
          }
        },
        "kafkaVersion": {
          "description": "The version of Kafka currently deployed in the cluster.",
          "type": [
            "string",
            "null"
          ]
        },
        "listeners": {
          "description": "Addresses of the internal and external listeners.",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "type": [
              "object",
              "null"
            ],
            "properties": {
              "addresses": {
                "description": "A list of the addresses for this listener.",
                "type": [
                  "array",
                  "null"
                ],
                "items": {
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "host": {
                      "description": "The DNS name or IP address of the Kafka bootstrap service.",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "port": {
                      "description": "The port of the Kafka bootstrap service.",
                      "type": [
                        "integer",
                        "null"
                      ]
                    }
                  }
                }
              },
              "bootstrapServers": {
                "description": "A comma-separated list of `host:port` pairs for connecting to the Kafka cluster using this listener.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "certificates": {
                "description": "A list of TLS certificates which can be used to verify the identity of the server when connecting to the given listener. Set only for `tls` and `external` listeners.",
                "type": [
                  "array",
                  "null"
                ],
                "items": {
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "name": {
                "description": "The name of the listener.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "type": {
                "description": "The name of the listener.",
                "type": [
                  "string",
                  "null"
                ]
              }
            }
          }
        },
        "observedGeneration": {
          "description": "The generation of the CRD that was last reconciled by the operator.",
          "type": [
            "integer",
            "null"
          ]
        },
        "operatorLastSuccessfulVersion": {
          "description": "The version of the Strimzi Cluster Operator which performed the last successful reconciliation.",
          "type": [
            "string",
            "null"
          ]
        },
        "registeredNodeIds": {
          "description": "Registered node IDs used by this Kafka cluster. This field is used for internal purposes only and will be removed in the future.",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "type": [
              "integer",
              "null"
            ]
          }
        }
      }
    }
  },
  "x-kubernetes-group-version-kind": [
    {
      "group": "kafka.strimzi.io",
      "kind": "Kafka",
      "version": "v1beta2"
    }
  ],
  "$schema": "http://json-schema.org/schema#"
}