{
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": [
        "string",
        "null"
      ],
      "enum": [
        "networking.istio.io/v1alpha3"
      ]
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": [
        "string",
        "null"
      ],
      "enum": [
        "Sidecar"
      ]
    },
    "metadata": {
      "description": "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.",
      "type": [
        "object",
        "null"
      ],
      "properties": {
        "annotations": {
          "description": "Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations",
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "creationTimestamp": {
          "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.",
          "type": [
            "string",
            "null"
          ],
          "format": "date-time"
        },
        "deletionGracePeriodSeconds": {
          "description": "Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.",
          "type": [
            "integer",
            "null"
          ],
          "format": "int64"
        },
        "deletionTimestamp": {
          "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.",
          "type": [
            "string",
            "null"
          ],
          "format": "date-time"
        },
        "finalizers": {
          "description": "Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "type": [
              "string",
              "null"
            ]
          },
          "x-kubernetes-list-type": "set",
          "x-kubernetes-patch-strategy": "merge"
        },
        "generateName": {
          "description": "GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\n\nIf this field is specified and the generated name exists, the server will return a 409.\n\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency",
          "type": [
            "string",
            "null"
          ]
        },
        "generation": {
          "description": "A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.",
          "type": [
            "integer",
            "null"
          ],
          "format": "int64"
        },
        "labels": {
          "description": "Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels",
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "managedFields": {
          "description": "ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn't need to set or understand this field. A workflow can be the user's name, a controller's name, or the name of a specific apply path like \"ci-cd\". The set of fields is always in the version that the workflow used when modifying the object.",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "description": "ManagedFieldsEntry is a workflow-id, a FieldSet and the group version of the resource that the fieldset applies to.",
            "type": [
              "object",
              "null"
            ],
            "properties": {
              "apiVersion": {
                "description": "APIVersion defines the version of this resource that this field set applies to. The format is \"group/version\" just like the top-level APIVersion field. It is necessary to track the version of a field set because it cannot be automatically converted.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "fieldsType": {
                "description": "FieldsType is the discriminator for the different fields format and version. There is currently only one possible value: \"FieldsV1\"",
                "type": [
                  "string",
                  "null"
                ]
              },
              "fieldsV1": {
                "description": "FieldsV1 stores a set of fields in a data structure like a Trie, in JSON format.\n\nEach key is either a '.' representing the field itself, and will always map to an empty set, or a string representing a sub-field or item. The string will follow one of these four formats: 'f:<name>', where <name> is the name of a field in a struct, or key in a map 'v:<value>', where <value> is the exact json formatted value of a list item 'i:<index>', where <index> is position of a item in a list 'k:<keys>', where <keys> is a map of  a list item's key fields to their unique values If a key maps to an empty Fields value, the field that key represents is part of the set.\n\nThe exact format is defined in sigs.k8s.io/structured-merge-diff",
                "type": [
                  "object",
                  "null"
                ]
              },
              "manager": {
                "description": "Manager is an identifier of the workflow managing these fields.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "operation": {
                "description": "Operation is the type of operation which lead to this ManagedFieldsEntry being created. The only valid values for this field are 'Apply' and 'Update'.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "subresource": {
                "description": "Subresource is the name of the subresource used to update that object, or empty string if the object was updated through the main resource. The value of this field is used to distinguish between managers, even if they share the same name. For example, a status update will be distinct from a regular update using the same manager name. Note that the APIVersion field is not related to the Subresource field and it always corresponds to the version of the main resource.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "time": {
                "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.",
                "type": [
                  "string",
                  "null"
                ],
                "format": "date-time"
              }
            }
          },
          "x-kubernetes-list-type": "atomic"
        },
        "name": {
          "description": "Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names",
          "type": [
            "string",
            "null"
          ]
        },
        "namespace": {
          "description": "Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \"default\" namespace, but \"default\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\n\nMust be a DNS_LABEL. Cannot be updated. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces",
          "type": [
            "string",
            "null"
          ]
        },
        "ownerReferences": {
          "description": "List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "description": "OwnerReference contains enough information to let you identify an owning object. An owning object must be in the same namespace as the dependent, or be cluster-scoped, so there is no namespace field.",
            "type": [
              "object",
              "null"
            ],
            "required": [
              "apiVersion",
              "kind",
              "name",
              "uid"
            ],
            "properties": {
              "apiVersion": {
                "description": "API version of the referent.",
                "type": "string"
              },
              "blockOwnerDeletion": {
                "description": "If true, AND if the owner has the \"foregroundDeletion\" finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. See https://kubernetes.io/docs/concepts/architecture/garbage-collection/#foreground-deletion for how the garbage collector interacts with this field and enforces the foreground deletion. Defaults to false. To set this field, a user needs \"delete\" permission of the owner, otherwise 422 (Unprocessable Entity) will be returned.",
                "type": [
                  "boolean",
                  "null"
                ]
              },
              "controller": {
                "description": "If true, this reference points to the managing controller.",
                "type": [
                  "boolean",
                  "null"
                ]
              },
              "kind": {
                "description": "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                "type": "string"
              },
              "name": {
                "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names",
                "type": "string"
              },
              "uid": {
                "description": "UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids",
                "type": "string"
              }
            },
            "x-kubernetes-map-type": "atomic"
          },
          "x-kubernetes-list-map-keys": [
            "uid"
          ],
          "x-kubernetes-list-type": "map",
          "x-kubernetes-patch-merge-key": "uid",
          "x-kubernetes-patch-strategy": "merge"
        },
        "resourceVersion": {
          "description": "An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\n\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
          "type": [
            "string",
            "null"
          ]
        },
        "selfLink": {
          "description": "Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.",
          "type": [
            "string",
            "null"
          ]
        },
        "uid": {
          "description": "UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\n\nPopulated by the system. Read-only. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids",
          "type": [
            "string",
            "null"
          ]
        }
      }
    },
    "spec": {
      "description": "Configuration affecting network reachability of a sidecar. See more details at: https://istio.io/docs/reference/config/networking/sidecar.html",
      "type": [
        "object",
        "null"
      ],
      "properties": {
        "egress": {
          "description": "Egress specifies the configuration of the sidecar for processing outbound traffic from the attached workload instance to other services in the mesh.",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "type": [
              "object",
              "null"
            ],
            "required": [
              "hosts"
            ],
            "properties": {
              "bind": {
                "description": "The IP(IPv4 or IPv6) or the Unix domain socket to which the listener should be bound to.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "captureMode": {
                "description": "When the bind address is an IP, the captureMode option dictates how traffic to the listener is expected to be captured (or not).\n\nValid Options: DEFAULT, IPTABLES, NONE",
                "type": [
                  "string",
                  "null"
                ],
                "enum": [
                  "DEFAULT",
                  "IPTABLES",
                  "NONE"
                ]
              },
              "hosts": {
                "description": "One or more service hosts exposed by the listener in `namespace/dnsName` format.",
                "type": "array",
                "items": {
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "port": {
                "description": "The port associated with the listener.",
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "name": {
                    "description": "Label assigned to the port.",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "number": {
                    "description": "A valid non-negative integer port number.",
                    "type": [
                      "integer",
                      "null"
                    ],
                    "maximum": 4294967295,
                    "minimum": 0
                  },
                  "protocol": {
                    "description": "The protocol exposed on the port.",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "targetPort": {
                    "type": [
                      "integer",
                      "null"
                    ],
                    "maximum": 4294967295,
                    "minimum": 0
                  }
                }
              }
            }
          }
        },
        "inboundConnectionPool": {
          "description": "Settings controlling the volume of connections Envoy will accept from the network.",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "http": {
              "description": "HTTP connection pool settings.",
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "h2UpgradePolicy": {
                  "description": "Specify if http1.1 connection should be upgraded to http2 for the associated destination.\n\nValid Options: DEFAULT, DO_NOT_UPGRADE, UPGRADE",
                  "type": [
                    "string",
                    "null"
                  ],
                  "enum": [
                    "DEFAULT",
                    "DO_NOT_UPGRADE",
                    "UPGRADE"
                  ]
                },
                "http1MaxPendingRequests": {
                  "description": "Maximum number of requests that will be queued while waiting for a ready connection pool connection.",
                  "type": [
                    "integer",
                    "null"
                  ],
                  "format": "int32"
                },
                "http2MaxRequests": {
                  "description": "Maximum number of active requests to a destination.",
                  "type": [
                    "integer",
                    "null"
                  ],
                  "format": "int32"
                },
                "idleTimeout": {
                  "description": "The idle timeout for upstream connection pool connections.",
                  "type": [
                    "string",
                    "null"
                  ],
                  "x-kubernetes-validations": [
                    {
                      "message": "must be a valid duration greater than 1ms",
                      "rule": "duration(self) >= duration('1ms')"
                    }
                  ]
                },
                "maxConcurrentStreams": {
                  "description": "The maximum number of concurrent streams allowed for a peer on one HTTP/2 connection.",
                  "type": [
                    "integer",
                    "null"
                  ],
                  "format": "int32"
                },
                "maxRequestsPerConnection": {
                  "description": "Maximum number of requests per connection to a backend.",
                  "type": [
                    "integer",
                    "null"
                  ],
                  "format": "int32"
                },
                "maxRetries": {
                  "description": "Maximum number of retries that can be outstanding to all hosts in a cluster at a given time.",
                  "type": [
                    "integer",
                    "null"
                  ],
                  "format": "int32"
                },
                "useClientProtocol": {
                  "description": "If set to true, client protocol will be preserved while initiating connection to backend.",
                  "type": [
                    "boolean",
                    "null"
                  ]
                }
              }
            },
            "tcp": {
              "description": "Settings common to both HTTP and TCP upstream connections.",
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "connectTimeout": {
                  "description": "TCP connection timeout.",
                  "type": [
                    "string",
                    "null"
                  ],
                  "x-kubernetes-validations": [
                    {
                      "message": "must be a valid duration greater than 1ms",
                      "rule": "duration(self) >= duration('1ms')"
                    }
                  ]
                },
                "idleTimeout": {
                  "description": "The idle timeout for TCP connections.",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "maxConnectionDuration": {
                  "description": "The maximum duration of a connection.",
                  "type": [
                    "string",
                    "null"
                  ],
                  "x-kubernetes-validations": [
                    {
                      "message": "must be a valid duration greater than 1ms",
                      "rule": "duration(self) >= duration('1ms')"
                    }
                  ]
                },
                "maxConnections": {
                  "description": "Maximum number of HTTP1 /TCP connections to a destination host.",
                  "type": [
                    "integer",
                    "null"
                  ],
                  "format": "int32"
                },
                "tcpKeepalive": {
                  "description": "If set then set SO_KEEPALIVE on the socket to enable TCP Keepalives.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "interval": {
                      "description": "The time duration between keep-alive probes.",
                      "type": [
                        "string",
                        "null"
                      ],
                      "x-kubernetes-validations": [
                        {
                          "message": "must be a valid duration greater than 1ms",
                          "rule": "duration(self) >= duration('1ms')"
                        }
                      ]
                    },
                    "probes": {
                      "description": "Maximum number of keepalive probes to send without response before deciding the connection is dead.",
                      "type": [
                        "integer",
                        "null"
                      ],
                      "maximum": 4294967295,
                      "minimum": 0
                    },
                    "time": {
                      "description": "The time duration a connection needs to be idle before keep-alive probes start being sent.",
                      "type": [
                        "string",
                        "null"
                      ],
                      "x-kubernetes-validations": [
                        {
                          "message": "must be a valid duration greater than 1ms",
                          "rule": "duration(self) >= duration('1ms')"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "ingress": {
          "description": "Ingress specifies the configuration of the sidecar for processing inbound traffic to the attached workload instance.",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "type": [
              "object",
              "null"
            ],
            "required": [
              "port"
            ],
            "properties": {
              "bind": {
                "description": "The IP(IPv4 or IPv6) to which the listener should be bound.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "captureMode": {
                "description": "The captureMode option dictates how traffic to the listener is expected to be captured (or not).\n\nValid Options: DEFAULT, IPTABLES, NONE",
                "type": [
                  "string",
                  "null"
                ],
                "enum": [
                  "DEFAULT",
                  "IPTABLES",
                  "NONE"
                ]
              },
              "connectionPool": {
                "description": "Settings controlling the volume of connections Envoy will accept from the network.",
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "http": {
                    "description": "HTTP connection pool settings.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "properties": {
                      "h2UpgradePolicy": {
                        "description": "Specify if http1.1 connection should be upgraded to http2 for the associated destination.\n\nValid Options: DEFAULT, DO_NOT_UPGRADE, UPGRADE",
                        "type": [
                          "string",
                          "null"
                        ],
                        "enum": [
                          "DEFAULT",
                          "DO_NOT_UPGRADE",
                          "UPGRADE"
                        ]
                      },
                      "http1MaxPendingRequests": {
                        "description": "Maximum number of requests that will be queued while waiting for a ready connection pool connection.",
                        "type": [
                          "integer",
                          "null"
                        ],
                        "format": "int32"
                      },
                      "http2MaxRequests": {
                        "description": "Maximum number of active requests to a destination.",
                        "type": [
                          "integer",
                          "null"
                        ],
                        "format": "int32"
                      },
                      "idleTimeout": {
                        "description": "The idle timeout for upstream connection pool connections.",
                        "type": [
                          "string",
                          "null"
                        ],
                        "x-kubernetes-validations": [
                          {
                            "message": "must be a valid duration greater than 1ms",
                            "rule": "duration(self) >= duration('1ms')"
                          }
                        ]
                      },
                      "maxConcurrentStreams": {
                        "description": "The maximum number of concurrent streams allowed for a peer on one HTTP/2 connection.",
                        "type": [
                          "integer",
                          "null"
                        ],
                        "format": "int32"
                      },
                      "maxRequestsPerConnection": {
                        "description": "Maximum number of requests per connection to a backend.",
                        "type": [
                          "integer",
                          "null"
                        ],
                        "format": "int32"
                      },
                      "maxRetries": {
                        "description": "Maximum number of retries that can be outstanding to all hosts in a cluster at a given time.",
                        "type": [
                          "integer",
                          "null"
                        ],
                        "format": "int32"
                      },
                      "useClientProtocol": {
                        "description": "If set to true, client protocol will be preserved while initiating connection to backend.",
                        "type": [
                          "boolean",
                          "null"
                        ]
                      }
                    }
                  },
                  "tcp": {
                    "description": "Settings common to both HTTP and TCP upstream connections.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "properties": {
                      "connectTimeout": {
                        "description": "TCP connection timeout.",
                        "type": [
                          "string",
                          "null"
                        ],
                        "x-kubernetes-validations": [
                          {
                            "message": "must be a valid duration greater than 1ms",
                            "rule": "duration(self) >= duration('1ms')"
                          }
                        ]
                      },
                      "idleTimeout": {
                        "description": "The idle timeout for TCP connections.",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "maxConnectionDuration": {
                        "description": "The maximum duration of a connection.",
                        "type": [
                          "string",
                          "null"
                        ],
                        "x-kubernetes-validations": [
                          {
                            "message": "must be a valid duration greater than 1ms",
                            "rule": "duration(self) >= duration('1ms')"
                          }
                        ]
                      },
                      "maxConnections": {
                        "description": "Maximum number of HTTP1 /TCP connections to a destination host.",
                        "type": [
                          "integer",
                          "null"
                        ],
                        "format": "int32"
                      },
                      "tcpKeepalive": {
                        "description": "If set then set SO_KEEPALIVE on the socket to enable TCP Keepalives.",
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "interval": {
                            "description": "The time duration between keep-alive probes.",
                            "type": [
                              "string",
                              "null"
                            ],
                            "x-kubernetes-validations": [
                              {
                                "message": "must be a valid duration greater than 1ms",
                                "rule": "duration(self) >= duration('1ms')"
                              }
                            ]
                          },
                          "probes": {
                            "description": "Maximum number of keepalive probes to send without response before deciding the connection is dead.",
                            "type": [
                              "integer",
                              "null"
                            ],
                            "maximum": 4294967295,
                            "minimum": 0
                          },
                          "time": {
                            "description": "The time duration a connection needs to be idle before keep-alive probes start being sent.",
                            "type": [
                              "string",
                              "null"
                            ],
                            "x-kubernetes-validations": [
                              {
                                "message": "must be a valid duration greater than 1ms",
                                "rule": "duration(self) >= duration('1ms')"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              },
              "defaultEndpoint": {
                "description": "The IP endpoint or Unix domain socket to which traffic should be forwarded to.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "port": {
                "description": "The port associated with the listener.",
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Label assigned to the port.",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "number": {
                    "description": "A valid non-negative integer port number.",
                    "type": [
                      "integer",
                      "null"
                    ],
                    "maximum": 4294967295,
                    "minimum": 0
                  },
                  "protocol": {
                    "description": "The protocol exposed on the port.",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "targetPort": {
                    "type": [
                      "integer",
                      "null"
                    ],
                    "maximum": 4294967295,
                    "minimum": 0
                  }
                }
              },
              "tls": {
                "description": "Set of TLS related options that will enable TLS termination on the sidecar for requests originating from outside the mesh.",
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "caCertificates": {
                    "description": "REQUIRED if mode is `MUTUAL` or `OPTIONAL_MUTUAL`.",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "caCrl": {
                    "description": "OPTIONAL: The path to the file containing the certificate revocation list (CRL) to use in verifying a presented client side certificate.",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "cipherSuites": {
                    "description": "Optional: If specified, only support the specified cipher list.",
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  },
                  "credentialName": {
                    "description": "For gateways running on Kubernetes, the name of the secret that holds the TLS certs including the CA certificates.",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "credentialNames": {
                    "description": "Same as CredentialName but for multiple certificates.",
                    "type": [
                      "array",
                      "null"
                    ],
                    "maxItems": 2,
                    "minItems": 1,
                    "items": {
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  },
                  "httpsRedirect": {
                    "description": "If set to true, the load balancer will send a 301 redirect for all http connections, asking the clients to use HTTPS.",
                    "type": [
                      "boolean",
                      "null"
                    ]
                  },
                  "maxProtocolVersion": {
                    "description": "Optional: Maximum TLS protocol version.\n\nValid Options: TLS_AUTO, TLSV1_0, TLSV1_1, TLSV1_2, TLSV1_3",
                    "type": [
                      "string",
                      "null"
                    ],
                    "enum": [
                      "TLS_AUTO",
                      "TLSV1_0",
                      "TLSV1_1",
                      "TLSV1_2",
                      "TLSV1_3"
                    ]
                  },
                  "minProtocolVersion": {
                    "description": "Optional: Minimum TLS protocol version.\n\nValid Options: TLS_AUTO, TLSV1_0, TLSV1_1, TLSV1_2, TLSV1_3",
                    "type": [
                      "string",
                      "null"
                    ],
                    "enum": [
                      "TLS_AUTO",
                      "TLSV1_0",
                      "TLSV1_1",
                      "TLSV1_2",
                      "TLSV1_3"
                    ]
                  },
                  "mode": {
                    "description": "Optional: Indicates whether connections to this port should be secured using TLS.\n\nValid Options: PASSTHROUGH, SIMPLE, MUTUAL, AUTO_PASSTHROUGH, ISTIO_MUTUAL, OPTIONAL_MUTUAL",
                    "type": [
                      "string",
                      "null"
                    ],
                    "enum": [
                      "PASSTHROUGH",
                      "SIMPLE",
                      "MUTUAL",
                      "AUTO_PASSTHROUGH",
                      "ISTIO_MUTUAL",
                      "OPTIONAL_MUTUAL"
                    ]
                  },
                  "privateKey": {
                    "description": "REQUIRED if mode is `SIMPLE` or `MUTUAL`.",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "serverCertificate": {
                    "description": "REQUIRED if mode is `SIMPLE` or `MUTUAL`.",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "subjectAltNames": {
                    "description": "A list of alternate names to verify the subject identity in the certificate presented by the client.",
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  },
                  "tlsCertificates": {
                    "description": "Only one of `server_certificate`, `private_key` or `credential_name` or `credential_names` or `tls_certificates` should be specified.",
                    "type": [
                      "array",
                      "null"
                    ],
                    "maxItems": 2,
                    "minItems": 1,
                    "items": {
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "caCertificates": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "privateKey": {
                          "description": "REQUIRED if mode is `SIMPLE` or `MUTUAL`.",
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "serverCertificate": {
                          "description": "REQUIRED if mode is `SIMPLE` or `MUTUAL`.",
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      }
                    }
                  },
                  "verifyCertificateHash": {
                    "description": "An optional list of hex-encoded SHA-256 hashes of the authorized client certificates.",
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  },
                  "verifyCertificateSpki": {
                    "description": "An optional list of base64-encoded SHA-256 hashes of the SPKIs of authorized client certificates.",
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  }
                },
                "x-kubernetes-validations": [
                  {
                    "message": "only one of credentialNames or tlsCertificates can be set",
                    "rule": "(has(self.tlsCertificates) ? 1 : 0) + (has(self.credentialNames) ? 1 : 0) <= 1"
                  },
                  {
                    "message": "only one of credentialName or credentialNames can be set",
                    "rule": "(has(self.credentialName) ? 1 : 0) + (has(self.credentialNames) ? 1 : 0) <= 1"
                  },
                  {
                    "message": "only one of credentialName or tlsCertificates can be set",
                    "rule": "(has(self.credentialNames) ? 1 : 0) + (has(self.tlsCertificates) ? 1 : 0) <= 1"
                  }
                ]
              }
            }
          }
        },
        "outboundTrafficPolicy": {
          "description": "Set the default behavior of the sidecar for handling outbound traffic from the application.",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "egressProxy": {
              "type": [
                "object",
                "null"
              ],
              "required": [
                "host"
              ],
              "properties": {
                "host": {
                  "description": "The name of a service from the service registry.",
                  "type": "string"
                },
                "port": {
                  "description": "Specifies the port on the host that is being addressed.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "number": {
                      "type": [
                        "integer",
                        "null"
                      ],
                      "maximum": 4294967295,
                      "minimum": 0
                    }
                  }
                },
                "subset": {
                  "description": "The name of a subset within the service.",
                  "type": [
                    "string",
                    "null"
                  ]
                }
              }
            },
            "mode": {
              "description": "\n\nValid Options: REGISTRY_ONLY, ALLOW_ANY",
              "type": [
                "string",
                "null"
              ],
              "enum": [
                "REGISTRY_ONLY",
                "ALLOW_ANY"
              ]
            }
          }
        },
        "workloadSelector": {
          "description": "Criteria used to select the specific set of pods/VMs on which this `Sidecar` configuration should be applied.",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "labels": {
              "description": "One or more labels that indicate a specific set of pods/VMs on which the configuration should be applied.",
              "type": [
                "object",
                "null"
              ],
              "maxProperties": 256,
              "additionalProperties": {
                "type": [
                  "string",
                  "null"
                ],
                "maxLength": 63,
                "x-kubernetes-validations": [
                  {
                    "message": "wildcard is not supported in selector",
                    "rule": "!self.contains(\"*\")"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "status": {
      "x-kubernetes-preserve-unknown-fields": true
    }
  },
  "x-kubernetes-group-version-kind": [
    {
      "group": "networking.istio.io",
      "kind": "Sidecar",
      "version": "v1alpha3"
    }
  ],
  "$schema": "http://json-schema.org/schema#"
}