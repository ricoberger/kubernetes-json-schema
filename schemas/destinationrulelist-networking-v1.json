{
  "description": "DestinationRuleList is a list of DestinationRule",
  "type": "object",
  "required": [
    "items"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": [
        "string",
        "null"
      ],
      "enum": [
        "networking.istio.io/v1"
      ]
    },
    "items": {
      "description": "List of destinationrules. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md",
      "type": [
        "array",
        "null"
      ],
      "items": {
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "apiVersion": {
            "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type": [
              "string",
              "null"
            ],
            "enum": [
              "networking.istio.io/v1"
            ]
          },
          "kind": {
            "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type": [
              "string",
              "null"
            ],
            "enum": [
              "DestinationRule"
            ]
          },
          "metadata": {
            "description": "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.",
            "type": [
              "object",
              "null"
            ],
            "properties": {
              "annotations": {
                "description": "Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations",
                "type": [
                  "object",
                  "null"
                ],
                "additionalProperties": {
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "creationTimestamp": {
                "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.",
                "type": [
                  "string",
                  "null"
                ],
                "format": "date-time"
              },
              "deletionGracePeriodSeconds": {
                "description": "Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.",
                "type": [
                  "integer",
                  "null"
                ],
                "format": "int64"
              },
              "deletionTimestamp": {
                "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.",
                "type": [
                  "string",
                  "null"
                ],
                "format": "date-time"
              },
              "finalizers": {
                "description": "Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.",
                "type": [
                  "array",
                  "null"
                ],
                "items": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "x-kubernetes-list-type": "set",
                "x-kubernetes-patch-strategy": "merge"
              },
              "generateName": {
                "description": "GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\n\nIf this field is specified and the generated name exists, the server will return a 409.\n\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency",
                "type": [
                  "string",
                  "null"
                ]
              },
              "generation": {
                "description": "A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.",
                "type": [
                  "integer",
                  "null"
                ],
                "format": "int64"
              },
              "labels": {
                "description": "Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels",
                "type": [
                  "object",
                  "null"
                ],
                "additionalProperties": {
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "managedFields": {
                "description": "ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn't need to set or understand this field. A workflow can be the user's name, a controller's name, or the name of a specific apply path like \"ci-cd\". The set of fields is always in the version that the workflow used when modifying the object.",
                "type": [
                  "array",
                  "null"
                ],
                "items": {
                  "description": "ManagedFieldsEntry is a workflow-id, a FieldSet and the group version of the resource that the fieldset applies to.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "apiVersion": {
                      "description": "APIVersion defines the version of this resource that this field set applies to. The format is \"group/version\" just like the top-level APIVersion field. It is necessary to track the version of a field set because it cannot be automatically converted.",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "fieldsType": {
                      "description": "FieldsType is the discriminator for the different fields format and version. There is currently only one possible value: \"FieldsV1\"",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "fieldsV1": {
                      "description": "FieldsV1 stores a set of fields in a data structure like a Trie, in JSON format.\n\nEach key is either a '.' representing the field itself, and will always map to an empty set, or a string representing a sub-field or item. The string will follow one of these four formats: 'f:<name>', where <name> is the name of a field in a struct, or key in a map 'v:<value>', where <value> is the exact json formatted value of a list item 'i:<index>', where <index> is position of a item in a list 'k:<keys>', where <keys> is a map of  a list item's key fields to their unique values If a key maps to an empty Fields value, the field that key represents is part of the set.\n\nThe exact format is defined in sigs.k8s.io/structured-merge-diff",
                      "type": [
                        "object",
                        "null"
                      ]
                    },
                    "manager": {
                      "description": "Manager is an identifier of the workflow managing these fields.",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "operation": {
                      "description": "Operation is the type of operation which lead to this ManagedFieldsEntry being created. The only valid values for this field are 'Apply' and 'Update'.",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "subresource": {
                      "description": "Subresource is the name of the subresource used to update that object, or empty string if the object was updated through the main resource. The value of this field is used to distinguish between managers, even if they share the same name. For example, a status update will be distinct from a regular update using the same manager name. Note that the APIVersion field is not related to the Subresource field and it always corresponds to the version of the main resource.",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "time": {
                      "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.",
                      "type": [
                        "string",
                        "null"
                      ],
                      "format": "date-time"
                    }
                  }
                },
                "x-kubernetes-list-type": "atomic"
              },
              "name": {
                "description": "Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names",
                "type": [
                  "string",
                  "null"
                ]
              },
              "namespace": {
                "description": "Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \"default\" namespace, but \"default\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\n\nMust be a DNS_LABEL. Cannot be updated. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces",
                "type": [
                  "string",
                  "null"
                ]
              },
              "ownerReferences": {
                "description": "List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.",
                "type": [
                  "array",
                  "null"
                ],
                "items": {
                  "description": "OwnerReference contains enough information to let you identify an owning object. An owning object must be in the same namespace as the dependent, or be cluster-scoped, so there is no namespace field.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "required": [
                    "apiVersion",
                    "kind",
                    "name",
                    "uid"
                  ],
                  "properties": {
                    "apiVersion": {
                      "description": "API version of the referent.",
                      "type": "string"
                    },
                    "blockOwnerDeletion": {
                      "description": "If true, AND if the owner has the \"foregroundDeletion\" finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. See https://kubernetes.io/docs/concepts/architecture/garbage-collection/#foreground-deletion for how the garbage collector interacts with this field and enforces the foreground deletion. Defaults to false. To set this field, a user needs \"delete\" permission of the owner, otherwise 422 (Unprocessable Entity) will be returned.",
                      "type": [
                        "boolean",
                        "null"
                      ]
                    },
                    "controller": {
                      "description": "If true, this reference points to the managing controller.",
                      "type": [
                        "boolean",
                        "null"
                      ]
                    },
                    "kind": {
                      "description": "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names",
                      "type": "string"
                    },
                    "uid": {
                      "description": "UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids",
                      "type": "string"
                    }
                  },
                  "x-kubernetes-map-type": "atomic"
                },
                "x-kubernetes-list-map-keys": [
                  "uid"
                ],
                "x-kubernetes-list-type": "map",
                "x-kubernetes-patch-merge-key": "uid",
                "x-kubernetes-patch-strategy": "merge"
              },
              "resourceVersion": {
                "description": "An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\n\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                "type": [
                  "string",
                  "null"
                ]
              },
              "selfLink": {
                "description": "Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "uid": {
                "description": "UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\n\nPopulated by the system. Read-only. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids",
                "type": [
                  "string",
                  "null"
                ]
              }
            }
          },
          "spec": {
            "description": "Configuration affecting load balancing, outlier detection, etc. See more details at: https://istio.io/docs/reference/config/networking/destination-rule.html",
            "type": [
              "object",
              "null"
            ],
            "required": [
              "host"
            ],
            "properties": {
              "exportTo": {
                "description": "A list of namespaces to which this destination rule is exported.",
                "type": [
                  "array",
                  "null"
                ],
                "items": {
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "host": {
                "description": "The name of a service from the service registry.",
                "type": "string"
              },
              "subsets": {
                "description": "One or more named sets that represent individual versions of a service.",
                "type": [
                  "array",
                  "null"
                ],
                "items": {
                  "type": [
                    "object",
                    "null"
                  ],
                  "required": [
                    "name"
                  ],
                  "properties": {
                    "labels": {
                      "description": "Labels apply a filter over the endpoints of a service in the service registry.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "additionalProperties": {
                        "type": [
                          "string",
                          "null"
                        ]
                      }
                    },
                    "name": {
                      "description": "Name of the subset.",
                      "type": "string"
                    },
                    "trafficPolicy": {
                      "description": "Traffic policies that apply to this subset.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "connectionPool": {
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "http": {
                              "description": "HTTP connection pool settings.",
                              "type": [
                                "object",
                                "null"
                              ],
                              "properties": {
                                "h2UpgradePolicy": {
                                  "description": "Specify if http1.1 connection should be upgraded to http2 for the associated destination.\n\nValid Options: DEFAULT, DO_NOT_UPGRADE, UPGRADE",
                                  "type": [
                                    "string",
                                    "null"
                                  ],
                                  "enum": [
                                    "DEFAULT",
                                    "DO_NOT_UPGRADE",
                                    "UPGRADE"
                                  ]
                                },
                                "http1MaxPendingRequests": {
                                  "description": "Maximum number of requests that will be queued while waiting for a ready connection pool connection.",
                                  "type": [
                                    "integer",
                                    "null"
                                  ],
                                  "format": "int32"
                                },
                                "http2MaxRequests": {
                                  "description": "Maximum number of active requests to a destination.",
                                  "type": [
                                    "integer",
                                    "null"
                                  ],
                                  "format": "int32"
                                },
                                "idleTimeout": {
                                  "description": "The idle timeout for upstream connection pool connections.",
                                  "type": [
                                    "string",
                                    "null"
                                  ],
                                  "x-kubernetes-validations": [
                                    {
                                      "message": "must be a valid duration greater than 1ms",
                                      "rule": "duration(self) >= duration('1ms')"
                                    }
                                  ]
                                },
                                "maxConcurrentStreams": {
                                  "description": "The maximum number of concurrent streams allowed for a peer on one HTTP/2 connection.",
                                  "type": [
                                    "integer",
                                    "null"
                                  ],
                                  "format": "int32"
                                },
                                "maxRequestsPerConnection": {
                                  "description": "Maximum number of requests per connection to a backend.",
                                  "type": [
                                    "integer",
                                    "null"
                                  ],
                                  "format": "int32"
                                },
                                "maxRetries": {
                                  "description": "Maximum number of retries that can be outstanding to all hosts in a cluster at a given time.",
                                  "type": [
                                    "integer",
                                    "null"
                                  ],
                                  "format": "int32"
                                },
                                "useClientProtocol": {
                                  "description": "If set to true, client protocol will be preserved while initiating connection to backend.",
                                  "type": [
                                    "boolean",
                                    "null"
                                  ]
                                }
                              }
                            },
                            "tcp": {
                              "description": "Settings common to both HTTP and TCP upstream connections.",
                              "type": [
                                "object",
                                "null"
                              ],
                              "properties": {
                                "connectTimeout": {
                                  "description": "TCP connection timeout.",
                                  "type": [
                                    "string",
                                    "null"
                                  ],
                                  "x-kubernetes-validations": [
                                    {
                                      "message": "must be a valid duration greater than 1ms",
                                      "rule": "duration(self) >= duration('1ms')"
                                    }
                                  ]
                                },
                                "idleTimeout": {
                                  "description": "The idle timeout for TCP connections.",
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                },
                                "maxConnectionDuration": {
                                  "description": "The maximum duration of a connection.",
                                  "type": [
                                    "string",
                                    "null"
                                  ],
                                  "x-kubernetes-validations": [
                                    {
                                      "message": "must be a valid duration greater than 1ms",
                                      "rule": "duration(self) >= duration('1ms')"
                                    }
                                  ]
                                },
                                "maxConnections": {
                                  "description": "Maximum number of HTTP1 /TCP connections to a destination host.",
                                  "type": [
                                    "integer",
                                    "null"
                                  ],
                                  "format": "int32"
                                },
                                "tcpKeepalive": {
                                  "description": "If set then set SO_KEEPALIVE on the socket to enable TCP Keepalives.",
                                  "type": [
                                    "object",
                                    "null"
                                  ],
                                  "properties": {
                                    "interval": {
                                      "description": "The time duration between keep-alive probes.",
                                      "type": [
                                        "string",
                                        "null"
                                      ],
                                      "x-kubernetes-validations": [
                                        {
                                          "message": "must be a valid duration greater than 1ms",
                                          "rule": "duration(self) >= duration('1ms')"
                                        }
                                      ]
                                    },
                                    "probes": {
                                      "description": "Maximum number of keepalive probes to send without response before deciding the connection is dead.",
                                      "type": [
                                        "integer",
                                        "null"
                                      ],
                                      "maximum": 4294967295,
                                      "minimum": 0
                                    },
                                    "time": {
                                      "description": "The time duration a connection needs to be idle before keep-alive probes start being sent.",
                                      "type": [
                                        "string",
                                        "null"
                                      ],
                                      "x-kubernetes-validations": [
                                        {
                                          "message": "must be a valid duration greater than 1ms",
                                          "rule": "duration(self) >= duration('1ms')"
                                        }
                                      ]
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "loadBalancer": {
                          "description": "Settings controlling the load balancer algorithms.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "consistentHash": {
                              "type": [
                                "object",
                                "null"
                              ],
                              "properties": {
                                "httpCookie": {
                                  "description": "Hash based on HTTP cookie.",
                                  "type": [
                                    "object",
                                    "null"
                                  ],
                                  "required": [
                                    "name"
                                  ],
                                  "properties": {
                                    "name": {
                                      "description": "Name of the cookie.",
                                      "type": "string"
                                    },
                                    "path": {
                                      "description": "Path to set for the cookie.",
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    },
                                    "ttl": {
                                      "description": "Lifetime of the cookie.",
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    }
                                  }
                                },
                                "httpHeaderName": {
                                  "description": "Hash based on a specific HTTP header.",
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                },
                                "httpQueryParameterName": {
                                  "description": "Hash based on a specific HTTP query parameter.",
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                },
                                "maglev": {
                                  "description": "The Maglev load balancer implements consistent hashing to backend hosts.",
                                  "type": [
                                    "object",
                                    "null"
                                  ],
                                  "properties": {
                                    "tableSize": {
                                      "description": "The table size for Maglev hashing.",
                                      "type": [
                                        "integer",
                                        "null"
                                      ],
                                      "minimum": 0
                                    }
                                  }
                                },
                                "minimumRingSize": {
                                  "description": "Deprecated.",
                                  "type": [
                                    "integer",
                                    "null"
                                  ],
                                  "minimum": 0
                                },
                                "ringHash": {
                                  "description": "The ring/modulo hash load balancer implements consistent hashing to backend hosts.",
                                  "type": [
                                    "object",
                                    "null"
                                  ],
                                  "properties": {
                                    "minimumRingSize": {
                                      "description": "The minimum number of virtual nodes to use for the hash ring.",
                                      "type": [
                                        "integer",
                                        "null"
                                      ],
                                      "minimum": 0
                                    }
                                  }
                                },
                                "useSourceIp": {
                                  "description": "Hash based on the source IP address.",
                                  "type": [
                                    "boolean",
                                    "null"
                                  ]
                                }
                              }
                            },
                            "localityLbSetting": {
                              "type": [
                                "object",
                                "null"
                              ],
                              "properties": {
                                "distribute": {
                                  "description": "Optional: only one of distribute, failover or failoverPriority can be set.",
                                  "type": [
                                    "array",
                                    "null"
                                  ],
                                  "items": {
                                    "type": [
                                      "object",
                                      "null"
                                    ],
                                    "properties": {
                                      "from": {
                                        "description": "Originating locality, '/' separated, e.g.",
                                        "type": [
                                          "string",
                                          "null"
                                        ]
                                      },
                                      "to": {
                                        "description": "Map of upstream localities to traffic distribution weights.",
                                        "type": [
                                          "object",
                                          "null"
                                        ],
                                        "additionalProperties": {
                                          "type": [
                                            "integer",
                                            "null"
                                          ],
                                          "maximum": 4294967295,
                                          "minimum": 0
                                        }
                                      }
                                    }
                                  }
                                },
                                "enabled": {
                                  "description": "Enable locality load balancing."
                                },
                                "failover": {
                                  "description": "Optional: only one of distribute, failover or failoverPriority can be set.",
                                  "type": [
                                    "array",
                                    "null"
                                  ],
                                  "items": {
                                    "type": [
                                      "object",
                                      "null"
                                    ],
                                    "properties": {
                                      "from": {
                                        "description": "Originating region.",
                                        "type": [
                                          "string",
                                          "null"
                                        ]
                                      },
                                      "to": {
                                        "description": "Destination region the traffic will fail over to when endpoints in the 'from' region becomes unhealthy.",
                                        "type": [
                                          "string",
                                          "null"
                                        ]
                                      }
                                    }
                                  }
                                },
                                "failoverPriority": {
                                  "description": "failoverPriority is an ordered list of labels used to sort endpoints to do priority based load balancing.",
                                  "type": [
                                    "array",
                                    "null"
                                  ],
                                  "items": {
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  }
                                }
                              }
                            },
                            "simple": {
                              "description": "\n\nValid Options: LEAST_CONN, RANDOM, PASSTHROUGH, ROUND_ROBIN, LEAST_REQUEST",
                              "type": [
                                "string",
                                "null"
                              ],
                              "enum": [
                                "UNSPECIFIED",
                                "LEAST_CONN",
                                "RANDOM",
                                "PASSTHROUGH",
                                "ROUND_ROBIN",
                                "LEAST_REQUEST"
                              ]
                            },
                            "warmup": {
                              "description": "Represents the warmup configuration of Service.",
                              "type": [
                                "object",
                                "null"
                              ],
                              "required": [
                                "duration"
                              ],
                              "properties": {
                                "aggression": {
                                  "description": "This parameter controls the speed of traffic increase over the warmup duration.",
                                  "format": "double",
                                  "minimum": 1
                                },
                                "duration": {
                                  "type": "string",
                                  "x-kubernetes-validations": [
                                    {
                                      "message": "must be a valid duration greater than 1ms",
                                      "rule": "duration(self) >= duration('1ms')"
                                    }
                                  ]
                                },
                                "minimumPercent": {
                                  "format": "double",
                                  "maximum": 100,
                                  "minimum": 0
                                }
                              }
                            },
                            "warmupDurationSecs": {
                              "description": "Deprecated: use `warmup` instead.",
                              "type": [
                                "string",
                                "null"
                              ],
                              "x-kubernetes-validations": [
                                {
                                  "message": "must be a valid duration greater than 1ms",
                                  "rule": "duration(self) >= duration('1ms')"
                                }
                              ]
                            }
                          }
                        },
                        "outlierDetection": {
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "baseEjectionTime": {
                              "description": "Minimum ejection duration.",
                              "type": [
                                "string",
                                "null"
                              ],
                              "x-kubernetes-validations": [
                                {
                                  "message": "must be a valid duration greater than 1ms",
                                  "rule": "duration(self) >= duration('1ms')"
                                }
                              ]
                            },
                            "consecutive5xxErrors": {
                              "description": "Number of 5xx errors before a host is ejected from the connection pool.",
                              "maximum": 4294967295,
                              "minimum": 0
                            },
                            "consecutiveErrors": {
                              "type": [
                                "integer",
                                "null"
                              ],
                              "format": "int32"
                            },
                            "consecutiveGatewayErrors": {
                              "description": "Number of gateway errors before a host is ejected from the connection pool.",
                              "maximum": 4294967295,
                              "minimum": 0
                            },
                            "consecutiveLocalOriginFailures": {
                              "description": "The number of consecutive locally originated failures before ejection occurs.",
                              "maximum": 4294967295,
                              "minimum": 0
                            },
                            "interval": {
                              "description": "Time interval between ejection sweep analysis.",
                              "type": [
                                "string",
                                "null"
                              ],
                              "x-kubernetes-validations": [
                                {
                                  "message": "must be a valid duration greater than 1ms",
                                  "rule": "duration(self) >= duration('1ms')"
                                }
                              ]
                            },
                            "maxEjectionPercent": {
                              "description": "Maximum % of hosts in the load balancing pool for the upstream service that can be ejected.",
                              "type": [
                                "integer",
                                "null"
                              ],
                              "format": "int32"
                            },
                            "minHealthPercent": {
                              "description": "Outlier detection will be enabled as long as the associated load balancing pool has at least `minHealthPercent` hosts in healthy mode.",
                              "type": [
                                "integer",
                                "null"
                              ],
                              "format": "int32"
                            },
                            "splitExternalLocalOriginErrors": {
                              "description": "Determines whether to distinguish local origin failures from external errors.",
                              "type": [
                                "boolean",
                                "null"
                              ]
                            }
                          }
                        },
                        "portLevelSettings": {
                          "description": "Traffic policies specific to individual ports.",
                          "type": [
                            "array",
                            "null"
                          ],
                          "maxItems": 4096,
                          "items": {
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "connectionPool": {
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "properties": {
                                  "http": {
                                    "description": "HTTP connection pool settings.",
                                    "type": [
                                      "object",
                                      "null"
                                    ],
                                    "properties": {
                                      "h2UpgradePolicy": {
                                        "description": "Specify if http1.1 connection should be upgraded to http2 for the associated destination.\n\nValid Options: DEFAULT, DO_NOT_UPGRADE, UPGRADE",
                                        "type": [
                                          "string",
                                          "null"
                                        ],
                                        "enum": [
                                          "DEFAULT",
                                          "DO_NOT_UPGRADE",
                                          "UPGRADE"
                                        ]
                                      },
                                      "http1MaxPendingRequests": {
                                        "description": "Maximum number of requests that will be queued while waiting for a ready connection pool connection.",
                                        "type": [
                                          "integer",
                                          "null"
                                        ],
                                        "format": "int32"
                                      },
                                      "http2MaxRequests": {
                                        "description": "Maximum number of active requests to a destination.",
                                        "type": [
                                          "integer",
                                          "null"
                                        ],
                                        "format": "int32"
                                      },
                                      "idleTimeout": {
                                        "description": "The idle timeout for upstream connection pool connections.",
                                        "type": [
                                          "string",
                                          "null"
                                        ],
                                        "x-kubernetes-validations": [
                                          {
                                            "message": "must be a valid duration greater than 1ms",
                                            "rule": "duration(self) >= duration('1ms')"
                                          }
                                        ]
                                      },
                                      "maxConcurrentStreams": {
                                        "description": "The maximum number of concurrent streams allowed for a peer on one HTTP/2 connection.",
                                        "type": [
                                          "integer",
                                          "null"
                                        ],
                                        "format": "int32"
                                      },
                                      "maxRequestsPerConnection": {
                                        "description": "Maximum number of requests per connection to a backend.",
                                        "type": [
                                          "integer",
                                          "null"
                                        ],
                                        "format": "int32"
                                      },
                                      "maxRetries": {
                                        "description": "Maximum number of retries that can be outstanding to all hosts in a cluster at a given time.",
                                        "type": [
                                          "integer",
                                          "null"
                                        ],
                                        "format": "int32"
                                      },
                                      "useClientProtocol": {
                                        "description": "If set to true, client protocol will be preserved while initiating connection to backend.",
                                        "type": [
                                          "boolean",
                                          "null"
                                        ]
                                      }
                                    }
                                  },
                                  "tcp": {
                                    "description": "Settings common to both HTTP and TCP upstream connections.",
                                    "type": [
                                      "object",
                                      "null"
                                    ],
                                    "properties": {
                                      "connectTimeout": {
                                        "description": "TCP connection timeout.",
                                        "type": [
                                          "string",
                                          "null"
                                        ],
                                        "x-kubernetes-validations": [
                                          {
                                            "message": "must be a valid duration greater than 1ms",
                                            "rule": "duration(self) >= duration('1ms')"
                                          }
                                        ]
                                      },
                                      "idleTimeout": {
                                        "description": "The idle timeout for TCP connections.",
                                        "type": [
                                          "string",
                                          "null"
                                        ]
                                      },
                                      "maxConnectionDuration": {
                                        "description": "The maximum duration of a connection.",
                                        "type": [
                                          "string",
                                          "null"
                                        ],
                                        "x-kubernetes-validations": [
                                          {
                                            "message": "must be a valid duration greater than 1ms",
                                            "rule": "duration(self) >= duration('1ms')"
                                          }
                                        ]
                                      },
                                      "maxConnections": {
                                        "description": "Maximum number of HTTP1 /TCP connections to a destination host.",
                                        "type": [
                                          "integer",
                                          "null"
                                        ],
                                        "format": "int32"
                                      },
                                      "tcpKeepalive": {
                                        "description": "If set then set SO_KEEPALIVE on the socket to enable TCP Keepalives.",
                                        "type": [
                                          "object",
                                          "null"
                                        ],
                                        "properties": {
                                          "interval": {
                                            "description": "The time duration between keep-alive probes.",
                                            "type": [
                                              "string",
                                              "null"
                                            ],
                                            "x-kubernetes-validations": [
                                              {
                                                "message": "must be a valid duration greater than 1ms",
                                                "rule": "duration(self) >= duration('1ms')"
                                              }
                                            ]
                                          },
                                          "probes": {
                                            "description": "Maximum number of keepalive probes to send without response before deciding the connection is dead.",
                                            "type": [
                                              "integer",
                                              "null"
                                            ],
                                            "maximum": 4294967295,
                                            "minimum": 0
                                          },
                                          "time": {
                                            "description": "The time duration a connection needs to be idle before keep-alive probes start being sent.",
                                            "type": [
                                              "string",
                                              "null"
                                            ],
                                            "x-kubernetes-validations": [
                                              {
                                                "message": "must be a valid duration greater than 1ms",
                                                "rule": "duration(self) >= duration('1ms')"
                                              }
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "loadBalancer": {
                                "description": "Settings controlling the load balancer algorithms.",
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "properties": {
                                  "consistentHash": {
                                    "type": [
                                      "object",
                                      "null"
                                    ],
                                    "properties": {
                                      "httpCookie": {
                                        "description": "Hash based on HTTP cookie.",
                                        "type": [
                                          "object",
                                          "null"
                                        ],
                                        "required": [
                                          "name"
                                        ],
                                        "properties": {
                                          "name": {
                                            "description": "Name of the cookie.",
                                            "type": "string"
                                          },
                                          "path": {
                                            "description": "Path to set for the cookie.",
                                            "type": [
                                              "string",
                                              "null"
                                            ]
                                          },
                                          "ttl": {
                                            "description": "Lifetime of the cookie.",
                                            "type": [
                                              "string",
                                              "null"
                                            ]
                                          }
                                        }
                                      },
                                      "httpHeaderName": {
                                        "description": "Hash based on a specific HTTP header.",
                                        "type": [
                                          "string",
                                          "null"
                                        ]
                                      },
                                      "httpQueryParameterName": {
                                        "description": "Hash based on a specific HTTP query parameter.",
                                        "type": [
                                          "string",
                                          "null"
                                        ]
                                      },
                                      "maglev": {
                                        "description": "The Maglev load balancer implements consistent hashing to backend hosts.",
                                        "type": [
                                          "object",
                                          "null"
                                        ],
                                        "properties": {
                                          "tableSize": {
                                            "description": "The table size for Maglev hashing.",
                                            "type": [
                                              "integer",
                                              "null"
                                            ],
                                            "minimum": 0
                                          }
                                        }
                                      },
                                      "minimumRingSize": {
                                        "description": "Deprecated.",
                                        "type": [
                                          "integer",
                                          "null"
                                        ],
                                        "minimum": 0
                                      },
                                      "ringHash": {
                                        "description": "The ring/modulo hash load balancer implements consistent hashing to backend hosts.",
                                        "type": [
                                          "object",
                                          "null"
                                        ],
                                        "properties": {
                                          "minimumRingSize": {
                                            "description": "The minimum number of virtual nodes to use for the hash ring.",
                                            "type": [
                                              "integer",
                                              "null"
                                            ],
                                            "minimum": 0
                                          }
                                        }
                                      },
                                      "useSourceIp": {
                                        "description": "Hash based on the source IP address.",
                                        "type": [
                                          "boolean",
                                          "null"
                                        ]
                                      }
                                    }
                                  },
                                  "localityLbSetting": {
                                    "type": [
                                      "object",
                                      "null"
                                    ],
                                    "properties": {
                                      "distribute": {
                                        "description": "Optional: only one of distribute, failover or failoverPriority can be set.",
                                        "type": [
                                          "array",
                                          "null"
                                        ],
                                        "items": {
                                          "type": [
                                            "object",
                                            "null"
                                          ],
                                          "properties": {
                                            "from": {
                                              "description": "Originating locality, '/' separated, e.g.",
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            },
                                            "to": {
                                              "description": "Map of upstream localities to traffic distribution weights.",
                                              "type": [
                                                "object",
                                                "null"
                                              ],
                                              "additionalProperties": {
                                                "type": [
                                                  "integer",
                                                  "null"
                                                ],
                                                "maximum": 4294967295,
                                                "minimum": 0
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "enabled": {
                                        "description": "Enable locality load balancing."
                                      },
                                      "failover": {
                                        "description": "Optional: only one of distribute, failover or failoverPriority can be set.",
                                        "type": [
                                          "array",
                                          "null"
                                        ],
                                        "items": {
                                          "type": [
                                            "object",
                                            "null"
                                          ],
                                          "properties": {
                                            "from": {
                                              "description": "Originating region.",
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            },
                                            "to": {
                                              "description": "Destination region the traffic will fail over to when endpoints in the 'from' region becomes unhealthy.",
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            }
                                          }
                                        }
                                      },
                                      "failoverPriority": {
                                        "description": "failoverPriority is an ordered list of labels used to sort endpoints to do priority based load balancing.",
                                        "type": [
                                          "array",
                                          "null"
                                        ],
                                        "items": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        }
                                      }
                                    }
                                  },
                                  "simple": {
                                    "description": "\n\nValid Options: LEAST_CONN, RANDOM, PASSTHROUGH, ROUND_ROBIN, LEAST_REQUEST",
                                    "type": [
                                      "string",
                                      "null"
                                    ],
                                    "enum": [
                                      "UNSPECIFIED",
                                      "LEAST_CONN",
                                      "RANDOM",
                                      "PASSTHROUGH",
                                      "ROUND_ROBIN",
                                      "LEAST_REQUEST"
                                    ]
                                  },
                                  "warmup": {
                                    "description": "Represents the warmup configuration of Service.",
                                    "type": [
                                      "object",
                                      "null"
                                    ],
                                    "required": [
                                      "duration"
                                    ],
                                    "properties": {
                                      "aggression": {
                                        "description": "This parameter controls the speed of traffic increase over the warmup duration.",
                                        "format": "double",
                                        "minimum": 1
                                      },
                                      "duration": {
                                        "type": "string",
                                        "x-kubernetes-validations": [
                                          {
                                            "message": "must be a valid duration greater than 1ms",
                                            "rule": "duration(self) >= duration('1ms')"
                                          }
                                        ]
                                      },
                                      "minimumPercent": {
                                        "format": "double",
                                        "maximum": 100,
                                        "minimum": 0
                                      }
                                    }
                                  },
                                  "warmupDurationSecs": {
                                    "description": "Deprecated: use `warmup` instead.",
                                    "type": [
                                      "string",
                                      "null"
                                    ],
                                    "x-kubernetes-validations": [
                                      {
                                        "message": "must be a valid duration greater than 1ms",
                                        "rule": "duration(self) >= duration('1ms')"
                                      }
                                    ]
                                  }
                                }
                              },
                              "outlierDetection": {
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "properties": {
                                  "baseEjectionTime": {
                                    "description": "Minimum ejection duration.",
                                    "type": [
                                      "string",
                                      "null"
                                    ],
                                    "x-kubernetes-validations": [
                                      {
                                        "message": "must be a valid duration greater than 1ms",
                                        "rule": "duration(self) >= duration('1ms')"
                                      }
                                    ]
                                  },
                                  "consecutive5xxErrors": {
                                    "description": "Number of 5xx errors before a host is ejected from the connection pool.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                  },
                                  "consecutiveErrors": {
                                    "type": [
                                      "integer",
                                      "null"
                                    ],
                                    "format": "int32"
                                  },
                                  "consecutiveGatewayErrors": {
                                    "description": "Number of gateway errors before a host is ejected from the connection pool.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                  },
                                  "consecutiveLocalOriginFailures": {
                                    "description": "The number of consecutive locally originated failures before ejection occurs.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                  },
                                  "interval": {
                                    "description": "Time interval between ejection sweep analysis.",
                                    "type": [
                                      "string",
                                      "null"
                                    ],
                                    "x-kubernetes-validations": [
                                      {
                                        "message": "must be a valid duration greater than 1ms",
                                        "rule": "duration(self) >= duration('1ms')"
                                      }
                                    ]
                                  },
                                  "maxEjectionPercent": {
                                    "description": "Maximum % of hosts in the load balancing pool for the upstream service that can be ejected.",
                                    "type": [
                                      "integer",
                                      "null"
                                    ],
                                    "format": "int32"
                                  },
                                  "minHealthPercent": {
                                    "description": "Outlier detection will be enabled as long as the associated load balancing pool has at least `minHealthPercent` hosts in healthy mode.",
                                    "type": [
                                      "integer",
                                      "null"
                                    ],
                                    "format": "int32"
                                  },
                                  "splitExternalLocalOriginErrors": {
                                    "description": "Determines whether to distinguish local origin failures from external errors.",
                                    "type": [
                                      "boolean",
                                      "null"
                                    ]
                                  }
                                }
                              },
                              "port": {
                                "description": "Specifies the number of a port on the destination service on which this policy is being applied.",
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "properties": {
                                  "number": {
                                    "type": [
                                      "integer",
                                      "null"
                                    ],
                                    "maximum": 4294967295,
                                    "minimum": 0
                                  }
                                }
                              },
                              "tls": {
                                "description": "TLS related settings for connections to the upstream service.",
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "properties": {
                                  "caCertificates": {
                                    "description": "OPTIONAL: The path to the file containing certificate authority certificates to use in verifying a presented server certificate.",
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "caCrl": {
                                    "description": "OPTIONAL: The path to the file containing the certificate revocation list (CRL) to use in verifying a presented server certificate.",
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "clientCertificate": {
                                    "description": "REQUIRED if mode is `MUTUAL`.",
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "credentialName": {
                                    "description": "The name of the secret that holds the TLS certs for the client including the CA certificates.",
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "insecureSkipVerify": {
                                    "description": "`insecureSkipVerify` specifies whether the proxy should skip verifying the CA signature and SAN for the server certificate corresponding to the host."
                                  },
                                  "mode": {
                                    "description": "Indicates whether connections to this port should be secured using TLS.\n\nValid Options: DISABLE, SIMPLE, MUTUAL, ISTIO_MUTUAL",
                                    "type": [
                                      "string",
                                      "null"
                                    ],
                                    "enum": [
                                      "DISABLE",
                                      "SIMPLE",
                                      "MUTUAL",
                                      "ISTIO_MUTUAL"
                                    ]
                                  },
                                  "privateKey": {
                                    "description": "REQUIRED if mode is `MUTUAL`.",
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "sni": {
                                    "description": "SNI string to present to the server during TLS handshake.",
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "subjectAltNames": {
                                    "description": "A list of alternate names to verify the subject identity in the certificate.",
                                    "type": [
                                      "array",
                                      "null"
                                    ],
                                    "items": {
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "proxyProtocol": {
                          "description": "The upstream PROXY protocol settings.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "version": {
                              "description": "The PROXY protocol version to use.\n\nValid Options: V1, V2",
                              "type": [
                                "string",
                                "null"
                              ],
                              "enum": [
                                "V1",
                                "V2"
                              ]
                            }
                          }
                        },
                        "retryBudget": {
                          "description": "Specifies a limit on concurrent retries in relation to the number of active requests.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "minRetryConcurrency": {
                              "description": "Specifies the minimum retry concurrency allowed for the retry budget.",
                              "type": [
                                "integer",
                                "null"
                              ],
                              "maximum": 4294967295,
                              "minimum": 0
                            },
                            "percent": {
                              "description": "Specifies the limit on concurrent retries as a percentage of the sum of active requests and active pending requests.",
                              "format": "double",
                              "maximum": 100,
                              "minimum": 0
                            }
                          }
                        },
                        "tls": {
                          "description": "TLS related settings for connections to the upstream service.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "caCertificates": {
                              "description": "OPTIONAL: The path to the file containing certificate authority certificates to use in verifying a presented server certificate.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "caCrl": {
                              "description": "OPTIONAL: The path to the file containing the certificate revocation list (CRL) to use in verifying a presented server certificate.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "clientCertificate": {
                              "description": "REQUIRED if mode is `MUTUAL`.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "credentialName": {
                              "description": "The name of the secret that holds the TLS certs for the client including the CA certificates.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "insecureSkipVerify": {
                              "description": "`insecureSkipVerify` specifies whether the proxy should skip verifying the CA signature and SAN for the server certificate corresponding to the host."
                            },
                            "mode": {
                              "description": "Indicates whether connections to this port should be secured using TLS.\n\nValid Options: DISABLE, SIMPLE, MUTUAL, ISTIO_MUTUAL",
                              "type": [
                                "string",
                                "null"
                              ],
                              "enum": [
                                "DISABLE",
                                "SIMPLE",
                                "MUTUAL",
                                "ISTIO_MUTUAL"
                              ]
                            },
                            "privateKey": {
                              "description": "REQUIRED if mode is `MUTUAL`.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "sni": {
                              "description": "SNI string to present to the server during TLS handshake.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "subjectAltNames": {
                              "description": "A list of alternate names to verify the subject identity in the certificate.",
                              "type": [
                                "array",
                                "null"
                              ],
                              "items": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            }
                          }
                        },
                        "tunnel": {
                          "description": "Configuration of tunneling TCP over other transport or application layers for the host configured in the DestinationRule.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "required": [
                            "targetHost",
                            "targetPort"
                          ],
                          "properties": {
                            "protocol": {
                              "description": "Specifies which protocol to use for tunneling the downstream connection.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "targetHost": {
                              "description": "Specifies a host to which the downstream connection is tunneled.",
                              "type": "string"
                            },
                            "targetPort": {
                              "description": "Specifies a port to which the downstream connection is tunneled.",
                              "type": "integer",
                              "maximum": 4294967295,
                              "minimum": 0
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "trafficPolicy": {
                "description": "Traffic policies to apply (load balancing policy, connection pool sizes, outlier detection).",
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "connectionPool": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "properties": {
                      "http": {
                        "description": "HTTP connection pool settings.",
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "h2UpgradePolicy": {
                            "description": "Specify if http1.1 connection should be upgraded to http2 for the associated destination.\n\nValid Options: DEFAULT, DO_NOT_UPGRADE, UPGRADE",
                            "type": [
                              "string",
                              "null"
                            ],
                            "enum": [
                              "DEFAULT",
                              "DO_NOT_UPGRADE",
                              "UPGRADE"
                            ]
                          },
                          "http1MaxPendingRequests": {
                            "description": "Maximum number of requests that will be queued while waiting for a ready connection pool connection.",
                            "type": [
                              "integer",
                              "null"
                            ],
                            "format": "int32"
                          },
                          "http2MaxRequests": {
                            "description": "Maximum number of active requests to a destination.",
                            "type": [
                              "integer",
                              "null"
                            ],
                            "format": "int32"
                          },
                          "idleTimeout": {
                            "description": "The idle timeout for upstream connection pool connections.",
                            "type": [
                              "string",
                              "null"
                            ],
                            "x-kubernetes-validations": [
                              {
                                "message": "must be a valid duration greater than 1ms",
                                "rule": "duration(self) >= duration('1ms')"
                              }
                            ]
                          },
                          "maxConcurrentStreams": {
                            "description": "The maximum number of concurrent streams allowed for a peer on one HTTP/2 connection.",
                            "type": [
                              "integer",
                              "null"
                            ],
                            "format": "int32"
                          },
                          "maxRequestsPerConnection": {
                            "description": "Maximum number of requests per connection to a backend.",
                            "type": [
                              "integer",
                              "null"
                            ],
                            "format": "int32"
                          },
                          "maxRetries": {
                            "description": "Maximum number of retries that can be outstanding to all hosts in a cluster at a given time.",
                            "type": [
                              "integer",
                              "null"
                            ],
                            "format": "int32"
                          },
                          "useClientProtocol": {
                            "description": "If set to true, client protocol will be preserved while initiating connection to backend.",
                            "type": [
                              "boolean",
                              "null"
                            ]
                          }
                        }
                      },
                      "tcp": {
                        "description": "Settings common to both HTTP and TCP upstream connections.",
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "connectTimeout": {
                            "description": "TCP connection timeout.",
                            "type": [
                              "string",
                              "null"
                            ],
                            "x-kubernetes-validations": [
                              {
                                "message": "must be a valid duration greater than 1ms",
                                "rule": "duration(self) >= duration('1ms')"
                              }
                            ]
                          },
                          "idleTimeout": {
                            "description": "The idle timeout for TCP connections.",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "maxConnectionDuration": {
                            "description": "The maximum duration of a connection.",
                            "type": [
                              "string",
                              "null"
                            ],
                            "x-kubernetes-validations": [
                              {
                                "message": "must be a valid duration greater than 1ms",
                                "rule": "duration(self) >= duration('1ms')"
                              }
                            ]
                          },
                          "maxConnections": {
                            "description": "Maximum number of HTTP1 /TCP connections to a destination host.",
                            "type": [
                              "integer",
                              "null"
                            ],
                            "format": "int32"
                          },
                          "tcpKeepalive": {
                            "description": "If set then set SO_KEEPALIVE on the socket to enable TCP Keepalives.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "interval": {
                                "description": "The time duration between keep-alive probes.",
                                "type": [
                                  "string",
                                  "null"
                                ],
                                "x-kubernetes-validations": [
                                  {
                                    "message": "must be a valid duration greater than 1ms",
                                    "rule": "duration(self) >= duration('1ms')"
                                  }
                                ]
                              },
                              "probes": {
                                "description": "Maximum number of keepalive probes to send without response before deciding the connection is dead.",
                                "type": [
                                  "integer",
                                  "null"
                                ],
                                "maximum": 4294967295,
                                "minimum": 0
                              },
                              "time": {
                                "description": "The time duration a connection needs to be idle before keep-alive probes start being sent.",
                                "type": [
                                  "string",
                                  "null"
                                ],
                                "x-kubernetes-validations": [
                                  {
                                    "message": "must be a valid duration greater than 1ms",
                                    "rule": "duration(self) >= duration('1ms')"
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "loadBalancer": {
                    "description": "Settings controlling the load balancer algorithms.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "properties": {
                      "consistentHash": {
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "httpCookie": {
                            "description": "Hash based on HTTP cookie.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "required": [
                              "name"
                            ],
                            "properties": {
                              "name": {
                                "description": "Name of the cookie.",
                                "type": "string"
                              },
                              "path": {
                                "description": "Path to set for the cookie.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "ttl": {
                                "description": "Lifetime of the cookie.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            }
                          },
                          "httpHeaderName": {
                            "description": "Hash based on a specific HTTP header.",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "httpQueryParameterName": {
                            "description": "Hash based on a specific HTTP query parameter.",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "maglev": {
                            "description": "The Maglev load balancer implements consistent hashing to backend hosts.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "tableSize": {
                                "description": "The table size for Maglev hashing.",
                                "type": [
                                  "integer",
                                  "null"
                                ],
                                "minimum": 0
                              }
                            }
                          },
                          "minimumRingSize": {
                            "description": "Deprecated.",
                            "type": [
                              "integer",
                              "null"
                            ],
                            "minimum": 0
                          },
                          "ringHash": {
                            "description": "The ring/modulo hash load balancer implements consistent hashing to backend hosts.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "minimumRingSize": {
                                "description": "The minimum number of virtual nodes to use for the hash ring.",
                                "type": [
                                  "integer",
                                  "null"
                                ],
                                "minimum": 0
                              }
                            }
                          },
                          "useSourceIp": {
                            "description": "Hash based on the source IP address.",
                            "type": [
                              "boolean",
                              "null"
                            ]
                          }
                        }
                      },
                      "localityLbSetting": {
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "distribute": {
                            "description": "Optional: only one of distribute, failover or failoverPriority can be set.",
                            "type": [
                              "array",
                              "null"
                            ],
                            "items": {
                              "type": [
                                "object",
                                "null"
                              ],
                              "properties": {
                                "from": {
                                  "description": "Originating locality, '/' separated, e.g.",
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                },
                                "to": {
                                  "description": "Map of upstream localities to traffic distribution weights.",
                                  "type": [
                                    "object",
                                    "null"
                                  ],
                                  "additionalProperties": {
                                    "type": [
                                      "integer",
                                      "null"
                                    ],
                                    "maximum": 4294967295,
                                    "minimum": 0
                                  }
                                }
                              }
                            }
                          },
                          "enabled": {
                            "description": "Enable locality load balancing."
                          },
                          "failover": {
                            "description": "Optional: only one of distribute, failover or failoverPriority can be set.",
                            "type": [
                              "array",
                              "null"
                            ],
                            "items": {
                              "type": [
                                "object",
                                "null"
                              ],
                              "properties": {
                                "from": {
                                  "description": "Originating region.",
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                },
                                "to": {
                                  "description": "Destination region the traffic will fail over to when endpoints in the 'from' region becomes unhealthy.",
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                }
                              }
                            }
                          },
                          "failoverPriority": {
                            "description": "failoverPriority is an ordered list of labels used to sort endpoints to do priority based load balancing.",
                            "type": [
                              "array",
                              "null"
                            ],
                            "items": {
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          }
                        }
                      },
                      "simple": {
                        "description": "\n\nValid Options: LEAST_CONN, RANDOM, PASSTHROUGH, ROUND_ROBIN, LEAST_REQUEST",
                        "type": [
                          "string",
                          "null"
                        ],
                        "enum": [
                          "UNSPECIFIED",
                          "LEAST_CONN",
                          "RANDOM",
                          "PASSTHROUGH",
                          "ROUND_ROBIN",
                          "LEAST_REQUEST"
                        ]
                      },
                      "warmup": {
                        "description": "Represents the warmup configuration of Service.",
                        "type": [
                          "object",
                          "null"
                        ],
                        "required": [
                          "duration"
                        ],
                        "properties": {
                          "aggression": {
                            "description": "This parameter controls the speed of traffic increase over the warmup duration.",
                            "format": "double",
                            "minimum": 1
                          },
                          "duration": {
                            "type": "string",
                            "x-kubernetes-validations": [
                              {
                                "message": "must be a valid duration greater than 1ms",
                                "rule": "duration(self) >= duration('1ms')"
                              }
                            ]
                          },
                          "minimumPercent": {
                            "format": "double",
                            "maximum": 100,
                            "minimum": 0
                          }
                        }
                      },
                      "warmupDurationSecs": {
                        "description": "Deprecated: use `warmup` instead.",
                        "type": [
                          "string",
                          "null"
                        ],
                        "x-kubernetes-validations": [
                          {
                            "message": "must be a valid duration greater than 1ms",
                            "rule": "duration(self) >= duration('1ms')"
                          }
                        ]
                      }
                    }
                  },
                  "outlierDetection": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "properties": {
                      "baseEjectionTime": {
                        "description": "Minimum ejection duration.",
                        "type": [
                          "string",
                          "null"
                        ],
                        "x-kubernetes-validations": [
                          {
                            "message": "must be a valid duration greater than 1ms",
                            "rule": "duration(self) >= duration('1ms')"
                          }
                        ]
                      },
                      "consecutive5xxErrors": {
                        "description": "Number of 5xx errors before a host is ejected from the connection pool.",
                        "maximum": 4294967295,
                        "minimum": 0
                      },
                      "consecutiveErrors": {
                        "type": [
                          "integer",
                          "null"
                        ],
                        "format": "int32"
                      },
                      "consecutiveGatewayErrors": {
                        "description": "Number of gateway errors before a host is ejected from the connection pool.",
                        "maximum": 4294967295,
                        "minimum": 0
                      },
                      "consecutiveLocalOriginFailures": {
                        "description": "The number of consecutive locally originated failures before ejection occurs.",
                        "maximum": 4294967295,
                        "minimum": 0
                      },
                      "interval": {
                        "description": "Time interval between ejection sweep analysis.",
                        "type": [
                          "string",
                          "null"
                        ],
                        "x-kubernetes-validations": [
                          {
                            "message": "must be a valid duration greater than 1ms",
                            "rule": "duration(self) >= duration('1ms')"
                          }
                        ]
                      },
                      "maxEjectionPercent": {
                        "description": "Maximum % of hosts in the load balancing pool for the upstream service that can be ejected.",
                        "type": [
                          "integer",
                          "null"
                        ],
                        "format": "int32"
                      },
                      "minHealthPercent": {
                        "description": "Outlier detection will be enabled as long as the associated load balancing pool has at least `minHealthPercent` hosts in healthy mode.",
                        "type": [
                          "integer",
                          "null"
                        ],
                        "format": "int32"
                      },
                      "splitExternalLocalOriginErrors": {
                        "description": "Determines whether to distinguish local origin failures from external errors.",
                        "type": [
                          "boolean",
                          "null"
                        ]
                      }
                    }
                  },
                  "portLevelSettings": {
                    "description": "Traffic policies specific to individual ports.",
                    "type": [
                      "array",
                      "null"
                    ],
                    "maxItems": 4096,
                    "items": {
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "connectionPool": {
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "http": {
                              "description": "HTTP connection pool settings.",
                              "type": [
                                "object",
                                "null"
                              ],
                              "properties": {
                                "h2UpgradePolicy": {
                                  "description": "Specify if http1.1 connection should be upgraded to http2 for the associated destination.\n\nValid Options: DEFAULT, DO_NOT_UPGRADE, UPGRADE",
                                  "type": [
                                    "string",
                                    "null"
                                  ],
                                  "enum": [
                                    "DEFAULT",
                                    "DO_NOT_UPGRADE",
                                    "UPGRADE"
                                  ]
                                },
                                "http1MaxPendingRequests": {
                                  "description": "Maximum number of requests that will be queued while waiting for a ready connection pool connection.",
                                  "type": [
                                    "integer",
                                    "null"
                                  ],
                                  "format": "int32"
                                },
                                "http2MaxRequests": {
                                  "description": "Maximum number of active requests to a destination.",
                                  "type": [
                                    "integer",
                                    "null"
                                  ],
                                  "format": "int32"
                                },
                                "idleTimeout": {
                                  "description": "The idle timeout for upstream connection pool connections.",
                                  "type": [
                                    "string",
                                    "null"
                                  ],
                                  "x-kubernetes-validations": [
                                    {
                                      "message": "must be a valid duration greater than 1ms",
                                      "rule": "duration(self) >= duration('1ms')"
                                    }
                                  ]
                                },
                                "maxConcurrentStreams": {
                                  "description": "The maximum number of concurrent streams allowed for a peer on one HTTP/2 connection.",
                                  "type": [
                                    "integer",
                                    "null"
                                  ],
                                  "format": "int32"
                                },
                                "maxRequestsPerConnection": {
                                  "description": "Maximum number of requests per connection to a backend.",
                                  "type": [
                                    "integer",
                                    "null"
                                  ],
                                  "format": "int32"
                                },
                                "maxRetries": {
                                  "description": "Maximum number of retries that can be outstanding to all hosts in a cluster at a given time.",
                                  "type": [
                                    "integer",
                                    "null"
                                  ],
                                  "format": "int32"
                                },
                                "useClientProtocol": {
                                  "description": "If set to true, client protocol will be preserved while initiating connection to backend.",
                                  "type": [
                                    "boolean",
                                    "null"
                                  ]
                                }
                              }
                            },
                            "tcp": {
                              "description": "Settings common to both HTTP and TCP upstream connections.",
                              "type": [
                                "object",
                                "null"
                              ],
                              "properties": {
                                "connectTimeout": {
                                  "description": "TCP connection timeout.",
                                  "type": [
                                    "string",
                                    "null"
                                  ],
                                  "x-kubernetes-validations": [
                                    {
                                      "message": "must be a valid duration greater than 1ms",
                                      "rule": "duration(self) >= duration('1ms')"
                                    }
                                  ]
                                },
                                "idleTimeout": {
                                  "description": "The idle timeout for TCP connections.",
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                },
                                "maxConnectionDuration": {
                                  "description": "The maximum duration of a connection.",
                                  "type": [
                                    "string",
                                    "null"
                                  ],
                                  "x-kubernetes-validations": [
                                    {
                                      "message": "must be a valid duration greater than 1ms",
                                      "rule": "duration(self) >= duration('1ms')"
                                    }
                                  ]
                                },
                                "maxConnections": {
                                  "description": "Maximum number of HTTP1 /TCP connections to a destination host.",
                                  "type": [
                                    "integer",
                                    "null"
                                  ],
                                  "format": "int32"
                                },
                                "tcpKeepalive": {
                                  "description": "If set then set SO_KEEPALIVE on the socket to enable TCP Keepalives.",
                                  "type": [
                                    "object",
                                    "null"
                                  ],
                                  "properties": {
                                    "interval": {
                                      "description": "The time duration between keep-alive probes.",
                                      "type": [
                                        "string",
                                        "null"
                                      ],
                                      "x-kubernetes-validations": [
                                        {
                                          "message": "must be a valid duration greater than 1ms",
                                          "rule": "duration(self) >= duration('1ms')"
                                        }
                                      ]
                                    },
                                    "probes": {
                                      "description": "Maximum number of keepalive probes to send without response before deciding the connection is dead.",
                                      "type": [
                                        "integer",
                                        "null"
                                      ],
                                      "maximum": 4294967295,
                                      "minimum": 0
                                    },
                                    "time": {
                                      "description": "The time duration a connection needs to be idle before keep-alive probes start being sent.",
                                      "type": [
                                        "string",
                                        "null"
                                      ],
                                      "x-kubernetes-validations": [
                                        {
                                          "message": "must be a valid duration greater than 1ms",
                                          "rule": "duration(self) >= duration('1ms')"
                                        }
                                      ]
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "loadBalancer": {
                          "description": "Settings controlling the load balancer algorithms.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "consistentHash": {
                              "type": [
                                "object",
                                "null"
                              ],
                              "properties": {
                                "httpCookie": {
                                  "description": "Hash based on HTTP cookie.",
                                  "type": [
                                    "object",
                                    "null"
                                  ],
                                  "required": [
                                    "name"
                                  ],
                                  "properties": {
                                    "name": {
                                      "description": "Name of the cookie.",
                                      "type": "string"
                                    },
                                    "path": {
                                      "description": "Path to set for the cookie.",
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    },
                                    "ttl": {
                                      "description": "Lifetime of the cookie.",
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    }
                                  }
                                },
                                "httpHeaderName": {
                                  "description": "Hash based on a specific HTTP header.",
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                },
                                "httpQueryParameterName": {
                                  "description": "Hash based on a specific HTTP query parameter.",
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                },
                                "maglev": {
                                  "description": "The Maglev load balancer implements consistent hashing to backend hosts.",
                                  "type": [
                                    "object",
                                    "null"
                                  ],
                                  "properties": {
                                    "tableSize": {
                                      "description": "The table size for Maglev hashing.",
                                      "type": [
                                        "integer",
                                        "null"
                                      ],
                                      "minimum": 0
                                    }
                                  }
                                },
                                "minimumRingSize": {
                                  "description": "Deprecated.",
                                  "type": [
                                    "integer",
                                    "null"
                                  ],
                                  "minimum": 0
                                },
                                "ringHash": {
                                  "description": "The ring/modulo hash load balancer implements consistent hashing to backend hosts.",
                                  "type": [
                                    "object",
                                    "null"
                                  ],
                                  "properties": {
                                    "minimumRingSize": {
                                      "description": "The minimum number of virtual nodes to use for the hash ring.",
                                      "type": [
                                        "integer",
                                        "null"
                                      ],
                                      "minimum": 0
                                    }
                                  }
                                },
                                "useSourceIp": {
                                  "description": "Hash based on the source IP address.",
                                  "type": [
                                    "boolean",
                                    "null"
                                  ]
                                }
                              }
                            },
                            "localityLbSetting": {
                              "type": [
                                "object",
                                "null"
                              ],
                              "properties": {
                                "distribute": {
                                  "description": "Optional: only one of distribute, failover or failoverPriority can be set.",
                                  "type": [
                                    "array",
                                    "null"
                                  ],
                                  "items": {
                                    "type": [
                                      "object",
                                      "null"
                                    ],
                                    "properties": {
                                      "from": {
                                        "description": "Originating locality, '/' separated, e.g.",
                                        "type": [
                                          "string",
                                          "null"
                                        ]
                                      },
                                      "to": {
                                        "description": "Map of upstream localities to traffic distribution weights.",
                                        "type": [
                                          "object",
                                          "null"
                                        ],
                                        "additionalProperties": {
                                          "type": [
                                            "integer",
                                            "null"
                                          ],
                                          "maximum": 4294967295,
                                          "minimum": 0
                                        }
                                      }
                                    }
                                  }
                                },
                                "enabled": {
                                  "description": "Enable locality load balancing."
                                },
                                "failover": {
                                  "description": "Optional: only one of distribute, failover or failoverPriority can be set.",
                                  "type": [
                                    "array",
                                    "null"
                                  ],
                                  "items": {
                                    "type": [
                                      "object",
                                      "null"
                                    ],
                                    "properties": {
                                      "from": {
                                        "description": "Originating region.",
                                        "type": [
                                          "string",
                                          "null"
                                        ]
                                      },
                                      "to": {
                                        "description": "Destination region the traffic will fail over to when endpoints in the 'from' region becomes unhealthy.",
                                        "type": [
                                          "string",
                                          "null"
                                        ]
                                      }
                                    }
                                  }
                                },
                                "failoverPriority": {
                                  "description": "failoverPriority is an ordered list of labels used to sort endpoints to do priority based load balancing.",
                                  "type": [
                                    "array",
                                    "null"
                                  ],
                                  "items": {
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  }
                                }
                              }
                            },
                            "simple": {
                              "description": "\n\nValid Options: LEAST_CONN, RANDOM, PASSTHROUGH, ROUND_ROBIN, LEAST_REQUEST",
                              "type": [
                                "string",
                                "null"
                              ],
                              "enum": [
                                "UNSPECIFIED",
                                "LEAST_CONN",
                                "RANDOM",
                                "PASSTHROUGH",
                                "ROUND_ROBIN",
                                "LEAST_REQUEST"
                              ]
                            },
                            "warmup": {
                              "description": "Represents the warmup configuration of Service.",
                              "type": [
                                "object",
                                "null"
                              ],
                              "required": [
                                "duration"
                              ],
                              "properties": {
                                "aggression": {
                                  "description": "This parameter controls the speed of traffic increase over the warmup duration.",
                                  "format": "double",
                                  "minimum": 1
                                },
                                "duration": {
                                  "type": "string",
                                  "x-kubernetes-validations": [
                                    {
                                      "message": "must be a valid duration greater than 1ms",
                                      "rule": "duration(self) >= duration('1ms')"
                                    }
                                  ]
                                },
                                "minimumPercent": {
                                  "format": "double",
                                  "maximum": 100,
                                  "minimum": 0
                                }
                              }
                            },
                            "warmupDurationSecs": {
                              "description": "Deprecated: use `warmup` instead.",
                              "type": [
                                "string",
                                "null"
                              ],
                              "x-kubernetes-validations": [
                                {
                                  "message": "must be a valid duration greater than 1ms",
                                  "rule": "duration(self) >= duration('1ms')"
                                }
                              ]
                            }
                          }
                        },
                        "outlierDetection": {
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "baseEjectionTime": {
                              "description": "Minimum ejection duration.",
                              "type": [
                                "string",
                                "null"
                              ],
                              "x-kubernetes-validations": [
                                {
                                  "message": "must be a valid duration greater than 1ms",
                                  "rule": "duration(self) >= duration('1ms')"
                                }
                              ]
                            },
                            "consecutive5xxErrors": {
                              "description": "Number of 5xx errors before a host is ejected from the connection pool.",
                              "maximum": 4294967295,
                              "minimum": 0
                            },
                            "consecutiveErrors": {
                              "type": [
                                "integer",
                                "null"
                              ],
                              "format": "int32"
                            },
                            "consecutiveGatewayErrors": {
                              "description": "Number of gateway errors before a host is ejected from the connection pool.",
                              "maximum": 4294967295,
                              "minimum": 0
                            },
                            "consecutiveLocalOriginFailures": {
                              "description": "The number of consecutive locally originated failures before ejection occurs.",
                              "maximum": 4294967295,
                              "minimum": 0
                            },
                            "interval": {
                              "description": "Time interval between ejection sweep analysis.",
                              "type": [
                                "string",
                                "null"
                              ],
                              "x-kubernetes-validations": [
                                {
                                  "message": "must be a valid duration greater than 1ms",
                                  "rule": "duration(self) >= duration('1ms')"
                                }
                              ]
                            },
                            "maxEjectionPercent": {
                              "description": "Maximum % of hosts in the load balancing pool for the upstream service that can be ejected.",
                              "type": [
                                "integer",
                                "null"
                              ],
                              "format": "int32"
                            },
                            "minHealthPercent": {
                              "description": "Outlier detection will be enabled as long as the associated load balancing pool has at least `minHealthPercent` hosts in healthy mode.",
                              "type": [
                                "integer",
                                "null"
                              ],
                              "format": "int32"
                            },
                            "splitExternalLocalOriginErrors": {
                              "description": "Determines whether to distinguish local origin failures from external errors.",
                              "type": [
                                "boolean",
                                "null"
                              ]
                            }
                          }
                        },
                        "port": {
                          "description": "Specifies the number of a port on the destination service on which this policy is being applied.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "number": {
                              "type": [
                                "integer",
                                "null"
                              ],
                              "maximum": 4294967295,
                              "minimum": 0
                            }
                          }
                        },
                        "tls": {
                          "description": "TLS related settings for connections to the upstream service.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "caCertificates": {
                              "description": "OPTIONAL: The path to the file containing certificate authority certificates to use in verifying a presented server certificate.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "caCrl": {
                              "description": "OPTIONAL: The path to the file containing the certificate revocation list (CRL) to use in verifying a presented server certificate.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "clientCertificate": {
                              "description": "REQUIRED if mode is `MUTUAL`.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "credentialName": {
                              "description": "The name of the secret that holds the TLS certs for the client including the CA certificates.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "insecureSkipVerify": {
                              "description": "`insecureSkipVerify` specifies whether the proxy should skip verifying the CA signature and SAN for the server certificate corresponding to the host."
                            },
                            "mode": {
                              "description": "Indicates whether connections to this port should be secured using TLS.\n\nValid Options: DISABLE, SIMPLE, MUTUAL, ISTIO_MUTUAL",
                              "type": [
                                "string",
                                "null"
                              ],
                              "enum": [
                                "DISABLE",
                                "SIMPLE",
                                "MUTUAL",
                                "ISTIO_MUTUAL"
                              ]
                            },
                            "privateKey": {
                              "description": "REQUIRED if mode is `MUTUAL`.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "sni": {
                              "description": "SNI string to present to the server during TLS handshake.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "subjectAltNames": {
                              "description": "A list of alternate names to verify the subject identity in the certificate.",
                              "type": [
                                "array",
                                "null"
                              ],
                              "items": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "proxyProtocol": {
                    "description": "The upstream PROXY protocol settings.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "properties": {
                      "version": {
                        "description": "The PROXY protocol version to use.\n\nValid Options: V1, V2",
                        "type": [
                          "string",
                          "null"
                        ],
                        "enum": [
                          "V1",
                          "V2"
                        ]
                      }
                    }
                  },
                  "retryBudget": {
                    "description": "Specifies a limit on concurrent retries in relation to the number of active requests.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "properties": {
                      "minRetryConcurrency": {
                        "description": "Specifies the minimum retry concurrency allowed for the retry budget.",
                        "type": [
                          "integer",
                          "null"
                        ],
                        "maximum": 4294967295,
                        "minimum": 0
                      },
                      "percent": {
                        "description": "Specifies the limit on concurrent retries as a percentage of the sum of active requests and active pending requests.",
                        "format": "double",
                        "maximum": 100,
                        "minimum": 0
                      }
                    }
                  },
                  "tls": {
                    "description": "TLS related settings for connections to the upstream service.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "properties": {
                      "caCertificates": {
                        "description": "OPTIONAL: The path to the file containing certificate authority certificates to use in verifying a presented server certificate.",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "caCrl": {
                        "description": "OPTIONAL: The path to the file containing the certificate revocation list (CRL) to use in verifying a presented server certificate.",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "clientCertificate": {
                        "description": "REQUIRED if mode is `MUTUAL`.",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "credentialName": {
                        "description": "The name of the secret that holds the TLS certs for the client including the CA certificates.",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "insecureSkipVerify": {
                        "description": "`insecureSkipVerify` specifies whether the proxy should skip verifying the CA signature and SAN for the server certificate corresponding to the host."
                      },
                      "mode": {
                        "description": "Indicates whether connections to this port should be secured using TLS.\n\nValid Options: DISABLE, SIMPLE, MUTUAL, ISTIO_MUTUAL",
                        "type": [
                          "string",
                          "null"
                        ],
                        "enum": [
                          "DISABLE",
                          "SIMPLE",
                          "MUTUAL",
                          "ISTIO_MUTUAL"
                        ]
                      },
                      "privateKey": {
                        "description": "REQUIRED if mode is `MUTUAL`.",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "sni": {
                        "description": "SNI string to present to the server during TLS handshake.",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "subjectAltNames": {
                        "description": "A list of alternate names to verify the subject identity in the certificate.",
                        "type": [
                          "array",
                          "null"
                        ],
                        "items": {
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      }
                    }
                  },
                  "tunnel": {
                    "description": "Configuration of tunneling TCP over other transport or application layers for the host configured in the DestinationRule.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "required": [
                      "targetHost",
                      "targetPort"
                    ],
                    "properties": {
                      "protocol": {
                        "description": "Specifies which protocol to use for tunneling the downstream connection.",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "targetHost": {
                        "description": "Specifies a host to which the downstream connection is tunneled.",
                        "type": "string"
                      },
                      "targetPort": {
                        "description": "Specifies a port to which the downstream connection is tunneled.",
                        "type": "integer",
                        "maximum": 4294967295,
                        "minimum": 0
                      }
                    }
                  }
                }
              },
              "workloadSelector": {
                "description": "Criteria used to select the specific set of pods/VMs on which this `DestinationRule` configuration should be applied.",
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "matchLabels": {
                    "description": "One or more labels that indicate a specific set of pods/VMs on which a policy should be applied.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "maxProperties": 4096,
                    "additionalProperties": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "maxLength": 63,
                      "x-kubernetes-validations": [
                        {
                          "message": "wildcard not allowed in label value match",
                          "rule": "!self.contains(\"*\")"
                        }
                      ]
                    },
                    "x-kubernetes-validations": [
                      {
                        "message": "wildcard not allowed in label key match",
                        "rule": "self.all(key, !key.contains(\"*\"))"
                      },
                      {
                        "message": "key must not be empty",
                        "rule": "self.all(key, key.size() != 0)"
                      }
                    ]
                  }
                }
              }
            }
          },
          "status": {
            "x-kubernetes-preserve-unknown-fields": true
          }
        },
        "x-kubernetes-group-version-kind": [
          {
            "group": "networking.istio.io",
            "kind": "DestinationRule",
            "version": "v1"
          }
        ]
      }
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": [
        "string",
        "null"
      ],
      "enum": [
        "DestinationRuleList"
      ]
    },
    "metadata": {
      "description": "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.",
      "type": [
        "object",
        "null"
      ],
      "properties": {
        "continue": {
          "description": "continue may be set if the user set a limit on the number of items returned, and indicates that the server has more data available. The value is opaque and may be used to issue another request to the endpoint that served this list to retrieve the next set of available objects. Continuing a consistent list may not be possible if the server configuration has changed or more than a few minutes have passed. The resourceVersion field returned when using this continue value will be identical to the value in the first response, unless you have received this token from an error message.",
          "type": [
            "string",
            "null"
          ]
        },
        "remainingItemCount": {
          "description": "remainingItemCount is the number of subsequent items in the list which are not included in this list response. If the list request contained label or field selectors, then the number of remaining items is unknown and the field will be left unset and omitted during serialization. If the list is complete (either because it is not chunking or because this is the last chunk), then there are no more remaining items and this field will be left unset and omitted during serialization. Servers older than v1.15 do not set this field. The intended use of the remainingItemCount is *estimating* the size of a collection. Clients should not rely on the remainingItemCount to be set or to be exact.",
          "type": [
            "integer",
            "null"
          ],
          "format": "int64"
        },
        "resourceVersion": {
          "description": "String that identifies the server's internal version of this object that can be used by clients to determine when objects have changed. Value must be treated as opaque by clients and passed unmodified back to the server. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
          "type": [
            "string",
            "null"
          ]
        },
        "selfLink": {
          "description": "Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.",
          "type": [
            "string",
            "null"
          ]
        }
      }
    }
  },
  "x-kubernetes-group-version-kind": [
    {
      "group": "networking.istio.io",
      "kind": "DestinationRuleList",
      "version": "v1"
    }
  ],
  "$schema": "http://json-schema.org/schema#"
}