{
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": [
        "string",
        "null"
      ],
      "enum": [
        "kafka.strimzi.io/v1beta2"
      ]
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": [
        "string",
        "null"
      ],
      "enum": [
        "KafkaNodePool"
      ]
    },
    "metadata": {
      "description": "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.",
      "type": [
        "object",
        "null"
      ],
      "properties": {
        "annotations": {
          "description": "Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations",
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "creationTimestamp": {
          "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.",
          "type": [
            "string",
            "null"
          ],
          "format": "date-time"
        },
        "deletionGracePeriodSeconds": {
          "description": "Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.",
          "type": [
            "integer",
            "null"
          ],
          "format": "int64"
        },
        "deletionTimestamp": {
          "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.",
          "type": [
            "string",
            "null"
          ],
          "format": "date-time"
        },
        "finalizers": {
          "description": "Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "type": [
              "string",
              "null"
            ]
          },
          "x-kubernetes-list-type": "set",
          "x-kubernetes-patch-strategy": "merge"
        },
        "generateName": {
          "description": "GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\n\nIf this field is specified and the generated name exists, the server will return a 409.\n\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency",
          "type": [
            "string",
            "null"
          ]
        },
        "generation": {
          "description": "A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.",
          "type": [
            "integer",
            "null"
          ],
          "format": "int64"
        },
        "labels": {
          "description": "Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels",
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "managedFields": {
          "description": "ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn't need to set or understand this field. A workflow can be the user's name, a controller's name, or the name of a specific apply path like \"ci-cd\". The set of fields is always in the version that the workflow used when modifying the object.",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "description": "ManagedFieldsEntry is a workflow-id, a FieldSet and the group version of the resource that the fieldset applies to.",
            "type": [
              "object",
              "null"
            ],
            "properties": {
              "apiVersion": {
                "description": "APIVersion defines the version of this resource that this field set applies to. The format is \"group/version\" just like the top-level APIVersion field. It is necessary to track the version of a field set because it cannot be automatically converted.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "fieldsType": {
                "description": "FieldsType is the discriminator for the different fields format and version. There is currently only one possible value: \"FieldsV1\"",
                "type": [
                  "string",
                  "null"
                ]
              },
              "fieldsV1": {
                "description": "FieldsV1 stores a set of fields in a data structure like a Trie, in JSON format.\n\nEach key is either a '.' representing the field itself, and will always map to an empty set, or a string representing a sub-field or item. The string will follow one of these four formats: 'f:<name>', where <name> is the name of a field in a struct, or key in a map 'v:<value>', where <value> is the exact json formatted value of a list item 'i:<index>', where <index> is position of a item in a list 'k:<keys>', where <keys> is a map of  a list item's key fields to their unique values If a key maps to an empty Fields value, the field that key represents is part of the set.\n\nThe exact format is defined in sigs.k8s.io/structured-merge-diff",
                "type": [
                  "object",
                  "null"
                ]
              },
              "manager": {
                "description": "Manager is an identifier of the workflow managing these fields.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "operation": {
                "description": "Operation is the type of operation which lead to this ManagedFieldsEntry being created. The only valid values for this field are 'Apply' and 'Update'.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "subresource": {
                "description": "Subresource is the name of the subresource used to update that object, or empty string if the object was updated through the main resource. The value of this field is used to distinguish between managers, even if they share the same name. For example, a status update will be distinct from a regular update using the same manager name. Note that the APIVersion field is not related to the Subresource field and it always corresponds to the version of the main resource.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "time": {
                "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.",
                "type": [
                  "string",
                  "null"
                ],
                "format": "date-time"
              }
            }
          },
          "x-kubernetes-list-type": "atomic"
        },
        "name": {
          "description": "Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names",
          "type": [
            "string",
            "null"
          ]
        },
        "namespace": {
          "description": "Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \"default\" namespace, but \"default\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\n\nMust be a DNS_LABEL. Cannot be updated. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces",
          "type": [
            "string",
            "null"
          ]
        },
        "ownerReferences": {
          "description": "List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "description": "OwnerReference contains enough information to let you identify an owning object. An owning object must be in the same namespace as the dependent, or be cluster-scoped, so there is no namespace field.",
            "type": [
              "object",
              "null"
            ],
            "required": [
              "apiVersion",
              "kind",
              "name",
              "uid"
            ],
            "properties": {
              "apiVersion": {
                "description": "API version of the referent.",
                "type": "string"
              },
              "blockOwnerDeletion": {
                "description": "If true, AND if the owner has the \"foregroundDeletion\" finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. See https://kubernetes.io/docs/concepts/architecture/garbage-collection/#foreground-deletion for how the garbage collector interacts with this field and enforces the foreground deletion. Defaults to false. To set this field, a user needs \"delete\" permission of the owner, otherwise 422 (Unprocessable Entity) will be returned.",
                "type": [
                  "boolean",
                  "null"
                ]
              },
              "controller": {
                "description": "If true, this reference points to the managing controller.",
                "type": [
                  "boolean",
                  "null"
                ]
              },
              "kind": {
                "description": "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                "type": "string"
              },
              "name": {
                "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names",
                "type": "string"
              },
              "uid": {
                "description": "UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids",
                "type": "string"
              }
            },
            "x-kubernetes-map-type": "atomic"
          },
          "x-kubernetes-list-map-keys": [
            "uid"
          ],
          "x-kubernetes-list-type": "map",
          "x-kubernetes-patch-merge-key": "uid",
          "x-kubernetes-patch-strategy": "merge"
        },
        "resourceVersion": {
          "description": "An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\n\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
          "type": [
            "string",
            "null"
          ]
        },
        "selfLink": {
          "description": "Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.",
          "type": [
            "string",
            "null"
          ]
        },
        "uid": {
          "description": "UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\n\nPopulated by the system. Read-only. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids",
          "type": [
            "string",
            "null"
          ]
        }
      }
    },
    "spec": {
      "description": "The specification of the KafkaNodePool.",
      "type": [
        "object",
        "null"
      ],
      "required": [
        "replicas",
        "storage",
        "roles"
      ],
      "properties": {
        "jvmOptions": {
          "description": "JVM Options for pods.",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "-XX": {
              "description": "A map of -XX options to the JVM.",
              "type": [
                "object",
                "null"
              ],
              "additionalProperties": {
                "type": [
                  "string",
                  "null"
                ]
              }
            },
            "-Xms": {
              "description": "-Xms option to to the JVM.",
              "type": [
                "string",
                "null"
              ],
              "pattern": "^[0-9]+[mMgG]?$"
            },
            "-Xmx": {
              "description": "-Xmx option to to the JVM.",
              "type": [
                "string",
                "null"
              ],
              "pattern": "^[0-9]+[mMgG]?$"
            },
            "gcLoggingEnabled": {
              "description": "Specifies whether the Garbage Collection logging is enabled. The default is false.",
              "type": [
                "boolean",
                "null"
              ]
            },
            "javaSystemProperties": {
              "description": "A map of additional system properties which will be passed using the `-D` option to the JVM.",
              "type": [
                "array",
                "null"
              ],
              "items": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "name": {
                    "description": "The system property name.",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "value": {
                    "description": "The system property value.",
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                }
              }
            }
          }
        },
        "replicas": {
          "description": "The number of pods in the pool.",
          "type": "integer",
          "minimum": 0
        },
        "resources": {
          "description": "CPU and memory resources to reserve.",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "claims": {
              "type": [
                "array",
                "null"
              ],
              "items": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "name": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "request": {
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                }
              }
            },
            "limits": {
              "type": [
                "object",
                "null"
              ],
              "additionalProperties": {
                "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                "x-kubernetes-int-or-string": true
              }
            },
            "requests": {
              "type": [
                "object",
                "null"
              ],
              "additionalProperties": {
                "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                "x-kubernetes-int-or-string": true
              }
            }
          }
        },
        "roles": {
          "description": "The roles assigned to the node pool. Supported values are `broker` and `controller`. This property is required.",
          "type": "array",
          "items": {
            "type": [
              "string",
              "null"
            ],
            "enum": [
              "controller",
              "broker"
            ]
          }
        },
        "storage": {
          "description": "Storage configuration (disk). Cannot be updated.",
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "class": {
              "description": "The storage class to use for dynamic volume allocation.",
              "type": [
                "string",
                "null"
              ]
            },
            "deleteClaim": {
              "description": "Specifies if the persistent volume claim has to be deleted when the cluster is un-deployed.",
              "type": [
                "boolean",
                "null"
              ]
            },
            "id": {
              "description": "Storage identification number. It is mandatory only for storage volumes defined in a storage of type 'jbod'.",
              "type": [
                "integer",
                "null"
              ],
              "minimum": 0
            },
            "kraftMetadata": {
              "description": "Specifies whether this volume should be used for storing KRaft metadata. This property is optional. When set, the only currently supported value is `shared`. At most one volume can have this property set.",
              "type": [
                "string",
                "null"
              ],
              "enum": [
                "shared"
              ]
            },
            "overrides": {
              "description": "As of Strimzi 0.46.0, the storage overrides for individual brokers are not supported anymore and this option is ignored.",
              "type": [
                "array",
                "null"
              ],
              "items": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "broker": {
                    "description": "Id of the kafka broker (broker identifier).",
                    "type": [
                      "integer",
                      "null"
                    ]
                  },
                  "class": {
                    "description": "The storage class to use for dynamic volume allocation for this broker.",
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                }
              }
            },
            "selector": {
              "description": "Specifies a specific persistent volume to use. It contains key:value pairs representing labels for selecting such a volume.",
              "type": [
                "object",
                "null"
              ],
              "additionalProperties": {
                "type": [
                  "string",
                  "null"
                ]
              }
            },
            "size": {
              "description": "When `type=persistent-claim`, defines the size of the persistent volume claim, such as 100Gi. Mandatory when `type=persistent-claim`.",
              "type": [
                "string",
                "null"
              ]
            },
            "sizeLimit": {
              "description": "When type=ephemeral, defines the total amount of local storage required for this EmptyDir volume (for example 1Gi).",
              "type": [
                "string",
                "null"
              ],
              "pattern": "^([0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$"
            },
            "type": {
              "description": "Storage type, must be either 'ephemeral', 'persistent-claim', or 'jbod'.",
              "type": "string",
              "enum": [
                "ephemeral",
                "persistent-claim",
                "jbod"
              ]
            },
            "volumes": {
              "description": "List of volumes as Storage objects representing the JBOD disks array.",
              "type": [
                "array",
                "null"
              ],
              "items": {
                "type": [
                  "object",
                  "null"
                ],
                "required": [
                  "type"
                ],
                "properties": {
                  "class": {
                    "description": "The storage class to use for dynamic volume allocation.",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "deleteClaim": {
                    "description": "Specifies if the persistent volume claim has to be deleted when the cluster is un-deployed.",
                    "type": [
                      "boolean",
                      "null"
                    ]
                  },
                  "id": {
                    "description": "Storage identification number. Mandatory for storage volumes defined with a `jbod` storage type configuration.",
                    "type": [
                      "integer",
                      "null"
                    ],
                    "minimum": 0
                  },
                  "kraftMetadata": {
                    "description": "Specifies whether this volume should be used for storing KRaft metadata. This property is optional. When set, the only currently supported value is `shared`. At most one volume can have this property set.",
                    "type": [
                      "string",
                      "null"
                    ],
                    "enum": [
                      "shared"
                    ]
                  },
                  "overrides": {
                    "description": "As of Strimzi 0.46.0, the storage overrides for individual brokers are not supported anymore and this option is ignored.",
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "broker": {
                          "description": "Id of the kafka broker (broker identifier).",
                          "type": [
                            "integer",
                            "null"
                          ]
                        },
                        "class": {
                          "description": "The storage class to use for dynamic volume allocation for this broker.",
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      }
                    }
                  },
                  "selector": {
                    "description": "Specifies a specific persistent volume to use. It contains key:value pairs representing labels for selecting such a volume.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  },
                  "size": {
                    "description": "When `type=persistent-claim`, defines the size of the persistent volume claim, such as 100Gi. Mandatory when `type=persistent-claim`.",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "sizeLimit": {
                    "description": "When type=ephemeral, defines the total amount of local storage required for this EmptyDir volume (for example 1Gi).",
                    "type": [
                      "string",
                      "null"
                    ],
                    "pattern": "^([0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$"
                  },
                  "type": {
                    "description": "Storage type, must be either 'ephemeral' or 'persistent-claim'.",
                    "type": "string",
                    "enum": [
                      "ephemeral",
                      "persistent-claim"
                    ]
                  }
                }
              }
            }
          }
        },
        "template": {
          "description": "Template for pool resources. The template allows users to specify how the resources belonging to this pool are generated.",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "initContainer": {
              "description": "Template for the Kafka init container.",
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "env": {
                  "description": "Environment variables which should be applied to the container.",
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "properties": {
                      "name": {
                        "description": "The environment variable key.",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "value": {
                        "description": "The environment variable value.",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "valueFrom": {
                        "description": "Reference to the secret or config map property to which the environment variable is set.",
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "configMapKeyRef": {
                            "description": "Reference to a key in a config map.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "key": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "name": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "optional": {
                                "type": [
                                  "boolean",
                                  "null"
                                ]
                              }
                            }
                          },
                          "secretKeyRef": {
                            "description": "Reference to a key in a secret.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "key": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "name": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "optional": {
                                "type": [
                                  "boolean",
                                  "null"
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "securityContext": {
                  "description": "Security context for the container.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "allowPrivilegeEscalation": {
                      "type": [
                        "boolean",
                        "null"
                      ]
                    },
                    "appArmorProfile": {
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "localhostProfile": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "type": {
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      }
                    },
                    "capabilities": {
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "add": {
                          "type": [
                            "array",
                            "null"
                          ],
                          "items": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        },
                        "drop": {
                          "type": [
                            "array",
                            "null"
                          ],
                          "items": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        }
                      }
                    },
                    "privileged": {
                      "type": [
                        "boolean",
                        "null"
                      ]
                    },
                    "procMount": {
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "readOnlyRootFilesystem": {
                      "type": [
                        "boolean",
                        "null"
                      ]
                    },
                    "runAsGroup": {
                      "type": [
                        "integer",
                        "null"
                      ]
                    },
                    "runAsNonRoot": {
                      "type": [
                        "boolean",
                        "null"
                      ]
                    },
                    "runAsUser": {
                      "type": [
                        "integer",
                        "null"
                      ]
                    },
                    "seLinuxOptions": {
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "level": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "role": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "type": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "user": {
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      }
                    },
                    "seccompProfile": {
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "localhostProfile": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "type": {
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      }
                    },
                    "windowsOptions": {
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "gmsaCredentialSpec": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "gmsaCredentialSpecName": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "hostProcess": {
                          "type": [
                            "boolean",
                            "null"
                          ]
                        },
                        "runAsUserName": {
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      }
                    }
                  }
                },
                "volumeMounts": {
                  "description": "Additional volume mounts which should be applied to the container.",
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "properties": {
                      "mountPath": {
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "mountPropagation": {
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "name": {
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "readOnly": {
                        "type": [
                          "boolean",
                          "null"
                        ]
                      },
                      "recursiveReadOnly": {
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "subPath": {
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "subPathExpr": {
                        "type": [
                          "string",
                          "null"
                        ]
                      }
                    }
                  }
                }
              }
            },
            "kafkaContainer": {
              "description": "Template for the Kafka broker container.",
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "env": {
                  "description": "Environment variables which should be applied to the container.",
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "properties": {
                      "name": {
                        "description": "The environment variable key.",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "value": {
                        "description": "The environment variable value.",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "valueFrom": {
                        "description": "Reference to the secret or config map property to which the environment variable is set.",
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "configMapKeyRef": {
                            "description": "Reference to a key in a config map.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "key": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "name": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "optional": {
                                "type": [
                                  "boolean",
                                  "null"
                                ]
                              }
                            }
                          },
                          "secretKeyRef": {
                            "description": "Reference to a key in a secret.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "key": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "name": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "optional": {
                                "type": [
                                  "boolean",
                                  "null"
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "securityContext": {
                  "description": "Security context for the container.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "allowPrivilegeEscalation": {
                      "type": [
                        "boolean",
                        "null"
                      ]
                    },
                    "appArmorProfile": {
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "localhostProfile": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "type": {
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      }
                    },
                    "capabilities": {
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "add": {
                          "type": [
                            "array",
                            "null"
                          ],
                          "items": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        },
                        "drop": {
                          "type": [
                            "array",
                            "null"
                          ],
                          "items": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        }
                      }
                    },
                    "privileged": {
                      "type": [
                        "boolean",
                        "null"
                      ]
                    },
                    "procMount": {
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "readOnlyRootFilesystem": {
                      "type": [
                        "boolean",
                        "null"
                      ]
                    },
                    "runAsGroup": {
                      "type": [
                        "integer",
                        "null"
                      ]
                    },
                    "runAsNonRoot": {
                      "type": [
                        "boolean",
                        "null"
                      ]
                    },
                    "runAsUser": {
                      "type": [
                        "integer",
                        "null"
                      ]
                    },
                    "seLinuxOptions": {
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "level": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "role": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "type": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "user": {
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      }
                    },
                    "seccompProfile": {
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "localhostProfile": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "type": {
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      }
                    },
                    "windowsOptions": {
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "gmsaCredentialSpec": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "gmsaCredentialSpecName": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "hostProcess": {
                          "type": [
                            "boolean",
                            "null"
                          ]
                        },
                        "runAsUserName": {
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      }
                    }
                  }
                },
                "volumeMounts": {
                  "description": "Additional volume mounts which should be applied to the container.",
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "properties": {
                      "mountPath": {
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "mountPropagation": {
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "name": {
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "readOnly": {
                        "type": [
                          "boolean",
                          "null"
                        ]
                      },
                      "recursiveReadOnly": {
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "subPath": {
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "subPathExpr": {
                        "type": [
                          "string",
                          "null"
                        ]
                      }
                    }
                  }
                }
              }
            },
            "perPodIngress": {
              "description": "Template for Kafka per-pod `Ingress` used for access from outside of Kubernetes.",
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "metadata": {
                  "description": "Metadata applied to the resource.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "annotations": {
                      "description": "Annotations added to the Kubernetes resource.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "additionalProperties": {
                        "type": [
                          "string",
                          "null"
                        ]
                      }
                    },
                    "labels": {
                      "description": "Labels added to the Kubernetes resource.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "additionalProperties": {
                        "type": [
                          "string",
                          "null"
                        ]
                      }
                    }
                  }
                }
              }
            },
            "perPodRoute": {
              "description": "Template for Kafka per-pod `Routes` used for access from outside of OpenShift.",
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "metadata": {
                  "description": "Metadata applied to the resource.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "annotations": {
                      "description": "Annotations added to the Kubernetes resource.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "additionalProperties": {
                        "type": [
                          "string",
                          "null"
                        ]
                      }
                    },
                    "labels": {
                      "description": "Labels added to the Kubernetes resource.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "additionalProperties": {
                        "type": [
                          "string",
                          "null"
                        ]
                      }
                    }
                  }
                }
              }
            },
            "perPodService": {
              "description": "Template for Kafka per-pod `Services` used for access from outside of Kubernetes.",
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "metadata": {
                  "description": "Metadata applied to the resource.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "annotations": {
                      "description": "Annotations added to the Kubernetes resource.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "additionalProperties": {
                        "type": [
                          "string",
                          "null"
                        ]
                      }
                    },
                    "labels": {
                      "description": "Labels added to the Kubernetes resource.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "additionalProperties": {
                        "type": [
                          "string",
                          "null"
                        ]
                      }
                    }
                  }
                }
              }
            },
            "persistentVolumeClaim": {
              "description": "Template for all Kafka `PersistentVolumeClaims`.",
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "metadata": {
                  "description": "Metadata applied to the resource.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "annotations": {
                      "description": "Annotations added to the Kubernetes resource.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "additionalProperties": {
                        "type": [
                          "string",
                          "null"
                        ]
                      }
                    },
                    "labels": {
                      "description": "Labels added to the Kubernetes resource.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "additionalProperties": {
                        "type": [
                          "string",
                          "null"
                        ]
                      }
                    }
                  }
                }
              }
            },
            "pod": {
              "description": "Template for Kafka `Pods`.",
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "affinity": {
                  "description": "The pod's affinity rules.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "nodeAffinity": {
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "preferredDuringSchedulingIgnoredDuringExecution": {
                          "type": [
                            "array",
                            "null"
                          ],
                          "items": {
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "preference": {
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "properties": {
                                  "matchExpressions": {
                                    "type": [
                                      "array",
                                      "null"
                                    ],
                                    "items": {
                                      "type": [
                                        "object",
                                        "null"
                                      ],
                                      "properties": {
                                        "key": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        },
                                        "operator": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        },
                                        "values": {
                                          "type": [
                                            "array",
                                            "null"
                                          ],
                                          "items": {
                                            "type": [
                                              "string",
                                              "null"
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "matchFields": {
                                    "type": [
                                      "array",
                                      "null"
                                    ],
                                    "items": {
                                      "type": [
                                        "object",
                                        "null"
                                      ],
                                      "properties": {
                                        "key": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        },
                                        "operator": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        },
                                        "values": {
                                          "type": [
                                            "array",
                                            "null"
                                          ],
                                          "items": {
                                            "type": [
                                              "string",
                                              "null"
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "weight": {
                                "type": [
                                  "integer",
                                  "null"
                                ]
                              }
                            }
                          }
                        },
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "nodeSelectorTerms": {
                              "type": [
                                "array",
                                "null"
                              ],
                              "items": {
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "properties": {
                                  "matchExpressions": {
                                    "type": [
                                      "array",
                                      "null"
                                    ],
                                    "items": {
                                      "type": [
                                        "object",
                                        "null"
                                      ],
                                      "properties": {
                                        "key": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        },
                                        "operator": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        },
                                        "values": {
                                          "type": [
                                            "array",
                                            "null"
                                          ],
                                          "items": {
                                            "type": [
                                              "string",
                                              "null"
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "matchFields": {
                                    "type": [
                                      "array",
                                      "null"
                                    ],
                                    "items": {
                                      "type": [
                                        "object",
                                        "null"
                                      ],
                                      "properties": {
                                        "key": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        },
                                        "operator": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        },
                                        "values": {
                                          "type": [
                                            "array",
                                            "null"
                                          ],
                                          "items": {
                                            "type": [
                                              "string",
                                              "null"
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "podAffinity": {
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "preferredDuringSchedulingIgnoredDuringExecution": {
                          "type": [
                            "array",
                            "null"
                          ],
                          "items": {
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "podAffinityTerm": {
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "properties": {
                                  "labelSelector": {
                                    "type": [
                                      "object",
                                      "null"
                                    ],
                                    "properties": {
                                      "matchExpressions": {
                                        "type": [
                                          "array",
                                          "null"
                                        ],
                                        "items": {
                                          "type": [
                                            "object",
                                            "null"
                                          ],
                                          "properties": {
                                            "key": {
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            },
                                            "operator": {
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            },
                                            "values": {
                                              "type": [
                                                "array",
                                                "null"
                                              ],
                                              "items": {
                                                "type": [
                                                  "string",
                                                  "null"
                                                ]
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "matchLabels": {
                                        "type": [
                                          "object",
                                          "null"
                                        ],
                                        "additionalProperties": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        }
                                      }
                                    }
                                  },
                                  "matchLabelKeys": {
                                    "type": [
                                      "array",
                                      "null"
                                    ],
                                    "items": {
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    }
                                  },
                                  "mismatchLabelKeys": {
                                    "type": [
                                      "array",
                                      "null"
                                    ],
                                    "items": {
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    }
                                  },
                                  "namespaceSelector": {
                                    "type": [
                                      "object",
                                      "null"
                                    ],
                                    "properties": {
                                      "matchExpressions": {
                                        "type": [
                                          "array",
                                          "null"
                                        ],
                                        "items": {
                                          "type": [
                                            "object",
                                            "null"
                                          ],
                                          "properties": {
                                            "key": {
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            },
                                            "operator": {
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            },
                                            "values": {
                                              "type": [
                                                "array",
                                                "null"
                                              ],
                                              "items": {
                                                "type": [
                                                  "string",
                                                  "null"
                                                ]
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "matchLabels": {
                                        "type": [
                                          "object",
                                          "null"
                                        ],
                                        "additionalProperties": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        }
                                      }
                                    }
                                  },
                                  "namespaces": {
                                    "type": [
                                      "array",
                                      "null"
                                    ],
                                    "items": {
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    }
                                  },
                                  "topologyKey": {
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  }
                                }
                              },
                              "weight": {
                                "type": [
                                  "integer",
                                  "null"
                                ]
                              }
                            }
                          }
                        },
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                          "type": [
                            "array",
                            "null"
                          ],
                          "items": {
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "labelSelector": {
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "properties": {
                                  "matchExpressions": {
                                    "type": [
                                      "array",
                                      "null"
                                    ],
                                    "items": {
                                      "type": [
                                        "object",
                                        "null"
                                      ],
                                      "properties": {
                                        "key": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        },
                                        "operator": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        },
                                        "values": {
                                          "type": [
                                            "array",
                                            "null"
                                          ],
                                          "items": {
                                            "type": [
                                              "string",
                                              "null"
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "matchLabels": {
                                    "type": [
                                      "object",
                                      "null"
                                    ],
                                    "additionalProperties": {
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    }
                                  }
                                }
                              },
                              "matchLabelKeys": {
                                "type": [
                                  "array",
                                  "null"
                                ],
                                "items": {
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                }
                              },
                              "mismatchLabelKeys": {
                                "type": [
                                  "array",
                                  "null"
                                ],
                                "items": {
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                }
                              },
                              "namespaceSelector": {
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "properties": {
                                  "matchExpressions": {
                                    "type": [
                                      "array",
                                      "null"
                                    ],
                                    "items": {
                                      "type": [
                                        "object",
                                        "null"
                                      ],
                                      "properties": {
                                        "key": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        },
                                        "operator": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        },
                                        "values": {
                                          "type": [
                                            "array",
                                            "null"
                                          ],
                                          "items": {
                                            "type": [
                                              "string",
                                              "null"
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "matchLabels": {
                                    "type": [
                                      "object",
                                      "null"
                                    ],
                                    "additionalProperties": {
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    }
                                  }
                                }
                              },
                              "namespaces": {
                                "type": [
                                  "array",
                                  "null"
                                ],
                                "items": {
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                }
                              },
                              "topologyKey": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            }
                          }
                        }
                      }
                    },
                    "podAntiAffinity": {
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "preferredDuringSchedulingIgnoredDuringExecution": {
                          "type": [
                            "array",
                            "null"
                          ],
                          "items": {
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "podAffinityTerm": {
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "properties": {
                                  "labelSelector": {
                                    "type": [
                                      "object",
                                      "null"
                                    ],
                                    "properties": {
                                      "matchExpressions": {
                                        "type": [
                                          "array",
                                          "null"
                                        ],
                                        "items": {
                                          "type": [
                                            "object",
                                            "null"
                                          ],
                                          "properties": {
                                            "key": {
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            },
                                            "operator": {
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            },
                                            "values": {
                                              "type": [
                                                "array",
                                                "null"
                                              ],
                                              "items": {
                                                "type": [
                                                  "string",
                                                  "null"
                                                ]
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "matchLabels": {
                                        "type": [
                                          "object",
                                          "null"
                                        ],
                                        "additionalProperties": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        }
                                      }
                                    }
                                  },
                                  "matchLabelKeys": {
                                    "type": [
                                      "array",
                                      "null"
                                    ],
                                    "items": {
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    }
                                  },
                                  "mismatchLabelKeys": {
                                    "type": [
                                      "array",
                                      "null"
                                    ],
                                    "items": {
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    }
                                  },
                                  "namespaceSelector": {
                                    "type": [
                                      "object",
                                      "null"
                                    ],
                                    "properties": {
                                      "matchExpressions": {
                                        "type": [
                                          "array",
                                          "null"
                                        ],
                                        "items": {
                                          "type": [
                                            "object",
                                            "null"
                                          ],
                                          "properties": {
                                            "key": {
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            },
                                            "operator": {
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            },
                                            "values": {
                                              "type": [
                                                "array",
                                                "null"
                                              ],
                                              "items": {
                                                "type": [
                                                  "string",
                                                  "null"
                                                ]
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "matchLabels": {
                                        "type": [
                                          "object",
                                          "null"
                                        ],
                                        "additionalProperties": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        }
                                      }
                                    }
                                  },
                                  "namespaces": {
                                    "type": [
                                      "array",
                                      "null"
                                    ],
                                    "items": {
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    }
                                  },
                                  "topologyKey": {
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  }
                                }
                              },
                              "weight": {
                                "type": [
                                  "integer",
                                  "null"
                                ]
                              }
                            }
                          }
                        },
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                          "type": [
                            "array",
                            "null"
                          ],
                          "items": {
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "labelSelector": {
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "properties": {
                                  "matchExpressions": {
                                    "type": [
                                      "array",
                                      "null"
                                    ],
                                    "items": {
                                      "type": [
                                        "object",
                                        "null"
                                      ],
                                      "properties": {
                                        "key": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        },
                                        "operator": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        },
                                        "values": {
                                          "type": [
                                            "array",
                                            "null"
                                          ],
                                          "items": {
                                            "type": [
                                              "string",
                                              "null"
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "matchLabels": {
                                    "type": [
                                      "object",
                                      "null"
                                    ],
                                    "additionalProperties": {
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    }
                                  }
                                }
                              },
                              "matchLabelKeys": {
                                "type": [
                                  "array",
                                  "null"
                                ],
                                "items": {
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                }
                              },
                              "mismatchLabelKeys": {
                                "type": [
                                  "array",
                                  "null"
                                ],
                                "items": {
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                }
                              },
                              "namespaceSelector": {
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "properties": {
                                  "matchExpressions": {
                                    "type": [
                                      "array",
                                      "null"
                                    ],
                                    "items": {
                                      "type": [
                                        "object",
                                        "null"
                                      ],
                                      "properties": {
                                        "key": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        },
                                        "operator": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        },
                                        "values": {
                                          "type": [
                                            "array",
                                            "null"
                                          ],
                                          "items": {
                                            "type": [
                                              "string",
                                              "null"
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "matchLabels": {
                                    "type": [
                                      "object",
                                      "null"
                                    ],
                                    "additionalProperties": {
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    }
                                  }
                                }
                              },
                              "namespaces": {
                                "type": [
                                  "array",
                                  "null"
                                ],
                                "items": {
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                }
                              },
                              "topologyKey": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "dnsConfig": {
                  "description": "The pod's DNSConfig. If specified, it will be merged to the generated DNS configuration based on the DNSPolicy.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "nameservers": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": [
                          "string",
                          "null"
                        ]
                      }
                    },
                    "options": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "name": {
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "value": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        }
                      }
                    },
                    "searches": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": [
                          "string",
                          "null"
                        ]
                      }
                    }
                  }
                },
                "dnsPolicy": {
                  "description": "The pod's DNSPolicy. Defaults to `ClusterFirst`. Valid values are `ClusterFirstWithHostNet`, `ClusterFirst`, `Default` or `None`.",
                  "type": [
                    "string",
                    "null"
                  ],
                  "enum": [
                    "ClusterFirst",
                    "ClusterFirstWithHostNet",
                    "Default",
                    "None"
                  ]
                },
                "enableServiceLinks": {
                  "description": "Indicates whether information about services should be injected into Pod's environment variables.",
                  "type": [
                    "boolean",
                    "null"
                  ]
                },
                "hostAliases": {
                  "description": "The pod's HostAliases. HostAliases is an optional list of hosts and IPs that will be injected into the Pod's hosts file if specified.",
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "properties": {
                      "hostnames": {
                        "type": [
                          "array",
                          "null"
                        ],
                        "items": {
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      },
                      "ip": {
                        "type": [
                          "string",
                          "null"
                        ]
                      }
                    }
                  }
                },
                "imagePullSecrets": {
                  "description": "List of references to secrets in the same namespace to use for pulling any of the images used by this Pod. When the `STRIMZI_IMAGE_PULL_SECRETS` environment variable in Cluster Operator and the `imagePullSecrets` option are specified, only the `imagePullSecrets` variable is used and the `STRIMZI_IMAGE_PULL_SECRETS` variable is ignored.",
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "properties": {
                      "name": {
                        "type": [
                          "string",
                          "null"
                        ]
                      }
                    }
                  }
                },
                "metadata": {
                  "description": "Metadata applied to the resource.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "annotations": {
                      "description": "Annotations added to the Kubernetes resource.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "additionalProperties": {
                        "type": [
                          "string",
                          "null"
                        ]
                      }
                    },
                    "labels": {
                      "description": "Labels added to the Kubernetes resource.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "additionalProperties": {
                        "type": [
                          "string",
                          "null"
                        ]
                      }
                    }
                  }
                },
                "priorityClassName": {
                  "description": "The name of the priority class used to assign priority to the pods. ",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "schedulerName": {
                  "description": "The name of the scheduler used to dispatch this `Pod`. If not specified, the default scheduler will be used.",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "securityContext": {
                  "description": "Configures pod-level security attributes and common container settings.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "appArmorProfile": {
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "localhostProfile": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "type": {
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      }
                    },
                    "fsGroup": {
                      "type": [
                        "integer",
                        "null"
                      ]
                    },
                    "fsGroupChangePolicy": {
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "runAsGroup": {
                      "type": [
                        "integer",
                        "null"
                      ]
                    },
                    "runAsNonRoot": {
                      "type": [
                        "boolean",
                        "null"
                      ]
                    },
                    "runAsUser": {
                      "type": [
                        "integer",
                        "null"
                      ]
                    },
                    "seLinuxChangePolicy": {
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "seLinuxOptions": {
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "level": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "role": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "type": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "user": {
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      }
                    },
                    "seccompProfile": {
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "localhostProfile": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "type": {
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      }
                    },
                    "supplementalGroups": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": [
                          "integer",
                          "null"
                        ]
                      }
                    },
                    "supplementalGroupsPolicy": {
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "sysctls": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "name": {
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "value": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        }
                      }
                    },
                    "windowsOptions": {
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "gmsaCredentialSpec": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "gmsaCredentialSpecName": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "hostProcess": {
                          "type": [
                            "boolean",
                            "null"
                          ]
                        },
                        "runAsUserName": {
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      }
                    }
                  }
                },
                "terminationGracePeriodSeconds": {
                  "description": "The grace period is the duration in seconds after the processes running in the pod are sent a termination signal, and the time when the processes are forcibly halted with a kill signal. Set this value to longer than the expected cleanup time for your process. Value must be a non-negative integer. A zero value indicates delete immediately. You might need to increase the grace period for very large Kafka clusters, so that the Kafka brokers have enough time to transfer their work to another broker before they are terminated. Defaults to 30 seconds.",
                  "type": [
                    "integer",
                    "null"
                  ],
                  "minimum": 0
                },
                "tmpDirSizeLimit": {
                  "description": "Defines the total amount of pod memory allocated for the temporary `EmptyDir` volume `/tmp`. Specify the allocation in memory units, for example, `100Mi` for 100 mebibytes. Default value is `5Mi`. The `/tmp` volume is backed by pod memory, not disk storage, so avoid setting a high value as it consumes pod memory resources.",
                  "type": [
                    "string",
                    "null"
                  ],
                  "pattern": "^([0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$"
                },
                "tolerations": {
                  "description": "The pod's tolerations.",
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "properties": {
                      "effect": {
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "key": {
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "operator": {
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "tolerationSeconds": {
                        "type": [
                          "integer",
                          "null"
                        ]
                      },
                      "value": {
                        "type": [
                          "string",
                          "null"
                        ]
                      }
                    }
                  }
                },
                "topologySpreadConstraints": {
                  "description": "The pod's topology spread constraints.",
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "properties": {
                      "labelSelector": {
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "matchExpressions": {
                            "type": [
                              "array",
                              "null"
                            ],
                            "items": {
                              "type": [
                                "object",
                                "null"
                              ],
                              "properties": {
                                "key": {
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                },
                                "operator": {
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                },
                                "values": {
                                  "type": [
                                    "array",
                                    "null"
                                  ],
                                  "items": {
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  }
                                }
                              }
                            }
                          },
                          "matchLabels": {
                            "type": [
                              "object",
                              "null"
                            ],
                            "additionalProperties": {
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          }
                        }
                      },
                      "matchLabelKeys": {
                        "type": [
                          "array",
                          "null"
                        ],
                        "items": {
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      },
                      "maxSkew": {
                        "type": [
                          "integer",
                          "null"
                        ]
                      },
                      "minDomains": {
                        "type": [
                          "integer",
                          "null"
                        ]
                      },
                      "nodeAffinityPolicy": {
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "nodeTaintsPolicy": {
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "topologyKey": {
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "whenUnsatisfiable": {
                        "type": [
                          "string",
                          "null"
                        ]
                      }
                    }
                  }
                },
                "volumes": {
                  "description": "Additional volumes that can be mounted to the pod.",
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "properties": {
                      "configMap": {
                        "description": "`ConfigMap` to use to populate the volume.",
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "defaultMode": {
                            "type": [
                              "integer",
                              "null"
                            ]
                          },
                          "items": {
                            "type": [
                              "array",
                              "null"
                            ],
                            "items": {
                              "type": [
                                "object",
                                "null"
                              ],
                              "properties": {
                                "key": {
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                },
                                "mode": {
                                  "type": [
                                    "integer",
                                    "null"
                                  ]
                                },
                                "path": {
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                }
                              }
                            }
                          },
                          "name": {
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "optional": {
                            "type": [
                              "boolean",
                              "null"
                            ]
                          }
                        }
                      },
                      "csi": {
                        "description": "`CSIVolumeSource` object to use to populate the volume.",
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "driver": {
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "fsType": {
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "nodePublishSecretRef": {
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "name": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            }
                          },
                          "readOnly": {
                            "type": [
                              "boolean",
                              "null"
                            ]
                          },
                          "volumeAttributes": {
                            "type": [
                              "object",
                              "null"
                            ],
                            "additionalProperties": {
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          }
                        }
                      },
                      "emptyDir": {
                        "description": "`EmptyDir` to use to populate the volume.",
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "medium": {
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "sizeLimit": {
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "amount": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "format": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            }
                          }
                        }
                      },
                      "image": {
                        "description": "`ImageVolumeSource` object to use to populate the volume.",
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "pullPolicy": {
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "reference": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        }
                      },
                      "name": {
                        "description": "Name to use for the volume. Required.",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "persistentVolumeClaim": {
                        "description": "`PersistentVolumeClaim` object to use to populate the volume.",
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "claimName": {
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "readOnly": {
                            "type": [
                              "boolean",
                              "null"
                            ]
                          }
                        }
                      },
                      "secret": {
                        "description": "`Secret` to use to populate the volume.",
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "defaultMode": {
                            "type": [
                              "integer",
                              "null"
                            ]
                          },
                          "items": {
                            "type": [
                              "array",
                              "null"
                            ],
                            "items": {
                              "type": [
                                "object",
                                "null"
                              ],
                              "properties": {
                                "key": {
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                },
                                "mode": {
                                  "type": [
                                    "integer",
                                    "null"
                                  ]
                                },
                                "path": {
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                }
                              }
                            }
                          },
                          "optional": {
                            "type": [
                              "boolean",
                              "null"
                            ]
                          },
                          "secretName": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "podSet": {
              "description": "Template for Kafka `StrimziPodSet` resource.",
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "metadata": {
                  "description": "Metadata applied to the resource.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "annotations": {
                      "description": "Annotations added to the Kubernetes resource.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "additionalProperties": {
                        "type": [
                          "string",
                          "null"
                        ]
                      }
                    },
                    "labels": {
                      "description": "Labels added to the Kubernetes resource.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "additionalProperties": {
                        "type": [
                          "string",
                          "null"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "status": {
      "description": "The status of the KafkaNodePool.",
      "type": [
        "object",
        "null"
      ],
      "properties": {
        "clusterId": {
          "description": "Kafka cluster ID.",
          "type": [
            "string",
            "null"
          ]
        },
        "conditions": {
          "description": "List of status conditions.",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "type": [
              "object",
              "null"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "Last time the condition of a type changed from one status to another. The required format is 'yyyy-MM-ddTHH:mm:ssZ', in the UTC time zone.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "message": {
                "description": "Human-readable message indicating details about the condition's last transition.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "reason": {
                "description": "The reason for the condition's last transition (a single word in CamelCase).",
                "type": [
                  "string",
                  "null"
                ]
              },
              "status": {
                "description": "The status of the condition, either True, False or Unknown.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "type": {
                "description": "The unique identifier of a condition, used to distinguish between other conditions in the resource.",
                "type": [
                  "string",
                  "null"
                ]
              }
            }
          }
        },
        "labelSelector": {
          "description": "Label selector for pods providing this resource.",
          "type": [
            "string",
            "null"
          ]
        },
        "nodeIds": {
          "description": "Node IDs used by Kafka nodes in this pool.",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "type": [
              "integer",
              "null"
            ]
          }
        },
        "observedGeneration": {
          "description": "The generation of the CRD that was last reconciled by the operator.",
          "type": [
            "integer",
            "null"
          ]
        },
        "replicas": {
          "description": "The current number of pods being used to provide this resource.",
          "type": [
            "integer",
            "null"
          ]
        },
        "roles": {
          "description": "The roles currently assigned to this pool.",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "type": [
              "string",
              "null"
            ],
            "enum": [
              "controller",
              "broker"
            ]
          }
        }
      }
    }
  },
  "x-kubernetes-group-version-kind": [
    {
      "group": "kafka.strimzi.io",
      "kind": "KafkaNodePool",
      "version": "v1beta2"
    }
  ],
  "$schema": "http://json-schema.org/schema#"
}